{"version":3,"file":"static/js/225.11a3860f.chunk.js","mappings":"mOACA,QAAgC,oC,aCUhC,MAiEA,EAjEqBA,KACnB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,OACdC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAuB,IAEzDG,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACEF,GAAa,GACb,MAAMG,QAAaC,EAAAA,EAAAA,IAAiBV,GACpCG,EAAa,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MACfH,GAAa,EACf,CAAE,MAAOK,GACPC,EAAAA,GAAMD,MAAM,iCACd,GAEFE,EAAW,GACV,CAACb,IAgBJ,OACEc,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGX,GACCS,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,CACGhB,GApBiBA,KACxB,MAAMmB,EAAkBnB,EAASoB,OAAOC,MAAM,KACxCC,EAAgBH,EACnBI,MAAM,EAAGJ,EAAgBK,OAAS,GAClCC,KAAK,KACFC,EAAcP,EAAgBQ,MAEpC,OACET,EAAAA,EAAAA,MAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIb,SAAA,IAAAc,OAClBR,EAAa,MACjBR,EAAAA,EAAAA,KAAA,QAAMiB,UAAWC,EAAoBhB,SAAEU,MAC5B,EASIO,CAAiBjC,IAE9Bc,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CACHC,GAAI,CACFC,QAAS,OACTC,SAAU,OACVC,OAAQ,OACRC,UAAW,OACX,uCAAwC,CACtCA,UAAW,QAEb,uCAAwC,CACtCA,UAAW,SAEbvB,SAEDd,EAAMsC,KAAIC,IACF3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAW,CAAgBD,KAAMA,GAAhBA,EAAKE,aAKrC,C,uFCvEP,QAAwB,2BAAxB,EAA+D,+BAA/D,EAA2G,gC,aCY3G,MAAMC,EAAa,CACjBC,cAAe,SACfC,MAAO,QACP,uCAAwC,CACtCA,MAAO,SAET,wCAAyC,CACvCA,MAAO,SAET,wCAAyC,CACvCA,MAAO,UAIEJ,EAAcK,IAAqB,IAApB,KAAEN,GAAYM,EACxC,MAAOC,EAAaC,IAAkB7C,EAAAA,EAAAA,WAAuB,GAEvD8C,EAAcA,IAAMD,GAAe,GASzC,SAASE,EAAcC,GACF,WAAfA,EAAMC,MACRH,GAEJ,CAEA,OAbA3C,EAAAA,EAAAA,YAAU,KACR+C,OAAOC,iBAAiB,UAAWJ,GAC5B,KACLG,OAAOE,oBAAoB,UAAWL,EAAc,MAWtDjC,EAAAA,EAAAA,MAACuC,EAAAA,GAAQ,CAACtB,GAAIS,EAAW5B,SAAA,EACvBE,EAAAA,EAAAA,MAAA,OAAKa,UAAWC,EAAYhB,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKiB,UAAWC,EAAkB0B,QAnBrBC,IAAMV,GAAe,GAmBoBjC,SAAC,gBAGvDF,EAAAA,EAAAA,KAAA,OACE8C,IAAKnB,EAAKoB,WACVC,IAAI,aACJ/B,UAAWC,QAIflB,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,YAAWb,UAC5B+C,EAAAA,EAAAA,GAAiBtB,EAAKuB,UAEzBlD,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,QAAQ,QACRoC,MAAM,qBACN9B,GAAI,CAAE+B,UAAW,QAASlD,SAEzByB,EAAK0B,SAEPnB,IACClC,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CACRpB,YAAaA,EACbE,YAAaA,EACbT,KAAMA,MAGD,C","sources":["webpack://bookshelf-ts-dan/./src/Pages/CategoryPage.module.css?41bf","Pages/CategoryPage.tsx","webpack://bookshelf-ts-dan/./src/components/MainBookBox/MainBookBox.module.css?6870","components/MainBookBox/MainBookBox.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"colorLastWord\":\"CategoryPage_colorLastWord__mrmbF\"};","import { List, Typography } from '@mui/material';\nimport { Loader } from 'components/Loader/Loader';\nimport { MainBookBox } from 'components/MainBookBox/MainBookBox';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getCategoryBooks } from 'ts/apiBooks';\nimport { Book } from 'Types';\n\nimport style from './CategoryPage.module.css';\n\nconst CategoryPage = () => {\n  const { category } = useParams();\n  const [books, setBooks] = useState<Book[]>([]);\n  const [isLoading, setIsLoading] = useState<true | false>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getCategoryBooks(category);\n        setBooks(data?.data);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Something went wrong.Try again');\n      }\n    };\n    fetchData();\n  }, [category]);\n\n  const getColorCategory = (category: string) => {\n    const categorySplited = category.trim().split(' ');\n    const categoryStart = categorySplited\n      .slice(0, categorySplited.length - 1)\n      .join(' ');\n    const categotyEnd = categorySplited.pop();\n\n    return (\n      <Typography variant=\"h2\">\n        {`${categoryStart} `}\n        <span className={style.colorLastWord}>{categotyEnd}</span>\n      </Typography>\n    );\n  };\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {category && getColorCategory(category)}\n\n          <List\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              rowGap: '40px',\n              columnGap: '24px',\n              '@media screen and (min-width:1280px)': {\n                columnGap: '39px',\n              },\n              '@media screen and (min-width:1440px)': {\n                columnGap: '37px',\n              },\n            }}\n          >\n            {books.map(book => {\n              return <MainBookBox key={book._id} book={book} />;\n            })}\n          </List>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CategoryPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"MainBookBox_thumb__LWckL\",\"bookImage\":\"MainBookBox_bookImage__Ezw3p\",\"onHoverDiv\":\"MainBookBox_onHoverDiv__kHjib\"};","import { ListItem, Typography } from '@mui/material';\nimport { ModalBook } from 'components/ModalBook/ModalBook';\nimport { useEffect, useState } from 'react';\nimport { Book } from 'Types';\n\nimport { truncateBookName } from 'ts/helpers';\n\nimport style from './MainBookBox.module.css';\n\ntype Prop = {\n  book: Book;\n};\n\nconst itemStyles = {\n  flexDirection: 'column',\n  width: '335px',\n  '@media screen and (min-width: 768px)': {\n    width: '150px',\n  },\n  '@media screen and (min-width: 1280px)': {\n    width: '190px',\n  },\n  '@media screen and (min-width: 1440px)': {\n    width: '180px',\n  },\n};\n\nexport const MainBookBox = ({ book }: Prop) => {\n  const [isOpenModal, setIsOpenModal] = useState<true | false>(false);\n  const handleOpen = () => setIsOpenModal(true);\n  const handleClose = () => setIsOpenModal(false);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  function handleKeydown(event: { code: string }) {\n    if (event.code === 'Escape') {\n      handleClose();\n    }\n  }\n\n  return (\n    <ListItem sx={itemStyles} >\n      <div className={style.thumb}>\n        <div className={style.onHoverDiv} onClick={handleOpen}>\n          quick view\n        </div>\n        <img\n          src={book.book_image}\n          alt=\"book label\"\n          className={style.bookImage}\n        />\n      </div>\n\n      <Typography variant=\"subtitle1\">\n        {truncateBookName(book.title)}\n      </Typography>\n      <Typography\n        variant=\"body2\"\n        color=\"text.categoryTitle\"\n        sx={{ marginTop: 'auto' }}\n      >\n        {book.author}\n      </Typography>\n      {isOpenModal && (\n        <ModalBook\n          isOpenModal={isOpenModal}\n          handleClose={handleClose}\n          book={book}\n        />\n      )}\n    </ListItem>\n  );\n};\n"],"names":["CategoryPage","category","useParams","books","setBooks","useState","isLoading","setIsLoading","useEffect","async","data","getCategoryBooks","error","toast","fetchData","_jsx","_Fragment","children","Loader","_jsxs","categorySplited","trim","split","categoryStart","slice","length","join","categotyEnd","pop","Typography","variant","concat","className","style","getColorCategory","List","sx","display","flexWrap","rowGap","columnGap","map","book","MainBookBox","_id","itemStyles","flexDirection","width","_ref","isOpenModal","setIsOpenModal","handleClose","handleKeydown","event","code","window","addEventListener","removeEventListener","ListItem","onClick","handleOpen","src","book_image","alt","truncateBookName","title","color","marginTop","author","ModalBook"],"sourceRoot":""}