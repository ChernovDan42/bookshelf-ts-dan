{"version":3,"file":"static/js/591.22ae0fb9.chunk.js","mappings":"sHAGIA,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,kMACD,gB,sHCVG,SAASC,EAA0BC,GACxC,OAAOC,EAAAA,EAAAA,GAAqB,gBAAiBD,EAC/C,EAC0BE,EAAAA,EAAAA,GAAuB,gBAAiB,CAAC,OAAQ,KAAM,WAAY,S,cCD7F,MAAMC,EAAY,CAAC,gBAAiB,gBAAiB,QAAS,cAAe,WAAY,iBAAkB,iBAAkB,WAAY,OAAQ,kBAAmB,iBAAkB,gB,cCF/K,SAASC,EAA8BJ,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,EACnD,CACA,MACA,GAD8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,OAAQ,YAAa,YAAa,OAAQ,cAAe,gBAAiB,WAAY,kBAAmB,oBAAqB,UAAW,WAAY,YAAa,eAAgB,eAAgB,WAAY,WAAY,S,qDCI7S,SAAeG,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDR,EAAG,+DACD,aCFJ,GAAeO,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDR,EAAG,+DACD,YCFJ,GAAeO,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDR,EAAG,kDACD,kBCFJ,GAAeO,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDR,EAAG,mDACD,gB,cCPJ,MAAMK,EAAY,CAAC,YAAa,QAAS,YAAa,aAAc,WAAY,OAAQ,WAAY,QAAS,OAAQ,QAAS,OAAQ,WAkBhII,EAAoBA,CAACC,EAAOC,KAChC,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAOC,EAAWE,SAAUH,EAAO,OAADI,QAAQC,EAAAA,EAAAA,GAAWJ,EAAWK,QAAiC,SAAvBL,EAAWE,SAAsBH,EAAO,OAADI,QAAQC,EAAAA,EAAAA,GAAWJ,EAAWM,SAAkC,aAAvBN,EAAWE,SAA0BH,EAAO,WAADI,QAAYC,EAAAA,EAAAA,GAAWJ,EAAWM,SAAgC,YAArBN,EAAWO,OAAuBR,EAAOS,QAA6B,SAApBR,EAAWS,MAAmBV,EAAOW,MAA2B,mBAApBV,EAAWS,MAAiD,iBAApBT,EAAWS,OAA4BV,EAAOY,UAA+B,aAApBX,EAAWS,MAA2C,SAApBT,EAAWS,OAAoBV,EAAOa,cAAmC,UAApBZ,EAAWS,MAAwC,SAApBT,EAAWS,OAAoBV,EAAOc,UAAU,EA2BxmBC,GAAyBC,EAAAA,EAAAA,IAAO,MAAO,CAC3CC,KAAM,oBACN1B,KAAM,OACNO,qBAH6BkB,EAI5BE,IAAA,IAAC,MACFC,EAAK,WACLlB,GACDiB,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CAAC,EAAGD,EAAME,WAAWC,MAAO,CACzCC,aAAc,GACdC,UAAW,SACXC,UAAW,aACXC,SAAU,GACVC,QAAS,QACTC,OAAQ,QACRrB,OAAQY,EAAMU,MAAQV,GAAOW,QAAQC,KAAKC,QAC1CC,OAAQ,OACR,CAAC,KAAD7B,OAAM8B,EAAsBC,WAAa,CACvCC,SAAUjB,EAAMU,MAAQV,GAAOW,QAAQO,OAAOC,kBAE3B,UAApBrC,EAAWK,MAAoB,CAChCoB,SAAU,GACVH,aAAc,GACdK,OAAQ,QACRD,QAAS,SACY,UAApB1B,EAAWK,MAAoB,CAChCoB,SAAU,GACVH,aAAc,GACdI,QAAS,SACTY,SAAUpB,EAAME,WAAWmB,QAAQ,KACnC,IACIC,GAAqBzB,EAAAA,EAAAA,IAAO0B,EAAAA,EAAY,CAC5CzB,KAAM,oBACN1B,KAAM,OACNO,qBAHyBkB,EAIxB2B,IAAA,IAAC,MACFxB,EAAK,WACLlB,GACD0C,EAAA,OAAKvB,EAAAA,EAAAA,GAAS,CAAC,EAAGD,EAAME,WAAWC,MAAO,CACzCC,aAAc,GACdC,UAAW,SACXC,UAAW,aACXC,SAAU,GACVO,OAAQ,GACRN,QAAS,QACTC,OAAQ,QACRrB,OAAQY,EAAMU,MAAQV,GAAOW,QAAQC,KAAKC,QAC1C,CAAC,KAAD5B,OAAM8B,EAAsBU,eAAiB,CAC3CC,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQO,OAAOS,OAExD,CAAC,KAAD1C,OAAM8B,EAAsBC,WAAa,CACvCC,SAAUjB,EAAMU,MAAQV,GAAOW,QAAQO,OAAOC,iBAEhDS,WAAY5B,EAAM6B,YAAYC,OAAO,CAAC,QAAS,oBAAqB,CAClEC,SAAU/B,EAAM6B,YAAYE,SAASC,QAEvC,UAAW,CACTN,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQO,OAAOe,MAEtD,uBAAwB,CACtBP,gBAAiB,gBAGrB,CAAC,KAADzC,OAAM8B,EAAsBmB,WAAa,CACvCR,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQO,OAAOgB,SACtD,UAAW,CACTR,gBAAiB1B,EAAMU,KAAO,QAAHzB,OAAWe,EAAMU,KAAKC,QAAQO,OAAOiB,gBAAe,YAAAlD,OAAWe,EAAMU,KAAKC,QAAQO,OAAOkB,gBAAe,OAAAnD,OAAMe,EAAMU,KAAKC,QAAQO,OAAOmB,aAAY,OAAOC,EAAAA,EAAAA,IAAMtC,EAAMW,QAAQO,OAAOgB,SAAUlC,EAAMW,QAAQO,OAAOkB,gBAAkBpC,EAAMW,QAAQO,OAAOmB,cAEvR,uBAAwB,CACtBX,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQO,OAAOgB,WAG1D,CAAC,KAADjD,OAAM8B,EAAsBU,eAAiB,CAC3CC,gBAAiB1B,EAAMU,KAAO,QAAHzB,OAAWe,EAAMU,KAAKC,QAAQO,OAAOiB,gBAAe,YAAAlD,OAAWe,EAAMU,KAAKC,QAAQO,OAAOkB,gBAAe,OAAAnD,OAAMe,EAAMU,KAAKC,QAAQO,OAAOqB,aAAY,OAAOD,EAAAA,EAAAA,IAAMtC,EAAMW,QAAQO,OAAOgB,SAAUlC,EAAMW,QAAQO,OAAOkB,gBAAkBpC,EAAMW,QAAQO,OAAOqB,eAEzR,CAAC,KAADtD,OAAM8B,EAAsBC,WAAa,CACvCC,QAAS,EACT7B,OAAQY,EAAMU,MAAQV,GAAOW,QAAQO,OAAOF,SAC5CU,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQO,OAAOgB,YAGrC,UAApBpD,EAAWK,MAAoB,CAChCoB,SAAU,GACVO,OAAQ,GACRV,aAAc,GACdK,OAAQ,QACRD,QAAS,SACY,UAApB1B,EAAWK,MAAoB,CAChCoB,SAAU,GACVO,OAAQ,GACRV,aAAc,GACdI,QAAS,SACTY,SAAUpB,EAAME,WAAWmB,QAAQ,KACb,YAArBvC,EAAWO,OAAuB,CACnCe,cAAeJ,EAAMU,MAAQV,GAAOX,MAAMe,cAC1C,IAAEoC,IAAA,IAAC,MACHxC,EAAK,WACLlB,GACD0D,EAAA,OAAKvC,EAAAA,EAAAA,GAAS,CAAC,EAA0B,SAAvBnB,EAAWE,SAAsB,CAClD,CAAC,KAADC,OAAM8B,EAAsBmB,YAAajC,EAAAA,EAAAA,GAAS,CAAC,EAAwB,aAArBnB,EAAWM,OAAwB,CACvFA,OAAQY,EAAMU,MAAQV,GAAOW,QAAQ7B,EAAWM,OAAOqD,aACvDf,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQ7B,EAAWM,OAAOsD,KACjE,UAAW,CACThB,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQ7B,EAAWM,OAAOuD,KAEjE,uBAAwB,CACtBjB,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQ7B,EAAWM,OAAOsD,OAGrE,CAAC,KAADzD,OAAM8B,EAAsBU,eAAiB,CAC3CC,iBAAkB1B,EAAMU,MAAQV,GAAOW,QAAQ7B,EAAWM,OAAOuD,OAElE,CACD,CAAC,KAAD1D,OAAM8B,EAAsBC,WAAa,CACvC5B,OAAQY,EAAMU,MAAQV,GAAOW,QAAQO,OAAOF,aAGxB,aAAvBlC,EAAWE,SAA0B,CACtC4D,OAAQ5C,EAAMU,KAAO,kBAAHzB,OAAqBe,EAAMU,KAAKC,QAAQkC,OAAOC,oBAAmB,yBAAA7D,OAAiD,UAAvBe,EAAMW,QAAQoC,KAAmB,sBAAwB,6BACvK,CAAC,KAAD9D,OAAM8B,EAAsBmB,YAAajC,EAAAA,EAAAA,GAAS,CAAC,EAAwB,aAArBnB,EAAWM,OAAwB,CACvFA,OAAQY,EAAMU,MAAQV,GAAOW,QAAQ7B,EAAWM,OAAOsD,KACvDE,OAAQ,aAAF3D,OAAee,EAAMU,KAAO,QAAHzB,OAAWe,EAAMU,KAAKC,QAAQ7B,EAAWM,OAAO4D,YAAW,YAAYV,EAAAA,EAAAA,IAAMtC,EAAMW,QAAQ7B,EAAWM,OAAOsD,KAAM,KAClJhB,gBAAiB1B,EAAMU,KAAO,QAAHzB,OAAWe,EAAMU,KAAKC,QAAQ7B,EAAWM,OAAO4D,YAAW,OAAA/D,OAAMe,EAAMU,KAAKC,QAAQO,OAAO+B,iBAAgB,MAAMX,EAAAA,EAAAA,IAAMtC,EAAMW,QAAQ7B,EAAWM,OAAOsD,KAAM1C,EAAMW,QAAQO,OAAO+B,kBAC7M,UAAW,CACTvB,gBAAiB1B,EAAMU,KAAO,QAAHzB,OAAWe,EAAMU,KAAKC,QAAQ7B,EAAWM,OAAO4D,YAAW,YAAA/D,OAAWe,EAAMU,KAAKC,QAAQO,OAAO+B,iBAAgB,OAAAhE,OAAMe,EAAMU,KAAKC,QAAQO,OAAOqB,aAAY,OAAOD,EAAAA,EAAAA,IAAMtC,EAAMW,QAAQ7B,EAAWM,OAAOsD,KAAM1C,EAAMW,QAAQO,OAAO+B,iBAAmBjD,EAAMW,QAAQO,OAAOqB,cAEvS,uBAAwB,CACtBb,gBAAiB,gBAGrB,CAAC,KAADzC,OAAM8B,EAAsBU,eAAiB,CAC3CC,gBAAiB1B,EAAMU,KAAO,QAAHzB,OAAWe,EAAMU,KAAKC,QAAQ7B,EAAWM,OAAO4D,YAAW,YAAA/D,OAAWe,EAAMU,KAAKC,QAAQO,OAAO+B,iBAAgB,OAAAhE,OAAMe,EAAMU,KAAKC,QAAQO,OAAOqB,aAAY,OAAOD,EAAAA,EAAAA,IAAMtC,EAAMW,QAAQ7B,EAAWM,OAAOsD,KAAM1C,EAAMW,QAAQO,OAAO+B,iBAAmBjD,EAAMW,QAAQO,OAAOqB,gBAExS,CACD,CAAC,KAADtD,OAAM8B,EAAsBC,WAAa,CACvCkC,aAAclD,EAAMU,MAAQV,GAAOW,QAAQO,OAAOiC,mBAClD/D,OAAQY,EAAMU,MAAQV,GAAOW,QAAQO,OAAOF,aAGhD,IACIoC,GAAyBvD,EAAAA,EAAAA,IAAO,MAAO,CAC3CC,KAAM,oBACN1B,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOwE,MAHhBxD,EAI5ByD,IAAA,IAAC,MACFtD,EAAK,WACLlB,GACDwE,EAAA,OAAKrD,EAAAA,EAAAA,GAAS,CACbmB,SAAUpB,EAAME,WAAWmB,QAAQ,IACnCZ,OAAQ,UACa,UAApB3B,EAAWK,MAAoB,CAChCiC,SAAUpB,EAAME,WAAWmB,QAAQ,KACd,UAApBvC,EAAWK,MAAoB,CAChCiC,SAAUpB,EAAME,WAAWmB,QAAQ,KACnC,IA8JF,EA7JoCkC,EAAAA,YAAiB,SAAwBC,EAASC,GACpF,MAAM7E,GAAQ8E,EAAAA,EAAAA,GAAc,CAC1B9E,MAAO4E,EACP1D,KAAM,uBAEF,UACF6D,EAAS,MACTvE,EAAQ,WAAU,UAClBwE,EAAS,WACTC,EAAa,CAAC,EAAC,SACf7C,GAAW,EAAK,KAChBxB,EAAI,SACJ0C,GAAW,EAAK,MAChB7C,EAAQ,WAAU,KAClBF,EAAO,SAAQ,MACf2E,EAAQ,CAAC,EAAC,KACVvE,EAAO,OAAM,QACbP,EAAU,QACRJ,EACJmF,GAAQC,EAAAA,EAAAA,GAA8BpF,EAAOL,GACzCO,GAAamB,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCQ,QACA4B,WACAkB,WACA7C,QACAF,OACAI,OACAP,YAEIgB,GAAQiE,EAAAA,EAAAA,KACRC,EAjNkBpF,KACxB,MAAM,QACJoF,EAAO,MACP9E,EAAK,SACL4B,EAAQ,SACRkB,EAAQ,KACR/C,EAAI,MACJE,EAAK,KACLE,EAAI,QACJP,GACEF,EACEgF,EAAQ,CACZ/E,KAAM,CAAC,OAAQ,OAAFE,QAASC,EAAAA,EAAAA,GAAWC,IAASH,EAASK,EAAiB,aAAVD,GAAwB,GAAJH,OAAOD,GAAOC,QAAGC,EAAAA,EAAAA,GAAWE,IAAU4B,GAAY,WAAYkB,GAAY,WAAY,CAClK1C,KAAM,OACN2E,MAAO,YACPC,KAAM,YACN,iBAAkB,WAClB,eAAgB,WAChBC,SAAU,eACVC,KAAM,gBACN/E,IACF8D,KAAM,CAAC,SAET,OAAOkB,EAAAA,EAAAA,GAAeT,EAAOtF,EAA+B0F,EAAQ,EA0LpDM,CAAkB1F,GAY5B2F,GAXsC,QAApBzE,EAAM0E,UAAsB,CAClDL,SAAUP,EAAMQ,MAAQT,EAAWS,MAAQK,EAC3CL,KAAMR,EAAMO,UAAYR,EAAWQ,UAAYO,EAC/CR,KAAMN,EAAMK,OAASN,EAAWM,OAASU,EACzCV,MAAOL,EAAMM,MAAQP,EAAWO,MAAQU,GACtC,CACFT,SAAUP,EAAMO,UAAYR,EAAWQ,UAAYO,EACnDN,KAAMR,EAAMQ,MAAQT,EAAWS,MAAQK,EACvCR,MAAOL,EAAMK,OAASN,EAAWM,OAASU,EAC1CT,KAAMN,EAAMM,MAAQP,EAAWO,MAAQU,IAEZvF,GAC7B,MAAgB,mBAATA,GAAsC,iBAATA,GAAuCb,EAAAA,EAAAA,KAAKkB,EAAwB,CACtG6D,IAAKA,EACL3E,WAAYA,EACZ6E,WAAWoB,EAAAA,EAAAA,GAAKb,EAAQnF,KAAM4E,GAC9BqB,SAAU,YACMC,EAAAA,EAAAA,MAAM3D,GAAoBrB,EAAAA,EAAAA,GAAS,CACnDwD,IAAKA,EACL3E,WAAYA,EACZ8E,UAAWA,EACX5C,SAAUA,EACV2C,WAAWoB,EAAAA,EAAAA,GAAKb,EAAQnF,KAAM4E,IAC7BI,EAAO,CACRiB,SAAU,CAAU,SAATzF,GAAmBC,EAAMiF,GAAoB/F,EAAAA,EAAAA,KAAK0E,EAAwB,CACnF8B,GAAIT,EACJ3F,WAAYA,EACZ6E,UAAWO,EAAQb,OAChB,QAET,ICxQM9E,EAAY,CAAC,gBAAiB,YAAa,QAAS,QAAS,cAAe,WAAY,mBAAoB,iBAAkB,iBAAkB,WAAY,OAAQ,aAAc,QAAS,kBAAmB,iBAAkB,eAAgB,OAAQ,WAuBxP4G,GAAiBtF,EAAAA,EAAAA,IAAO,MAAO,CACnCC,KAAM,gBACN1B,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAOC,EAAWE,SAAS,GAP7Ba,CASpB,CAAC,GACEuF,GAAevF,EAAAA,EAAAA,IAAO,KAAM,CAChCC,KAAM,gBACN1B,KAAM,KACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOwG,IAH1BxF,CAIlB,CACDyF,QAAS,OACTC,SAAU,OACVC,WAAY,SACZhF,QAAS,EACTC,OAAQ,EACRgF,UAAW,SAEb,SAASC,EAAoBnG,EAAMC,EAAM0C,GACvC,MAAa,SAAT3C,EACK,GAAPN,OAAUiD,EAAW,GAAK,SAAQ,SAAAjD,OAAQO,GAErC,SAAPP,OAAgBM,EAAI,QACtB,CACA,MAyLA,EAzLgCgE,EAAAA,YAAiB,SAAoBC,EAASC,GAC5E,MAAM7E,GAAQ8E,EAAAA,EAAAA,GAAc,CAC1B9E,MAAO4E,EACP1D,KAAM,mBAEF,cACF6F,EAAgB,EAAC,UACjBhC,EAAS,MACTvE,EAAQ,WAAU,MAClBwG,EAAQ,EAAC,YACTC,EAAc,EAAC,SACf7E,GAAW,EAAK,iBAChB8E,EAAmBJ,EAAmB,eACtCK,GAAiB,EAAK,eACtBC,GAAiB,EAAK,WACtBC,EAAaC,KAAqBxH,EAAAA,EAAAA,KAAKyH,GAAgBlG,EAAAA,EAAAA,GAAS,CAAC,EAAGiG,KAAM,MAC1E7G,EAAQ,WAAU,gBAClB+G,GAAkB,EAAK,eACvBC,GAAiB,EAAK,aACtBC,EAAe,EAAC,KAChBnH,EAAO,SAAQ,QACfH,EAAU,QACRJ,EACJmF,GAAQC,EAAAA,EAAAA,GAA8BpF,EAAOL,IACzC,MACJgI,GP1EW,WAAmC,IAAZ3H,EAAK4H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7C,MAAM,cACFb,EAAgB,EAAC,cACjBgB,EAAgB,gBAAe,MAC/Bf,EAAQ,EAAC,YACTC,EAAc,EAAC,SACf7E,GAAW,EAAK,eAChB+E,GAAiB,EAAK,eACtBC,GAAiB,EACjBY,SAAUC,EACVrH,KAAMsH,EAAQ,gBACdV,GAAkB,EAAK,eACvBC,GAAiB,EAAK,aACtBC,EAAe,GACb1H,EACJmF,GAAQC,EAAAA,EAAAA,GAA8BpF,EAAOL,IACxCiB,EAAMuH,IAAgBC,EAAAA,EAAAA,GAAc,CACzCC,WAAYH,EACZ9I,QAAS6H,EACT/F,KAAM6G,EACNO,MAAO,SAEHC,EAAcA,CAACC,EAAOC,KACrBP,GACHC,EAAaM,GAEXR,GACFA,EAAaO,EAAOC,EACtB,EAIIC,EAAQA,CAACC,EAAOC,KACpB,MAAMf,EAASe,EAAMD,EAAQ,EAC7B,OAAOE,MAAMC,KAAK,CAChBjB,WACC,CAACkB,EAAGC,IAAML,EAAQK,GAAE,EAEnBC,EAAaP,EAAM,EAAGQ,KAAKC,IAAIpC,EAAeC,IAC9CoC,EAAWV,EAAMQ,KAAKG,IAAIrC,EAAQD,EAAgB,EAAGA,EAAgB,GAAIC,GACzEsC,EAAgBJ,KAAKG,IAAIH,KAAKC,IAEpCvI,EAAO8G,EAEPV,EAAQD,EAA+B,EAAfW,EAAmB,GAE3CX,EAAgB,GACVwC,EAAcL,KAAKC,IAAID,KAAKG,IAElCzI,EAAO8G,EAEPX,EAA+B,EAAfW,EAAmB,GAEnC0B,EAASvB,OAAS,EAAIuB,EAAS,GAAK,EAAIpC,EAAQ,GAI1CwC,EAAW,IAAKhC,EAAkB,CAAC,SAAW,MAASJ,EAAiB,GAAK,CAAC,eAAiB6B,KAGjGK,EAAgBvC,EAAgB,EAAI,CAAC,kBAAoBA,EAAgB,EAAIC,EAAQD,EAAgB,CAACA,EAAgB,GAAK,MAE5H2B,EAAMY,EAAeC,MAGpBA,EAAcvC,EAAQD,EAAgB,EAAI,CAAC,gBAAkBC,EAAQD,EAAgBA,EAAgB,CAACC,EAAQD,GAAiB,MAAQqC,KAAcjC,EAAiB,GAAK,CAAC,WAAcM,EAAiB,CAAC,QAAU,IAGpNgC,EAAa9I,IACjB,OAAQA,GACN,IAAK,QACH,OAAO,EACT,IAAK,WACH,OAAOC,EAAO,EAChB,IAAK,OACH,OAAOA,EAAO,EAChB,IAAK,OACH,OAAOoG,EACT,QACE,OAAO,KACX,EAIIW,EAAQ6B,EAASE,KAAIpC,GACF,kBAATA,EAAoB,CAChCqC,QAASnB,IACPD,EAAYC,EAAOlB,EAAK,EAE1B3G,KAAM,OACNC,KAAM0G,EACNhE,SAAUgE,IAAS1G,EACnBwB,WACA,eAAgBkF,IAAS1G,EAAO,YAASkH,GACvC,CACF6B,QAASnB,IACPD,EAAYC,EAAOiB,EAAWnC,GAAM,EAEtC3G,KAAM2G,EACN1G,KAAM6I,EAAWnC,GACjBhE,UAAU,EACVlB,SAAUA,IAA0C,IAA9BkF,EAAKsC,QAAQ,cAAgC,SAATtC,GAA4B,SAATA,EAAkB1G,GAAQoG,EAAQpG,GAAQ,MAG3H,OAAOS,EAAAA,EAAAA,GAAS,CACdsG,SACCxC,EACL,COjCM0E,EAAcxI,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACpC+H,cAAe,gBAEX7H,GAAamB,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrC+G,gBACAvG,QACAwG,QACAC,cACA7E,WACA8E,mBACAC,iBACAC,iBACAC,aACA5G,QACA+G,kBACAC,iBACAC,eACAnH,OACAH,YAEIkF,EArFkBpF,KACxB,MAAM,QACJoF,EAAO,QACPlF,GACEF,EACEgF,EAAQ,CACZ/E,KAAM,CAAC,OAAQC,GACfqG,GAAI,CAAC,OAEP,OAAOd,EAAAA,EAAAA,GAAeT,EAAO3F,EAA2B+F,EAAQ,EA4EhDM,CAAkB1F,GAClC,OAAoBJ,EAAAA,EAAAA,KAAKyG,GAAgBlF,EAAAA,EAAAA,GAAS,CAChD,aAAc,wBACd0D,WAAWoB,EAAAA,EAAAA,GAAKb,EAAQnF,KAAM4E,GAC9B7E,WAAYA,EACZ2E,IAAKA,GACJM,EAAO,CACRiB,UAAuBtG,EAAAA,EAAAA,KAAK0G,EAAc,CACxCzB,UAAWO,EAAQmB,GACnBvG,WAAYA,EACZkG,SAAUuB,EAAM+B,KAAI,CAACpC,EAAMwC,KAAuBhK,EAAAA,EAAAA,KAAK,KAAM,CAC3DsG,SAAUiB,GAAWhG,EAAAA,EAAAA,GAAS,CAAC,EAAGiG,EAAM,CACtC9G,QACA,aAAc0G,EAAiBI,EAAK3G,KAAM2G,EAAK1G,KAAM0G,EAAKhE,UAC1D7C,QACAF,OACAH,cAED0J,SAGT,G,4GCzHA,MACA,GADeC,E,QAAAA,M,+DCCf,MAAMpK,EAAY,CAAC,YAAa,YAAa,UAAW,UAAW,WAAY,YAAa,cAYtFqK,GAAeC,EAAAA,EAAAA,KAEfC,EAA+BC,EAAa,MAAO,CACvDjJ,KAAM,WACN1B,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOE,OAE/C,SAASiK,EAAqBpK,GAC5B,OAAOqK,EAAAA,EAAAA,GAAoB,CACzBrK,QACAkB,KAAM,WACN8I,gBAEJ,CASA,SAASM,EAAalE,EAAUmE,GAC9B,MAAMC,EAAgB7F,EAAAA,SAAe8F,QAAQrE,GAAUsE,OAAOC,SAC9D,OAAOH,EAAcI,QAAO,CAACC,EAAQC,EAAOhB,KAC1Ce,EAAOE,KAAKD,GACRhB,EAAQU,EAAc3C,OAAS,GACjCgD,EAAOE,KAAmBpG,EAAAA,aAAmB4F,EAAW,CACtDS,IAAK,aAAF3K,OAAeyJ,MAGfe,IACN,GACL,CACA,MAQaI,EAAQ9J,IAGf,IAHgB,WACpBjB,EAAU,MACVkB,GACDD,EACKlB,GAASoB,EAAAA,EAAAA,GAAS,CACpBqF,QAAS,OACTwE,cAAe,WACdC,EAAAA,EAAAA,IAAkB,CACnB/J,UACCgK,EAAAA,EAAAA,IAAwB,CACzBC,OAAQnL,EAAW4F,UACnBwF,YAAalK,EAAMkK,YAAYD,UAC7BE,IAAa,CACfL,cAAeK,OAEjB,GAAIrL,EAAWsL,QAAS,CACtB,MAAMC,GAAcC,EAAAA,EAAAA,IAAmBtK,GACjCuK,EAAOC,OAAOC,KAAKzK,EAAMkK,YAAYD,QAAQT,QAAO,CAACkB,EAAKC,MAC5B,kBAAvB7L,EAAWsL,SAA0D,MAAlCtL,EAAWsL,QAAQO,IAAuD,kBAAzB7L,EAAW4F,WAA8D,MAApC5F,EAAW4F,UAAUiG,MACvJD,EAAIC,IAAc,GAEbD,IACN,CAAC,GACEE,GAAkBZ,EAAAA,EAAAA,IAAwB,CAC9CC,OAAQnL,EAAW4F,UACnB6F,SAEIM,GAAgBb,EAAAA,EAAAA,IAAwB,CAC5CC,OAAQnL,EAAWsL,QACnBG,SAE6B,kBAApBK,GACTJ,OAAOC,KAAKG,GAAiBE,SAAQ,CAACH,EAAYjC,EAAOwB,KAEvD,IADuBU,EAAgBD,GAClB,CACnB,MAAMI,EAAyBrC,EAAQ,EAAIkC,EAAgBV,EAAYxB,EAAQ,IAAM,SACrFkC,EAAgBD,GAAcI,CAChC,KAGJ,MAAMC,EAAqBA,CAACb,EAAWQ,KACrC,OAAI7L,EAAWmM,WACN,CACLC,KAAKC,EAAAA,EAAAA,IAASd,EAAaF,IAGxB,CAGL,6BAA8B,CAC5B1J,OAAQ,GAEV,gCAAiC,CAC/B,CAAC,SAADxB,QA7DmByF,EA6DYiG,EAAaC,EAAgBD,GAAc7L,EAAW4F,UA5DtF,CACL0G,IAAK,OACL,cAAe,QACfC,OAAQ,MACR,iBAAkB,UAClB3G,OAuD0GyG,EAAAA,EAAAA,IAASd,EAAaF,KA7DvGzF,KA+DtB,EAEH7F,GAASyM,EAAAA,EAAAA,GAAUzM,GAAQkL,EAAAA,EAAAA,IAAkB,CAC3C/J,SACC6K,EAAeG,GACpB,CAEA,OADAnM,GAAS0M,EAAAA,EAAAA,IAAwBvL,EAAMkK,YAAarL,GAC7CA,CAAM,E,wBChHf,MAAM2M,EDkHS,WAAmC,IAAdC,EAAOjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7C,MAAM,sBAEJkF,EAAwB5C,EAA4B,cACpDpF,EAAgBsF,EAAoB,cACpCrC,EAAgB,YACd8E,EAOEE,EAAYD,EAAsB7B,GAClC2B,EAAqBjI,EAAAA,YAAiB,SAAcC,EAASC,GACjE,MAAMmI,EAAalI,EAAcF,GAC3B5E,GAAQiN,EAAAA,EAAAA,GAAaD,IACrB,UACFhI,EAAY,MAAK,UACjBc,EAAY,SAAQ,QACpB0F,EAAU,EAAC,QACX0B,EAAO,SACP9G,EAAQ,UACRrB,EAAS,WACTsH,GAAa,GACXrM,EACJmF,GAAQC,EAAAA,EAAAA,GAA8BpF,EAAOL,GACzCO,EAAa,CACjB4F,YACA0F,UACAa,cAEI/G,GArBCK,EAAAA,EAAAA,GAHO,CACZxF,KAAM,CAAC,UAEoBX,IAAQC,EAAAA,EAAAA,GAAqBsI,EAAevI,IAAO,CAAC,GAsBjF,OAAoBM,EAAAA,EAAAA,KAAKiN,GAAW1L,EAAAA,EAAAA,GAAS,CAC3CiF,GAAItB,EACJ9E,WAAYA,EACZ2E,IAAKA,EACLE,WAAWoB,EAAAA,EAAAA,GAAKb,EAAQnF,KAAM4E,IAC7BI,EAAO,CACRiB,SAAU8G,EAAU5C,EAAalE,EAAU8G,GAAW9G,IAE1D,IAQA,OAAOwG,CACT,CCpKcO,CAAY,CACxBL,uBAAuB7L,EAAAA,EAAAA,IAAO,MAAO,CACnCC,KAAM,WACN1B,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOE,OAE/C2E,cAAeF,IAAWE,EAAAA,EAAAA,GAAc,CACtC9E,MAAO4E,EACP1D,KAAM,eA+CV,G,iDCxDA,MAAMkM,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCA/DC,EAA+B,QAAUJ,EADjB,kBCFxBK,GACc,EADdA,GAEe,ECFrB,MAAMC,EACFC,WAAAA,GACIC,KAAKC,MAAQ,GACbD,KAAKE,UAAY,IAAIC,GACzB,CACAC,GAAAA,CAAIC,GACA,IAAKL,KAAKE,UAAUI,IAAID,GAGpB,OAFAL,KAAKE,UAAUE,IAAIC,GACnBL,KAAKC,MAAM7D,KAAKiE,IACT,CAEf,CACAE,MAAAA,CAAOF,GACH,MAAMlF,EAAQ6E,KAAKC,MAAMhF,QAAQoF,IAClB,IAAXlF,IACA6E,KAAKC,MAAMO,OAAOrF,EAAO,GACzB6E,KAAKE,UAAUO,OAAOJ,GAE9B,CACAK,KAAAA,GACIV,KAAKC,MAAM/G,OAAS,EACpB8G,KAAKE,UAAUQ,OACnB,ECnBJ,MAAMC,EAAa,CACf,UACA,OACA,SACA,YACA,SACA,cAGJ,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMrH,EAAQ,CACVsH,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAQT,EAAW1E,QAAO,CAACkB,EAAKd,KAClCc,EAAId,GDGZ,SAA0B0E,GAKtB,IAAIM,EAAY,IAAIvB,EAChBwB,EAAY,IAAIxB,EAChByB,EAAW,EAKXJ,GAAe,EACfK,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACC,GACP,MAAMC,EADuC7I,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IACNkI,EACjCY,EAAQD,EAAoBT,EAAYC,EAO9C,OAT0BrI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAItBwI,EAAYrB,IAAIyB,GAChBE,EAAM3B,IAAIyB,IAAaC,GAAqBX,IAE5CI,EAAWF,EAAUpB,MAAM/G,QAExB2I,CACX,EAIAG,OAASH,IACLP,EAAUf,OAAOsB,GACjBJ,EAAYhB,OAAOoB,EAAS,EAKhCxB,QAAU4B,IAMN,GAAId,EACAK,GAAiB,MADrB,CAUA,GANAL,GAAe,GACdE,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUZ,QAEVa,EAAWF,EAAUpB,MAAM/G,OACvBqI,EACA,IAAK,IAAIlH,EAAI,EAAGA,EAAIkH,EAAUlH,IAAK,CAC/B,MAAMwH,EAAWR,EAAUpB,MAAM5F,GAC7BoH,EAAYnB,IAAIuB,KAChBF,EAAKC,SAASC,GACdd,KAEJc,EAASI,EACb,CAEJd,GAAe,EACXK,IACAA,GAAiB,EACjBG,EAAKtB,QAAQ4B,GApBjB,CAqBA,GAGR,OAAON,CACX,CChFmBO,EAAiB,IAAOnB,GAAe,IAC3C5D,IACR,CAAC,GACEgF,EAAeC,IACjBhB,EAAMgB,GAAQ/B,QAAQ1G,EAAM,EAE1B0I,EAAeA,KACjB,MAAMnB,EAAYrB,EACZlG,EAAMuH,UACNoB,YAAYC,MAClBxB,GAAe,EACfpH,EAAMsH,MAAQD,EACR,IAAO,GACPzG,KAAKG,IAAIH,KAAKC,IAAI0G,EAAYvH,EAAMuH,UAvB/B,IAuBuD,GAClEvH,EAAMuH,UAAYA,EAClBvH,EAAMwH,cAAe,EACrBR,EAAWpD,QAAQ4E,GACnBxI,EAAMwH,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBwB,GACtB,EASET,EAAWjB,EAAW1E,QAAO,CAACkB,EAAKd,KACrC,MAAMsF,EAAOP,EAAM/E,GAMnB,OALAc,EAAId,GAAO,SAACgE,GAAkD,IAAzCmC,EAASvJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAUwJ,EAASxJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAG7C,OAFK8H,IATTA,GAAe,EACfC,GAAoB,EACfrH,EAAMwH,cACPN,EAAkBwB,IAQXV,EAAKC,SAASvB,EAASmC,EAAWC,EAC7C,EACOtF,CAAG,GACX,CAAC,GAEJ,MAAO,CAAEyE,WAAUI,OADH3B,GAAYM,EAAWpD,SAASlB,GAAQ+E,EAAM/E,GAAK2F,OAAO3B,KAC/C1G,QAAOyH,QACtC,CC5DA,MAAQQ,SAAUc,EAAWV,OAAQW,GAAoB/B,EAAoBgC,gBAAgB,GCF7F,SAASC,EAAY3M,GACjB,OAAQA,GACW,kBAARA,GACP+G,OAAO6F,UAAUC,eAAeC,KAAK9M,EAAK,UAClD,CCDA,SAAS+M,EAAeC,GACpB,MAAoB,kBAANA,GAAkBhJ,MAAMiJ,QAAQD,EAClD,CCLA,SAASE,EAAoBF,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAElJ,KACjB,CCJA,MAAMqJ,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBlS,GAC3B,OAAQ+R,EAAoB/R,EAAMmS,UAC9BF,EAAaG,MAAMlR,GAAS0Q,EAAe5R,EAAMkB,KACzD,CACA,SAASmR,EAAcrS,GACnB,OAAO2K,QAAQuH,EAAsBlS,IAAUA,EAAMsS,SACzD,CCNA,SAASC,EAAuBvS,GAC5B,MAAM,QAAEwS,EAAO,QAAEL,GCFrB,SAAgCnS,EAAOyS,GACnC,GAAIP,EAAsBlS,GAAQ,CAC9B,MAAM,QAAEwS,EAAO,QAAEL,GAAYnS,EAC7B,MAAO,CACHwS,SAAqB,IAAZA,GAAqBZ,EAAeY,GACvCA,OACA1K,EACNqK,QAASP,EAAeO,GAAWA,OAAUrK,EAErD,CACA,OAAyB,IAAlB9H,EAAM0S,QAAoBD,EAAU,CAAC,CAChD,CDTiCE,CAAuB3S,GAAO4S,EAAAA,EAAAA,YAAWlF,IACtE,OAAOmF,EAAAA,EAAAA,UAAQ,KAAM,CAAGL,UAASL,aAAY,CAACW,EAA0BN,GAAUM,EAA0BX,IAChH,CACA,SAASW,EAA0BC,GAC/B,OAAOlK,MAAMiJ,QAAQiB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfrQ,MAAO,CAAC,cACRM,MAAO,CAAC,aAAc,eAAgB,cACtCgQ,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAMzI,MAAOiI,EACdQ,EAAmBzI,IAAO,CACtB0I,UAAY1T,GAAUiT,EAAajI,IAAKoH,MAAMlR,KAAWlB,EAAMkB,MCrBvE,MAAMyS,GAAqBtG,EAAAA,EAAAA,eAAc,CAAC,GCGpCuG,GAA2BvG,EAAAA,EAAAA,eAAc,CAAC,GCL1CwG,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqB7S,GAAoF,IAAnF,kBAAE8S,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEC,GAAYlT,EAC5G8S,GCtBJ,SAAsBK,GAClB,IAAK,MAAMtJ,KAAOsJ,EACdb,EAAmBzI,GAAO,IACnByI,EAAmBzI,MACnBsJ,EAAStJ,GAGxB,CDeyBuJ,CAAaN,GA2ClC,MAAMO,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyBzU,EAAO0U,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChBhC,EAAAA,EAAAA,YAAWxF,MACXpN,EACH6U,SAAUC,EAAY9U,KAEpB,SAAEwN,GAAaoH,EACfnC,EAAUF,EAAuBvS,GACjC+U,EAAcX,EAAepU,EAAOwN,GAC1C,IAAKA,GAAYI,EAAW,CAOxB6E,EAAQuC,cErCpB,SAA0BX,EAAWU,EAAa/U,EAAOkU,GACrD,MAAQc,cAAeC,IAAWrC,EAAAA,EAAAA,YAAWlF,GACvCwH,GAActC,EAAAA,EAAAA,YAAW3E,GACzBkH,GAAkBvC,EAAAA,EAAAA,YAAWjF,GAC7ByH,GAAsBxC,EAAAA,EAAAA,YAAWxF,GAAqBK,cACtD4H,GAAmBC,EAAAA,EAAAA,UAIzBpB,EAAsBA,GAAuBgB,EAAYK,UACpDF,EAAiBG,SAAWtB,IAC7BmB,EAAiBG,QAAUtB,EAAoBG,EAAW,CACtDU,cACAE,SACAjV,QACAmV,kBACAM,wBAAuBN,IACW,IAA5BA,EAAgB3C,QAEtB4C,yBAGR,MAAMJ,EAAgBK,EAAiBG,SACvCE,EAAAA,EAAAA,qBAAmB,KACfV,GAAiBA,EAAcW,OAAO3V,EAAOmV,EAAgB,IAMjE,MAAMS,GAAeN,EAAAA,EAAAA,QAAO3K,QAAQ3K,EAAMuO,KAAkCsH,OAAOC,kBAgCnF,OA/BAhI,GAA0B,KACjBkH,IAEL3D,EAAU0E,WAAWf,EAAcgB,QAW/BJ,EAAaJ,SAAWR,EAAciB,gBACtCjB,EAAciB,eAAeC,iBACjC,KAEJlI,EAAAA,EAAAA,YAAU,KACDgH,IAELA,EAAcmB,kBACTP,EAAaJ,SAAWR,EAAciB,gBACvCjB,EAAciB,eAAeC,iBAE7BN,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,GAC7B,IAEGd,CACX,CF1BoCoB,CAAiB/B,EAAWU,EAAaH,EAAgBV,GAKjF,MAAMmC,GAA2BzD,EAAAA,EAAAA,YAAWgB,GACtC0C,GAAW1D,EAAAA,EAAAA,YAAW3E,GAAaC,OACrCuE,EAAQuC,gBACRL,EAAgBlC,EAAQuC,cAAcT,aAEtCK,EAAgB0B,EAAUrC,EAAmBoC,GAErD,CAKA,OAAQ1R,EAAAA,cAAoB+I,EAAc6I,SAAU,CAAE9N,MAAOgK,GACzDkC,GAAiBlC,EAAQuC,cAAiBrQ,EAAAA,cAAoBgQ,EAAe,CAAEK,cAAevC,EAAQuC,iBAAkBJ,IAAqB,KAC7IT,EAAUE,EAAWrU,EG1DjC,SAAsB+U,EAAaC,EAAeN,GAC9C,OAAO8B,EAAAA,EAAAA,cAAaC,IAChBA,GAAY1B,EAAY2B,OAAS3B,EAAY2B,MAAMD,GAC/CzB,IACAyB,EACMzB,EAAc0B,MAAMD,GACpBzB,EAAc2B,WAEpBjC,IAC2B,oBAAhBA,EACPA,EAAY+B,GAEPjF,EAAYkD,KACjBA,EAAYc,QAAUiB,GAE9B,GAOJ,CAACzB,GACL,CHmCwC4B,CAAa7B,EAAatC,EAAQuC,cAAeN,GAAcK,EAAavH,EAAUiF,EAAQuC,eAClI,IAGA,OADAR,EAAoBX,GAAyBQ,EACtCG,CACX,CACA,SAASM,EAAWlS,GAAe,IAAd,SAAEiS,GAAUjS,EAC7B,MAAMiU,GAAgBjE,EAAAA,EAAAA,YAAWe,GAAoBmD,GACrD,OAAOD,QAA8B/O,IAAb+M,EAClBgC,EAAgB,IAAMhC,EACtBA,CACV,CI5DA,SAASkC,EAAkBC,GACvB,SAASC,EAAO5C,GACZ,OAAOL,EAAsBgD,EAAa3C,EADQzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVsP,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMD,EAAQ,CAMrBI,IAAKA,CAACC,EAAStM,KAINmM,EAAelI,IAAIjE,IACpBmM,EAAeI,IAAIvM,EAAKiM,EAAOjM,IAE5BmM,EAAeE,IAAIrM,KAGtC,CCxCA,MAAMwM,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAepD,GACpB,MAKqB,kBAAdA,IAIHA,EAAUqD,SAAS,SAOvBF,EAAqB5N,QAAQyK,IAAc,GAIvC,QAAQsD,KAAKtD,GAIrB,CC3BA,MAAMuD,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIhJ,IAAI+I,GCtB/B,SAASE,EAAoB/M,EAAG7J,GAAwB,IAAtB,OAAEqS,EAAM,SAAEqB,GAAU1T,EAClD,OAAQ2W,EAAe7I,IAAIjE,IACvBA,EAAIgN,WAAW,YACbxE,QAAuB1L,IAAb+M,OACL+C,EAAgB5M,IAAgB,YAARA,EACvC,CCRA,MAAMiN,EAAiBxP,GAAUkC,QAAQlC,GAASA,EAAMyP,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBX,EAAmBhQ,OCRzC,MAAM4Q,EAAyBC,GAAW1N,GAAuB,kBAARA,GAAoBA,EAAIgN,WAAWU,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiBA,CAACpQ,EAAO9H,IACpBA,GAAyB,kBAAV8H,EAChB9H,EAAKmY,UAAUrQ,GACfA,ECNJsQ,EAAQA,CAAC5P,EAAKE,EAAKwI,IAAM3I,KAAKC,IAAID,KAAKG,IAAIwI,EAAG1I,GAAME,GCEpD2P,EAAS,CACXrB,KAAO9F,GAAmB,kBAANA,EACpBoH,MAAOC,WACPJ,UAAYjH,GAAMA,GAEhBnO,EAAQ,IACPsV,EACHF,UAAYjH,GAAMkH,EAAM,EAAG,EAAGlH,IAE5BsH,EAAQ,IACPH,EACH5Z,QAAS,GCPPga,EAAYvH,GAAM3I,KAAKmQ,MAAU,IAAJxH,GAAc,IAC3CyH,GAAa,uBACbC,GAAa,8FACbC,GAAmB,+FACzB,SAASC,GAAS5H,GACd,MAAoB,kBAANA,CAClB,CCVA,MAAM6H,GAAkBC,IAAI,CACxBhC,KAAO9F,GAAM4H,GAAS5H,IAAMA,EAAE+H,SAASD,IAAiC,IAAxB9H,EAAEgI,MAAM,KAAKhS,OAC7DoR,MAAOC,WACPJ,UAAYjH,GAAC,GAAAxR,OAAQwR,GAACxR,OAAGsZ,KAEvBG,GAAUJ,GAAe,OACzBK,GAAUL,GAAe,KACzBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,GAAqB,IACpBJ,GACHd,MAAQpH,GAAMkI,GAAQd,MAAMpH,GAAK,IACjCiH,UAAYjH,GAAMkI,GAAQjB,UAAc,IAAJjH,ICblCuI,GAAM,IACLpB,EACHF,UAAW5P,KAAKmQ,OCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBxY,aAAcwY,GACdW,OAAQX,GACRY,oBAAqBZ,GACrBa,qBAAsBb,GACtBc,wBAAyBd,GACzBe,uBAAwBf,GAExBgB,MAAOhB,GACPiB,SAAUjB,GACV9X,OAAQ8X,GACRkB,UAAWlB,GACXzZ,KAAMyZ,GACNmB,IAAKnB,GACLoB,MAAOpB,GACPqB,OAAQrB,GACRsB,KAAMtB,GAENpY,QAASoY,GACTuB,WAAYvB,GACZwB,aAAcxB,GACdyB,cAAezB,GACf0B,YAAa1B,GACbnY,OAAQmY,GACR2B,UAAW3B,GACX4B,YAAa5B,GACb6B,aAAc7B,GACd8B,WAAY9B,GAEZ+B,OAAQjC,GACRkC,QAASlC,GACTmC,QAASnC,GACToC,QAASpC,GACTX,MAAK,EACLgD,OAAQhD,EACRiD,OAAQjD,EACRkD,OAAQlD,EACRmD,KAAMxC,GACNyC,MAAOzC,GACP0C,MAAO1C,GACP2C,SAAUzC,GACV0C,WAAY1C,GACZ2C,WAAY3C,GACZ4C,WAAY5C,GACZ5B,EAAG4B,GACH3B,EAAG2B,GACH1B,EAAG0B,GACH6C,YAAa7C,GACbzB,qBAAsByB,GACtB3X,QAASqB,EACToZ,QAAS3C,GACT4C,QAAS5C,GACT6C,QAAShD,GAETiD,OAAQ7C,GAER8C,YAAaxZ,EACbyZ,cAAezZ,EACf0Z,WAAYhD,IC9DhB,SAASiD,GAAgB/U,EAAOgV,EAAczQ,EAAS0Q,GACnD,MAAM,MAAEtS,EAAK,KAAEnJ,EAAI,UAAEgX,EAAS,gBAAE0E,GAAoBlV,EAEpD,IAAImV,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAM3S,KAAOsS,EAAc,CAC5B,MAAM7U,EAAQ6U,EAAatS,GAI3B,GAAI2N,EAAkB3N,GAAM,CACxBlJ,EAAKkJ,GAAOvC,EACZ,QACJ,CAEA,MAAMmV,EAAYvD,GAAiBrP,GAC7B6S,EAAchF,EAAepQ,EAAOmV,GAC1C,GAAI9F,EAAe7I,IAAIjE,GAAM,CAKzB,GAHAyS,GAAe,EACf3E,EAAU9N,GAAO6S,GAEZF,EACD,SAEAlV,KAAWmV,EAAUxe,SAAW,KAChCue,GAAkB,EAC1B,MACS3S,EAAIgN,WAAW,WAEpB0F,GAAqB,EACrBF,EAAgBxS,GAAO6S,GAGvB5S,EAAMD,GAAO6S,CAErB,CAiBA,GAhBKP,EAAaxE,YACV2E,GAAgBF,EAChBtS,EAAM6N,UTtClB,SAAwBA,EAAS3X,EAAqE2c,EAAoBP,GAAmB,IAA1G,2BAAEQ,GAA6B,EAAI,mBAAEC,GAAqB,GAAO7c,EAE5F8c,EAAkB,GAKtB,IAAK,IAAIjV,EAAI,EAAGA,EAAIwP,EAAexP,IAAK,CACpC,MAAMgC,EAAM6M,EAAmB7O,GAC/B,QAAuBlB,IAAnBgR,EAAU9N,GAAoB,CAC9B,MAAMkT,EAAgB/F,EAAenN,IAAQA,EAC7CiT,GAAmB,GAAJ5d,OAAO6d,EAAa,KAAA7d,OAAIyY,EAAU9N,GAAI,KACzD,CACJ,CAaA,OAZI+S,IAA+BjF,EAAUR,IACzC2F,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BZ,EACAU,EAAkBV,EAAkBzE,EAAWgF,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BG,CAAe9V,EAAMwQ,UAAWjM,EAAS8Q,EAAiBJ,GAEvEtS,EAAM6N,YAKX7N,EAAM6N,UAAY,SAOtB4E,EAAoB,CACpB,MAAM,QAAEZ,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOQ,EAC3DvS,EAAMuS,gBAAkB,GAAHnd,OAAMyc,EAAO,KAAAzc,OAAI0c,EAAO,KAAA1c,OAAI2c,EACrD,CACJ,CCvEA,MAAMqB,GAAwBA,KAAA,CAC1BpT,MAAO,CAAC,EACR6N,UAAW,CAAC,EACZ0E,gBAAiB,CAAC,EAClB1b,KAAM,CAAC,ICEX,SAASwc,GAAkBC,EAAQC,EAAQxe,GACvC,IAAK,MAAMgL,KAAOwT,EACTvG,EAAcuG,EAAOxT,KAAU+M,EAAoB/M,EAAKhL,KACzDue,EAAOvT,GAAOwT,EAAOxT,GAGjC,CAQA,SAASyT,GAASze,EAAO+U,EAAavH,GAClC,MACMvC,EAAQ,CAAC,EAMf,OAFAqT,GAAkBrT,EALAjL,EAAMiL,OAAS,CAAC,EAKEjL,GACpC4L,OAAO8S,OAAOzT,EAdlB,SAA+B9J,EAAwB4T,EAAavH,GAAU,IAA9C,kBAAE+P,GAAmBpc,EACjD,OAAO0R,EAAAA,EAAAA,UAAQ,KACX,MAAMvK,EAAQ+V,KAEd,OADAhB,GAAgB/U,EAAOyM,EAAa,CAAEgJ,4BAA6BvQ,GAAY+P,GACxE3R,OAAO8S,OAAO,CAAC,EAAGpW,EAAMxG,KAAMwG,EAAM2C,MAAM,GAClD,CAAC8J,GACR,CAQyB4J,CAAuB3e,EAAO+U,EAAavH,IACzDvC,CACX,CACA,SAAS2T,GAAa5e,EAAO+U,EAAavH,GAEtC,MAAMqR,EAAY,CAAC,EACb5T,EAAQwT,GAASze,EAAO+U,EAAavH,GAoB3C,OAnBIxN,EAAMoT,OAA+B,IAAvBpT,EAAM8e,eAEpBD,EAAUE,WAAY,EAEtB9T,EAAM+T,WACF/T,EAAMgU,iBACFhU,EAAMiU,mBACF,OAEZjU,EAAMkU,aACa,IAAfnf,EAAMoT,KACA,OAAM,OAAA/S,OACgB,MAAfL,EAAMoT,KAAe,IAAM,WAEzBtL,IAAnB9H,EAAMof,WACLpf,EAAMqf,OAASrf,EAAMsf,YAActf,EAAMuf,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU5T,MAAQA,EACX4T,CACX,CChDA,MAAMW,GAAmB,IAAI1Q,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS2Q,GAAkBzU,GACvB,OAAQA,EAAIgN,WAAW,UAClBhN,EAAIgN,WAAW,SAAmB,cAARhN,GAC3BA,EAAIgN,WAAW,WACfhN,EAAIgN,WAAW,UACfhN,EAAIgN,WAAW,UACfhN,EAAIgN,WAAW,aACfwH,GAAiBvQ,IAAIjE,EAC7B,CCpDA,IAAI0U,GAAiB1U,IAASyU,GAAkBzU,GAoBhD,KAnBiC2U,GAyBL3gB,QAAQ,0BAA0BI,WArB1DsgB,GAAiB1U,GAAQA,EAAIgN,WAAW,OAASyH,GAAkBzU,GAAO2U,GAAY3U,GAsB1F,CACA,MAAO4U,IACH,CA5BJ,IAAiCD,GCDjC,SAASE,GAAWC,EAAQC,EAAQxf,GAChC,MAAyB,kBAAXuf,EACRA,EACA9F,GAAGlB,UAAUiH,EAASxf,EAAOuf,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAc7X,EAAKnH,EAEf0L,EAASuT,EAAU7C,GAAmB,IAFrB,MAAE8C,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAEzD,EAAO,QAAEC,EAAO,WAAEyD,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAQxf,EAMP,GALAkc,GAAgB/U,EAAOqY,EAAQ9T,EAAS0Q,GAKpC6C,EAIA,YAHI9X,EAAM2C,MAAM2V,UACZtY,EAAMuY,MAAMD,QAAUtY,EAAM2C,MAAM2V,UAI1CtY,EAAMuY,MAAQvY,EAAM2C,MACpB3C,EAAM2C,MAAQ,CAAC,EACf,MAAM,MAAE4V,EAAK,MAAE5V,EAAK,WAAE6V,GAAexY,EAKjCuY,EAAM/H,YACFgI,IACA7V,EAAM6N,UAAY+H,EAAM/H,kBACrB+H,EAAM/H,WAGbgI,SACahZ,IAAZgV,QAAqChV,IAAZiV,GAAyB9R,EAAM6N,aACzD7N,EAAMuS,gBFzBd,SAAgCsD,EAAYhE,EAASC,GACjD,MAAMgE,EAAYlB,GAAW/C,EAASgE,EAAW1I,EAAG0I,EAAW9F,OACzDgG,EAAYnB,GAAW9C,EAAS+D,EAAWzI,EAAGyI,EAAW5e,QAC/D,MAAO,GAAP7B,OAAU0gB,EAAS,KAAA1gB,OAAI2gB,EAC3B,CEqBgCC,CAAuBH,OAAwBhZ,IAAZgV,EAAwBA,EAAU,QAAiBhV,IAAZiV,EAAwBA,EAAU,UAG1HjV,IAAVuY,IACAQ,EAAMzI,EAAIiI,QACAvY,IAAVwY,IACAO,EAAMxI,EAAIiI,QACIxY,IAAdyY,IACAM,EAAM1H,MAAQoH,QAECzY,IAAf0Y,GD7BR,SAAsBK,EAAOhZ,GAAqD,IAA7C2D,EAAO5D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGmY,EAAMnY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGsZ,IAAWtZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAErEiZ,EAAML,WAAa,EAGnB,MAAM3U,EAAOqV,EAAclB,GAAWE,GAEtCW,EAAMhV,EAAKkU,QAAU/F,GAAGlB,WAAWiH,GAEnC,MAAMS,EAAaxG,GAAGlB,UAAUjR,GAC1B4Y,EAAczG,GAAGlB,UAAUtN,GACjCqV,EAAMhV,EAAKoU,OAAS,GAAH5f,OAAMmgB,EAAU,KAAAngB,OAAIogB,EACzC,CCkBQU,CAAaN,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMU,GAAuBA,KAAA,IACtB/C,KACHwC,MAAO,CAAC,ICJNT,GAAYiB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAI/S,cCMzD,SAASgT,GAAYthB,EAAO+U,EAAawM,EAAWlN,GAChD,MAAMmN,GAAc3O,EAAAA,EAAAA,UAAQ,KACxB,MAAMvK,EAAQ8Y,KAEd,OADAjB,GAAc7X,EAAOyM,EAAa,CAAEgJ,4BAA4B,GAASqC,GAAS/L,GAAYrU,EAAMud,mBAC7F,IACAjV,EAAMuY,MACT5V,MAAO,IAAK3C,EAAM2C,OACrB,GACF,CAAC8J,IACJ,GAAI/U,EAAMiL,MAAO,CACb,MAAMwW,EAAY,CAAC,EACnBnD,GAAkBmD,EAAWzhB,EAAMiL,MAAOjL,GAC1CwhB,EAAYvW,MAAQ,IAAKwW,KAAcD,EAAYvW,MACvD,CACA,OAAOuW,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB/Z,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAwBvC,MAvBkBuM,CAACE,EAAWrU,EAAO6E,EAAG1D,EAAoBqM,KAAa,IAA/B,aAAE8P,GAAcnc,EACtD,MAGMqgB,GAHiB/J,EAAepD,GAChCiN,GACA1C,IAC6B5e,EAAOsd,EAAc9P,EAAU6G,GAC5DuN,EPoBd,SAAqB5hB,EAAO6hB,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM5W,KAAOhL,EAQF,WAARgL,GAA4C,kBAAjBhL,EAAMqL,SAEjCqU,GAAc1U,KACU,IAAvB2W,GAA+BlC,GAAkBzU,KAChD6W,IAAUpC,GAAkBzU,IAE7BhL,EAAiB,WAAKgL,EAAIgN,WAAW,aACtC4J,EAAc5W,GAAOhL,EAAMgL,IAGnC,OAAO4W,CACX,COzC8BE,CAAY9hB,EAA4B,kBAAdqU,EAAwBsN,GAClEI,EAAe,IACdH,KACAJ,EACH3c,QAOE,SAAEuB,GAAapG,EACfgiB,GAAmBnP,EAAAA,EAAAA,UAAQ,IAAOoF,EAAc7R,GAAYA,EAASiR,MAAQjR,GAAW,CAACA,IAC/F,OAAO6b,EAAAA,EAAAA,eAAc5N,EAAW,IACzB0N,EACH3b,SAAU4b,GACZ,CAGV,CChCA,SAASE,GAAWC,EAAOhhB,EAAmBihB,EAAWC,GAAY,IAAxC,MAAEpX,EAAK,KAAEnJ,GAAMX,EACxCyK,OAAO8S,OAAOyD,EAAQlX,MAAOA,EAAOoX,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMpX,KAAOlJ,EACdqgB,EAAQlX,MAAMsX,YAAYvX,EAAKlJ,EAAKkJ,GAE5C,CCHA,MAAMwX,GAAsB,IAAI1T,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS2T,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAa5a,EAAWua,GAC5C,IAAK,MAAMrX,KAAO0X,EAAY7B,MAC1BsB,EAAQS,aAAcJ,GAAoBvT,IAAIjE,GAA0BA,EAAnBmD,EAAYnD,GAAY0X,EAAY7B,MAAM7V,GAEvG,CCNA,SAAS6X,GAA4B7iB,EAAO8iB,GACxC,MAAM,MAAE7X,GAAUjL,EACZ+iB,EAAY,CAAC,EACnB,IAAK,MAAM/X,KAAOC,GACVgN,EAAchN,EAAMD,KACnB8X,EAAU7X,OAASgN,EAAc6K,EAAU7X,MAAMD,KAClD+M,EAAoB/M,EAAKhL,MACzB+iB,EAAU/X,GAAOC,EAAMD,IAG/B,OAAO+X,CACX,CCVA,SAASF,GAA4B7iB,EAAO8iB,GACxC,MAAMC,EAAYC,GAA8BhjB,EAAO8iB,GACvD,IAAK,MAAM9X,KAAOhL,EACd,GAAIiY,EAAcjY,EAAMgL,KAASiN,EAAc6K,EAAU9X,IAAO,CAI5D+X,GAHuD,IAArClL,EAAmBjO,QAAQoB,GACvC,OAASA,EAAIiY,OAAO,GAAGC,cAAgBlY,EAAImY,UAAU,GACrDnY,GACiBhL,EAAMgL,EACjC,CAEJ,OAAO+X,CACX,CCfA,SAASK,GAAwBpjB,EAAOqjB,EAAYpM,GAAkD,IAA1CqM,EAAa1b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG2b,EAAe3b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfyb,IACPA,EAAaA,OAAsBvb,IAAXmP,EAAuBA,EAASjX,EAAMiX,OAAQqM,EAAeC,IAM/D,kBAAfF,IACPA,EAAarjB,EAAMsS,UAAYtS,EAAMsS,SAAS+Q,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBvb,IAAXmP,EAAuBA,EAASjX,EAAMiX,OAAQqM,EAAeC,IAElFF,CACX,CCvBA,MAAMG,GAAqB3R,GAChBhJ,MAAMiJ,QAAQD,GCCnB4R,GAAiB5R,GACZlH,QAAQkH,GAAkB,kBAANA,GAAkBA,EAAE6R,KAAO7R,EAAE8R,SAEtDC,GAAgC/R,GAE3B2R,GAAkB3R,GAAKA,EAAEA,EAAEhK,OAAS,IAAM,EAAIgK,ECCzD,SAASgS,GAAmBpb,GACxB,MAAMqb,EAAiB7L,EAAcxP,GAASA,EAAM4O,MAAQ5O,EAC5D,OAAOgb,GAAcK,GACfA,EAAeH,UACfG,CACV,CCMA,MAAMC,GAAsBC,GAAW,CAAChkB,EAAOwN,KAC3C,MAAMiF,GAAUG,EAAAA,EAAAA,YAAWlF,GACrByH,GAAkBvC,EAAAA,EAAAA,YAAWjF,GAC7BsW,EAAOA,IAbjB,SAAkB9iB,EAA+DnB,EAAOyS,EAAS0C,GAAiB,IAA/F,4BAAE0N,EAA2B,kBAAEqB,EAAiB,QAAEC,GAAUhjB,EAC3E,MAAMmH,EAAQ,CACVgV,aAAc8G,GAAiBpkB,EAAOyS,EAAS0C,EAAiB0N,GAChEH,YAAawB,KAKjB,OAHIC,IACA7b,EAAMoO,MAASD,GAAa0N,EAAQnkB,EAAOyW,EAAUnO,IAElDA,CACX,CAIuB+b,CAAUL,EAAQhkB,EAAOyS,EAAS0C,GACrD,OAAO3H,EAAWyW,ICdtB,SAAqBK,GACjB,MAAMzf,GAAMyQ,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBzQ,EAAI2Q,UACJ3Q,EAAI2Q,QAAU8O,KAEXzf,EAAI2Q,OACf,CDQ+B+O,CAAYN,EAAK,EAEhD,SAASG,GAAiBpkB,EAAOyS,EAAS0C,EAAiBqP,GACvD,MAAMnZ,EAAS,CAAC,EACVoZ,EAAeD,EAAmBxkB,EAAO,CAAC,GAChD,IAAK,MAAMgL,KAAOyZ,EACdpZ,EAAOL,GAAO6Y,GAAmBY,EAAazZ,IAElD,IAAI,QAAEwH,EAAO,QAAEL,GAAYnS,EAC3B,MAAM0kB,EAA0BxS,EAAsBlS,GAChD2kB,EAAkBtS,EAAcrS,GAClCyS,GACAkS,IACCD,IACiB,IAAlB1kB,EAAM0S,eACU5K,IAAZ0K,IACAA,EAAUC,EAAQD,cACN1K,IAAZqK,IACAA,EAAUM,EAAQN,UAE1B,IAAIyS,IAA4BzP,IACE,IAA5BA,EAAgB3C,QAEtBoS,EAA4BA,IAAyC,IAAZpS,EACzD,MAAMqS,EAAeD,EAA4BzS,EAAUK,EAC3D,GAAIqS,GACwB,mBAAjBA,IACN9S,EAAoB8S,GAAe,EACvBhc,MAAMiJ,QAAQ+S,GAAgBA,EAAe,CAACA,IACtD3Y,SAASmX,IACV,MAAMyB,EAAW1B,GAAwBpjB,EAAOqjB,GAChD,IAAKyB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAE/hB,KAAeub,GAAWuG,EACjD,IAAK,MAAM9Z,KAAOuT,EAAQ,CACtB,IAAIyG,EAAczG,EAAOvT,GACzB,GAAInC,MAAMiJ,QAAQkT,GAAc,CAQ5BA,EAAcA,EAHAJ,EACRI,EAAYnd,OAAS,EACrB,EAEV,CACoB,OAAhBmd,IACA3Z,EAAOL,GAAOga,EAEtB,CACA,IAAK,MAAMha,KAAO+Z,EACd1Z,EAAOL,GAAO+Z,EAAc/Z,EAAI,GAE5C,CACA,OAAOK,CACX,CE9EA,MAAM4Z,GAAQC,GAAQA,GCGd3U,SAAU4U,GAAOxU,OAAQyU,GAAa9c,MAAOsI,GAAS,MAAEb,IAAWR,EAAqD,qBAA1B8V,sBAAwCA,sBAAwBJ,IAAM,GCKtKK,GAAkB,CACpBlR,eAAgB2P,GAAmB,CAC/BlB,4BAA6BA,GAC7BqB,kBAAmB9C,GACnB+C,QAASA,CAACnkB,EAAOyW,EAAQtV,KAAoC,IAAlC,YAAEuhB,EAAW,aAAEpF,GAAcnc,EACpDgkB,GAAMI,MAAK,KACP,IACI7C,EAAY5B,WAEJ,oBADGrK,EAAS+O,QAEV/O,EAAS+O,UACT/O,EAASgP,uBACvB,CACA,MAAOC,GAEHhD,EAAY5B,WAAa,CACrB1I,EAAG,EACHC,EAAG,EACH2C,MAAO,EACP9Y,OAAQ,EAEhB,KAEJijB,GAAMnP,QAAO,KACTmK,GAAcuC,EAAapF,EAAc,CAAES,4BAA4B,GAASqC,GAAS3J,EAASkP,SAAU3lB,EAAMud,mBAClHkF,GAAUhM,EAAUiM,EAAY,GAClC,KC9BRkD,GAAmB,CACrBxR,eAAgB2P,GAAmB,CAC/BlB,4BAA2B,GAC3BqB,kBAAmB7F,MCP3B,SAASwH,GAAYtH,EAAQuH,EAAWC,GAAsC,IAA7BlZ,EAAOjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEoe,SAAS,GAElE,OADAzH,EAAO0H,iBAAiBH,EAAWC,EAASlZ,GACrC,IAAM0R,EAAO2H,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoB3d,GACI,UAAtBA,EAAM4d,YACyB,kBAAjB5d,EAAM6d,QAAuB7d,EAAM6d,QAAU,GAWhC,IAApB7d,EAAM8d,UCXrB,SAASC,GAAiB/d,GAA2B,IAApBge,EAAS5e,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACH6e,MAAO,CACHrO,EAAG5P,EAAMge,EAAY,KACrBnO,EAAG7P,EAAMge,EAAY,MAGjC,CACA,MAAME,GAAkBX,GACZvd,GAAU2d,GAAiB3d,IAAUud,EAAQvd,EAAO+d,GAAiB/d,ICRjF,SAASme,GAAgBpI,EAAQuH,EAAWC,EAASlZ,GACjD,OAAOgZ,GAAYtH,EAAQuH,EAAWY,GAAeX,GAAUlZ,EACnE,CCEA,MAAM+Z,GAAmBA,CAACC,EAAGC,IAAOjV,GAAMiV,EAAED,EAAEhV,IACxCkV,GAAO,mBAAAC,EAAApf,UAAAC,OAAIof,EAAY,IAAApe,MAAAme,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAAtf,UAAAsf,GAAA,OAAKD,EAAarc,OAAOgc,GAAiB,ECRvE,SAASO,GAAWjmB,GAChB,IAAIkmB,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOlmB,EACAmmB,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcpU,GACnB,IAAIgU,GAAO,EACX,GAAa,MAAThU,EACAgU,EAAOG,UAEN,GAAa,MAATnU,EACLgU,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACFnZ,WAAAA,CAAYoZ,GACRnZ,KAAKoZ,WAAY,EACjBpZ,KAAKmZ,KAAOA,CAChB,CACAnS,MAAAA,GAAW,ECCf,SAASqS,GAAcF,EAAMG,GACzB,MAAMnC,EAAY,WAAamC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOtB,GAAgBmB,EAAKtS,QAASsQ,GAXjBqC,CAAC3f,EAAO4f,KACxB,GAA0B,UAAtB5f,EAAM4d,aAA2BuB,KACjC,OACJ,MAAM3nB,EAAQ8nB,EAAKO,WACfP,EAAK7R,gBAAkBjW,EAAMsoB,YAC7BR,EAAK7R,eAAesS,UAAU,aAAcN,GAE5CjoB,EAAMkoB,IACN/C,GAAMxP,QAAO,IAAM3V,EAAMkoB,GAAc1f,EAAO4f,IAClD,GAEyD,CACzDpC,SAAU8B,EAAKO,WAAWH,IAElC,CChBA,MAAMM,GAAgBA,CAACvT,EAAQnK,MACtBA,IAGImK,IAAWnK,GAIT0d,GAAcvT,EAAQnK,EAAM2d,gBCL3C,SAASC,GAA0BxnB,EAAM6kB,GACrC,IAAKA,EACD,OACJ,MAAM4C,EAAwB,IAAIC,aAAa,UAAY1nB,GAC3D6kB,EAAQ4C,EAAuBpC,GAAiBoC,GACpD,CCVA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMzY,EAAWqY,GAAkBxR,IAAI4R,EAAM1K,QAC7C/N,GAAYA,EAASyY,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQjd,QAAQ8c,GAAqB,EAqBzC,SAASI,GAAoBjH,EAAStV,EAAS2D,GAC3C,MAAM6Y,EApBV,SAAiCloB,GAAuB,IAAtB,KAAEhB,KAAS0M,GAAS1L,EAClD,MAAMmoB,EAAanpB,GAAQ0N,SAItBkb,GAAU9Z,IAAIqa,IACfP,GAAUxR,IAAI+R,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAU1R,IAAIiS,GAC9Bte,EAAMwe,KAAKC,UAAU5c,GAQ3B,OAHK0c,EAAcve,KACfue,EAAcve,GAAO,IAAI0e,qBAAqBR,GAA0B,CAAE/oB,UAAS0M,KAEhF0c,EAAcve,EACzB,CAEsC2e,CAAyB9c,GAG3D,OAFAgc,GAAkBtR,IAAI4K,EAAS3R,GAC/B6Y,EAA0BO,QAAQzH,GAC3B,KACH0G,GAAkBzZ,OAAO+S,GACzBkH,EAA0BQ,UAAU1H,EAAQ,CAEpD,CC3CA,MAAM2H,GAAiB,CACnB1X,KAAM,EACN2X,IAAK,GCAT,MAAMC,GAAoB,CACtBzW,OAAQ,CACJsU,QDAR,cAA4BA,GACxBnZ,WAAAA,GACIub,SAASriB,WACT+G,KAAKub,gBAAiB,EACtBvb,KAAKwb,UAAW,CACpB,CACAC,aAAAA,GACIzb,KAAKgI,UACL,MAAM,SAAE0T,EAAW,CAAC,GAAM1b,KAAKmZ,KAAKO,YAC9B,KAAEloB,EAAM0B,OAAQyoB,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDxd,EAAU,CACZ1M,KAAMA,EAAOA,EAAKqV,aAAU1N,EAC5BwiB,aACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOnB,GAAoBza,KAAKmZ,KAAKtS,QAAS3I,GA7BhBoc,IAC1B,MAAM,eAAEyB,GAAmBzB,EAI3B,GAAIta,KAAKwb,WAAaO,EAClB,OAMJ,GALA/b,KAAKwb,SAAWO,EAKZF,IAASE,GAAkB/b,KAAKub,eAChC,OAEKQ,IACL/b,KAAKub,gBAAiB,GAEtBvb,KAAKmZ,KAAK7R,gBACVtH,KAAKmZ,KAAK7R,eAAesS,UAAU,cAAemC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBjc,KAAKmZ,KAAKO,WACjD7X,EAAWka,EAAiBC,EAAkBC,EACpDpa,GAAYA,EAASyY,EAAM,GAGnC,CACAvS,KAAAA,GACI/H,KAAKyb,eACT,CACAzU,MAAAA,GACI,GAAoC,qBAAzB+T,qBACP,OACJ,MAAM,MAAE1pB,EAAK,UAAE8iB,GAAcnU,KAAKmZ,KAC5B+C,EAAoB,CAAC,SAAU,SAAU,QAAQzY,KAO/D,SAAiCjR,GAA0D,IAAzD,SAAEkpB,EAAW,CAAC,GAAGlpB,GAAIkpB,SAAUS,EAAe,CAAC,GAAGljB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQ1G,GAASmpB,EAASnpB,KAAU4pB,EAAa5pB,EACrD,CAToE6pB,CAAyB/qB,EAAO8iB,IACxF+H,GACAlc,KAAKyb,eAEb,CACAzT,OAAAA,GAAY,ICxDZtD,IAAK,CACDwU,QHMR,cAA2BA,GACvBnZ,WAAAA,GACIub,SAASriB,WACT+G,KAAKqc,qBAAuB/F,GAC5BtW,KAAKsc,mBAAqBhG,GAC1BtW,KAAKuc,0BAA4BjG,GACjCtW,KAAKwc,kBAAoB,CAACC,EAAYC,KAClC,GAAI1c,KAAK2c,WACL,OACJ3c,KAAKsc,qBACL,MAAMjrB,EAAQ2O,KAAKmZ,KAAKO,WAgBlBkD,EAA0B5E,GAAgB9Q,OAAQ,aAfhC2V,CAACC,EAAUC,KAC/B,IAAK/c,KAAKgd,gBACN,OACJ,MAAM,MAAEtM,EAAK,YAAEuM,EAAW,gBAAEC,GAAoBld,KAAKmZ,KAAKO,WAC1DlD,GAAMxP,QAAO,KAKRkW,GACIrD,GAAc7Z,KAAKmZ,KAAKtS,QAASiW,EAASlN,QAEzCc,GAASA,EAAMoM,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACJ,GACzC,GAEgF,CAAE1F,UAAWhmB,EAAMqf,OAASrf,EAAmB,eAC/H8rB,EAA8BnF,GAAgB9Q,OAAQ,iBAAiB,CAACkW,EAAaC,IAAerd,KAAKsd,YAAYF,EAAaC,IAAa,CAAEhG,UAAWhmB,EAAM4rB,aAAe5rB,EAAuB,mBAC9M2O,KAAKsc,mBAAqBlE,GAAKwE,EAAyBO,GACxDnd,KAAKud,WAAWd,EAAYC,EAAU,EAE1C1c,KAAKwd,qBAAuB,KACxB,MAmBMC,EAAwBvG,GAAYlX,KAAKmZ,KAAKtS,QAAS,WAnBtC6W,IACnB,GAAyB,UAArBA,EAAarhB,KAAmB2D,KAAK2c,WACrC,OAWJ3c,KAAKsc,qBACLtc,KAAKsc,mBAAqBpF,GAAYlX,KAAKmZ,KAAKtS,QAAS,SAXpC8W,IACM,UAAnBA,EAAWthB,KAAoB2D,KAAKgd,iBAExCjD,GAA0B,MAAM,CAAClgB,EAAO4f,KACpC,MAAM,MAAE/I,GAAU1Q,KAAKmZ,KAAKO,WACxBhJ,GACA8F,GAAMxP,QAAO,IAAM0J,EAAM7W,EAAO4f,IACpC,GACF,IAINM,GAA0B,QAAQ,CAAClgB,EAAO4f,KACtCzZ,KAAKud,WAAW1jB,EAAO4f,EAAK,GAC9B,IAQAmE,EAAqB1G,GAAYlX,KAAKmZ,KAAKtS,QAAS,QALvCgX,KACV7d,KAAK2c,YAEV5C,GAA0B,UAAU,CAACqD,EAAaC,IAAerd,KAAKsd,YAAYF,EAAaC,IAAY,IAG/Grd,KAAKuc,0BAA4BnE,GAAKqF,EAAuBG,EAAmB,CAExF,CACAL,UAAAA,CAAW1jB,EAAO4f,GACdzZ,KAAK2c,YAAa,EAClB,MAAM,WAAEhM,EAAU,SAAEC,GAAa5Q,KAAKmZ,KAAKO,WAIvC9I,GAAY5Q,KAAKmZ,KAAK7R,gBACtBtH,KAAKmZ,KAAK7R,eAAesS,UAAU,YAAY,GAE/CjJ,GACA6F,GAAMxP,QAAO,IAAM2J,EAAW9W,EAAO4f,IAE7C,CACAuD,aAAAA,GACIhd,KAAKsc,qBACLtc,KAAK2c,YAAa,EAKlB,OAJc3c,KAAKmZ,KAAKO,WACd9I,UAAY5Q,KAAKmZ,KAAK7R,gBAC5BtH,KAAKmZ,KAAK7R,eAAesS,UAAU,YAAY,IAE3CZ,IACZ,CACAsE,WAAAA,CAAYzjB,EAAO4f,GACf,IAAKzZ,KAAKgd,gBACN,OACJ,MAAM,YAAEC,GAAgBjd,KAAKmZ,KAAKO,WAC9BuD,GACAzG,GAAMxP,QAAO,IAAMiW,EAAYpjB,EAAO4f,IAE9C,CACA1R,KAAAA,GACI,MAAM1W,EAAQ2O,KAAKmZ,KAAKO,WAClBoE,EAAwB9F,GAAgB3mB,EAAM6rB,gBAAkBhW,OAASlH,KAAKmZ,KAAKtS,QAAS,cAAe7G,KAAKwc,kBAAmB,CAAEnF,UAAWhmB,EAAMsf,YAActf,EAAsB,kBAC1L0sB,EAAsB7G,GAAYlX,KAAKmZ,KAAKtS,QAAS,QAAS7G,KAAKwd,sBACzExd,KAAKqc,qBAAuBjE,GAAK0F,EAAuBC,EAC5D,CACA/V,OAAAA,GACIhI,KAAKqc,uBACLrc,KAAKsc,qBACLtc,KAAKuc,2BACT,IGzGAnoB,MAAO,CACH8kB,QCTR,cAA2BA,GACvBnZ,WAAAA,GACIub,SAASriB,WACT+G,KAAKsZ,UAAW,CACpB,CACA0E,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBje,KAAKmZ,KAAKtS,QAAQqX,QAAQ,iBAC/C,CACA,MAAOnH,GACHkH,GAAiB,CACrB,CACKA,GAAmBje,KAAKmZ,KAAK7R,iBAElCtH,KAAKmZ,KAAK7R,eAAesS,UAAU,cAAc,GACjD5Z,KAAKsZ,UAAW,EACpB,CACA6E,MAAAA,GACSne,KAAKsZ,UAAatZ,KAAKmZ,KAAK7R,iBAEjCtH,KAAKmZ,KAAK7R,eAAesS,UAAU,cAAc,GACjD5Z,KAAKsZ,UAAW,EACpB,CACAvR,KAAAA,GACI/H,KAAKgI,QAAUoQ,GAAKlB,GAAYlX,KAAKmZ,KAAKtS,QAAS,SAAS,IAAM7G,KAAKge,YAAY9G,GAAYlX,KAAKmZ,KAAKtS,QAAS,QAAQ,IAAM7G,KAAKme,WACzI,CACAnW,OAAAA,GAAY,IDtBZtT,MAAO,CACHwkB,QLQR,cAA2BA,GACvBnR,KAAAA,GACI/H,KAAKgI,QAAUoQ,GAAKiB,GAAcrZ,KAAKmZ,MAAM,GAAOE,GAAcrZ,KAAKmZ,MAAM,GACjF,CACAnR,OAAAA,GAAY,KO5BhB,SAASoW,GAAernB,EAAMsnB,GAC1B,IAAKnkB,MAAMiJ,QAAQkb,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKnlB,OACxB,GAAIolB,IAAevnB,EAAKmC,OACpB,OAAO,EACX,IAAK,IAAImB,EAAI,EAAGA,EAAIikB,EAAYjkB,IAC5B,GAAIgkB,EAAKhkB,KAAOtD,EAAKsD,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASkkB,GAAelY,EAAeqO,EAAYpM,GAC/C,MAAMjX,EAAQgV,EAAcqT,WAC5B,OAAOjF,GAAwBpjB,EAAOqjB,OAAuBvb,IAAXmP,EAAuBA,EAASjX,EAAMiX,OAf5F,SAAoBjC,GAChB,MAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAc3J,OAAOa,SAAQ,CAACzD,EAAOuC,IAASwK,EAAQxK,GAAOvC,EAAM4O,QAC5D7B,CACX,CAWoG2X,CAAWnY,GAP/G,SAAqBA,GACjB,MAAMoY,EAAW,CAAC,EAElB,OADApY,EAAc3J,OAAOa,SAAQ,CAACzD,EAAOuC,IAASoiB,EAASpiB,GAAOvC,EAAMyP,gBAC7DkV,CACX,CAG+HlV,CAAYlD,GAC3I,CCnBA,IAAIqY,GAAUpI,GACVqI,GAAYrI,GCGhB,MAAMsI,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAWhlB,MAAMiJ,QAAQ+b,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOljB,SAASkjB,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBhlB,MAAMiJ,QAAQ+b,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB9sB,IAAA,IAAE0lB,EAAGC,EAAGoH,EAAG5uB,GAAE6B,EAAA,sBAAAd,OAAqBwmB,EAAC,MAAAxmB,OAAKymB,EAAC,MAAAzmB,OAAK6tB,EAAC,MAAA7tB,OAAKf,EAAC,MAC3EyuB,GAAuB,CACzBI,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQP,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CQ,QAASR,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CS,OAAQT,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDU,QAASV,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASW,GAAwBf,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBhlB,MAAMiJ,QAAQ+b,GACVA,EAAOnkB,IAAIklB,IACXb,GAAqBF,EACnC,CCRA,MAAMgB,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EACEG,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOtK,GACX,MAAMuK,EAAYC,GArBtB,SAAyBrX,EAAGsX,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA7mB,EAAI,EACR,GACI6mB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWf,GAAWgB,EAAUT,EAAKE,GAAOlX,EACxCwX,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ3mB,KAAK4mB,IAAIF,GAAYX,MACxBjmB,EAAIkmB,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWW,EAASV,GAAIO,EAAKE,EACxE,CC9CA,MAAMlB,GAASc,GAAY,IAAM,EAAG,EAAG,GACjCb,GAAUa,GAAY,EAAG,EAAG,IAAM,GAClCZ,GAAYY,GAAY,IAAM,EAAG,IAAM,GCJvCa,GAAiB5B,GACZvlB,MAAMiJ,QAAQsc,IAA4B,kBAAZA,EAAK,GCCxC6B,GAAgBpC,GAAYtgB,GAAMA,GAAK,GAAMsgB,EAAO,EAAItgB,GAAK,GAAK,EAAIsgB,EAAO,GAAK,EAAItgB,KAAO,ECA7F2iB,GAAiBrC,GAAYtgB,GAAM,EAAIsgB,EAAO,EAAItgB,GCClDihB,GAAUjhB,GAAM,EAAIrE,KAAKinB,IAAIjnB,KAAKknB,KAAK7iB,IACvCkhB,GAAUyB,GAAc1B,IACxB6B,GAAYJ,GAAazB,ICDzBG,GAAUQ,GAAY,IAAM,KAAM,IAAM,KACxCT,GAASwB,GAAcvB,IACvB2B,GAAYL,GAAavB,ICEzB6B,GAAe,CACjBpC,OAAQlJ,GACRoJ,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN6B,UAAS,GACT5B,QAAO,GACPC,OAAM,GACN4B,UAAS,GACT3B,QAAO,GACP6B,WCjBgBjjB,IAAOA,GAAK,GAAK,EAAI,GAAMmhB,GAAOnhB,GAAK,IAAO,EAAIrE,KAAKunB,IAAI,GAAI,IAAMljB,EAAI,MDmBvFmjB,GAA8BrN,IAChC,GAAIxa,MAAMiJ,QAAQuR,GAAa,CAE3BiK,GAAgC,IAAtBjK,EAAWxb,OAAc,2DACnC,MAAO8oB,EAAIC,EAAIC,EAAIC,GAAMzN,EACzB,OAAO8L,GAAYwB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfzN,GAEZiK,QAAuCxlB,IAA7ByoB,GAAalN,GAA2B,wBAAFhjB,OAA0BgjB,EAAU,MAC7EkN,GAAalN,IAEjBA,CAAU,EE3Bf0N,GAAgBA,CAACpwB,EAAMqwB,IAAcnf,GAChClH,QAAS8O,GAAS5H,IAAM2H,GAAiB7B,KAAK9F,IAAMA,EAAEmG,WAAWrX,IACnEqwB,GAAYplB,OAAO6F,UAAUC,eAAeC,KAAKE,EAAGmf,IAEvDC,GAAaA,CAACC,EAAOC,EAAOC,IAAWvf,IACzC,IAAK4H,GAAS5H,GACV,OAAOA,EACX,MAAOgV,EAAGC,EAAGoH,EAAGxqB,GAASmO,EAAEwf,MAAM/X,IACjC,MAAO,CACH,CAAC4X,GAAQhY,WAAW2N,GACpB,CAACsK,GAAQjY,WAAW4N,GACpB,CAACsK,GAAQlY,WAAWgV,GACpBxqB,WAAiBoE,IAAVpE,EAAsBwV,WAAWxV,GAAS,EACpD,ECbC4tB,GAAU,IACTtY,EACHF,UAAYjH,GAAM3I,KAAKmQ,MAHLxH,IAAMkH,EAAM,EAAG,IAAKlH,GAGT0f,CAAa1f,KAExC2f,GAAO,CACT7Z,KAAMoZ,GAAc,MAAO,OAC3B9X,MAAOgY,GAAW,MAAO,QAAS,QAClCnY,UAAW3X,IAAA,IAAC,IAAEswB,EAAG,MAAEC,EAAK,KAAEC,EAAMjuB,MAAOkuB,EAAU,GAAGzwB,EAAA,MAAK,QACrDmwB,GAAQxY,UAAU2Y,GAClB,KACAH,GAAQxY,UAAU4Y,GAClB,KACAJ,GAAQxY,UAAU6Y,GAClB,KACAvY,EAAS1V,EAAMoV,UAAU8Y,IACzB,GAAG,GCYX,MAAMC,GAAM,CACRla,KAAMoZ,GAAc,KACpB9X,MAhCJ,SAAkBpH,GACd,IAAIigB,EAAI,GACJC,EAAI,GACJjL,EAAI,GACJD,EAAI,GAmBR,OAjBIhV,EAAEhK,OAAS,GACXiqB,EAAIjgB,EAAEsR,UAAU,EAAG,GACnB4O,EAAIlgB,EAAEsR,UAAU,EAAG,GACnB2D,EAAIjV,EAAEsR,UAAU,EAAG,GACnB0D,EAAIhV,EAAEsR,UAAU,EAAG,KAInB2O,EAAIjgB,EAAEsR,UAAU,EAAG,GACnB4O,EAAIlgB,EAAEsR,UAAU,EAAG,GACnB2D,EAAIjV,EAAEsR,UAAU,EAAG,GACnB0D,EAAIhV,EAAEsR,UAAU,EAAG,GACnB2O,GAAKA,EACLC,GAAKA,EACLjL,GAAKA,EACLD,GAAKA,GAEF,CACH4K,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASlL,EAAG,IAClBpjB,MAAOmjB,EAAImL,SAASnL,EAAG,IAAM,IAAM,EAE3C,EAII/N,UAAW0Y,GAAK1Y,WC/BdmZ,GAAO,CACTta,KAAMoZ,GAAc,MAAO,OAC3B9X,MAAOgY,GAAW,MAAO,aAAc,aACvCnY,UAAW3X,IAAwD,IAAvD,IAAE+wB,EAAG,WAAEC,EAAU,UAAEC,EAAW1uB,MAAOkuB,EAAU,GAAGzwB,EAC1D,MAAQ,QACJ+H,KAAKmQ,MAAM6Y,GACX,KACAnY,GAAQjB,UAAUM,EAAS+Y,IAC3B,KACApY,GAAQjB,UAAUM,EAASgZ,IAC3B,KACAhZ,EAAS1V,EAAMoV,UAAU8Y,IACzB,GAAG,GCZTpxB,GAAQ,CACVmX,KAAO9F,GAAM2f,GAAK7Z,KAAK9F,IAAMggB,GAAIla,KAAK9F,IAAMogB,GAAKta,KAAK9F,GACtDoH,MAAQpH,GACA2f,GAAK7Z,KAAK9F,GACH2f,GAAKvY,MAAMpH,GAEbogB,GAAKta,KAAK9F,GACRogB,GAAKhZ,MAAMpH,GAGXggB,GAAI5Y,MAAMpH,GAGzBiH,UAAYjH,GACD4H,GAAS5H,GACVA,EACAA,EAAEH,eAAe,OACb8f,GAAK1Y,UAAUjH,GACfogB,GAAKnZ,UAAUjH,ICF3B6R,GAAMA,CAAC5a,EAAMupB,EAAIC,KAAcA,EAAWxpB,EAAOwpB,EAAWD,EAAKvpB,ECpBvE,SAASypB,GAAShlB,EAAGilB,EAAG1D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDvhB,EAAc,GAATilB,EAAIjlB,GAASuhB,EACzBA,EAAI,GACG0D,EACP1D,EAAI,EAAI,EACDvhB,GAAKilB,EAAIjlB,IAAM,EAAI,EAAIuhB,GAAK,EAChCvhB,CACX,CCHA,MAAMklB,GAAiBA,CAAC3pB,EAAMupB,EAAIxgB,KAC9B,MAAM6gB,EAAW5pB,EAAOA,EACxB,OAAOI,KAAKypB,KAAKzpB,KAAKG,IAAI,EAAGwI,GAAKwgB,EAAKA,EAAKK,GAAYA,GAAU,EAEhEE,GAAa,CAACf,GAAKL,GAAMS,IAE/B,SAASY,GAAOryB,GACZ,MAAMG,GAFYkR,EAEQrR,EAFFoyB,GAAWE,MAAMnyB,GAASA,EAAKgX,KAAK9F,MAA1CA,MAGlByb,GAAU3iB,QAAQhK,GAAO,IAAFN,OAAMG,EAAK,yEAClC,IAAIuyB,EAAQpyB,EAAKsY,MAAMzY,GAKvB,OAJIG,IAASsxB,KAETc,EDRR,SAAmB5xB,GAAwC,IAAvC,IAAE+wB,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE1uB,GAAOvC,EACrD+wB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKQ,EAGA,CACD,MAAMK,EAAIJ,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5kB,EAAI,EAAI6kB,EAAYI,EAC1Bf,EAAMc,GAAShlB,EAAGilB,EAAGN,EAAM,EAAI,GAC/BR,EAAQa,GAAShlB,EAAGilB,EAAGN,GACvBP,EAAOY,GAAShlB,EAAGilB,EAAGN,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKvoB,KAAKmQ,MAAY,IAANoY,GAChBC,MAAOxoB,KAAKmQ,MAAc,IAARqY,GAClBC,KAAMzoB,KAAKmQ,MAAa,IAAPsY,GACjBjuB,QAER,CCjBgBsvB,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACnqB,EAAMupB,KACpB,MAAMa,EAAWL,GAAO/pB,GAClBqqB,EAASN,GAAOR,GAChBe,EAAU,IAAKF,GACrB,OAAQrhB,IACJuhB,EAAQ3B,IAAMgB,GAAeS,EAASzB,IAAK0B,EAAO1B,IAAK5f,GACvDuhB,EAAQ1B,MAAQe,GAAeS,EAASxB,MAAOyB,EAAOzB,MAAO7f,GAC7DuhB,EAAQzB,KAAOc,GAAeS,EAASvB,KAAMwB,EAAOxB,KAAM9f,GAC1DuhB,EAAQ1vB,MAAQggB,GAAIwP,EAASxvB,MAAOyvB,EAAOzvB,MAAOmO,GAC3C2f,GAAK1Y,UAAUsa,GACzB,ECtBL,MAAMC,GAAkB,CACpBC,MzEZqB,gFyEarBC,SAAU,OACV7a,MAAO,OACPO,MAAOgM,IAELuO,GAAiB,CACnBF,MAAO/Z,GACPga,SAAU,SACV7a,MAAO,OACPO,MAAOzY,GAAMyY,OAEXwa,GAAkB,CACpBH,MAAOha,GACPia,SAAU,UACV7a,MAAO,OACPO,MAAOD,EAAOC,OAElB,SAASya,GAAStL,EAAIjnB,GAAqC,IAAnC,MAAEmyB,EAAK,SAAEC,EAAQ,MAAE7a,EAAK,MAAEO,GAAO9X,EACrD,MAAM0rB,EAAUzE,EAAKuL,UAAUtC,MAAMiC,GAChCzG,IAELzE,EAAK,MAAQmL,GAAY1G,EAAQhlB,OACjCugB,EAAKuL,UAAYvL,EAAKuL,UAAUtlB,QAAQilB,EAAO5a,GAC/C0P,EAAK/c,OAAON,QAAQ8hB,EAAQnjB,IAAIuP,IACpC,CACA,SAAS2a,GAAoBnrB,GACzB,MAAMorB,EAAgBprB,EAAMqrB,WACtB1L,EAAO,CACT3f,MAAOorB,EACPF,UAAWE,EACXxoB,OAAQ,GACR0oB,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJI7L,EAAK3f,MAAMiP,SAAS,WACpBgc,GAAStL,EAAMiL,IACnBK,GAAStL,EAAMoL,IACfE,GAAStL,EAAMqL,IACRrL,CACX,CACA,SAAS8L,GAAkBriB,GACvB,OAAO+hB,GAAoB/hB,GAAGxG,MAClC,CACA,SAAS8oB,GAAkB3V,GACvB,MAAM,OAAEnT,EAAM,UAAE2oB,EAAS,QAAED,EAAO,UAAEJ,GAAcC,GAAoBpV,GAChE4V,EAAY/oB,EAAOxD,OACzB,OAAQgK,IACJ,IAAIhH,EAAS8oB,EACb,IAAK,IAAI3qB,EAAI,EAAGA,EAAIorB,EAAWprB,IAEvB6B,EADA7B,EAAI+qB,EACKlpB,EAAOwD,QAAQglB,GAAgB3a,MAAO7G,EAAE7I,IAE5CA,EAAI+qB,EAAUC,EACVnpB,EAAOwD,QAAQmlB,GAAe9a,MAAOlY,GAAMsY,UAAUjH,EAAE7I,KAGvD6B,EAAOwD,QAAQolB,GAAgB/a,MAAOU,EAASvH,EAAE7I,KAGlE,OAAO6B,CAAM,CAErB,CACA,MAAMwpB,GAAwBxiB,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMyiB,GAAU,CACZ3c,KA/EJ,SAAc9F,GACV,IAAI+N,EAAI2U,EACR,OAAQC,MAAM3iB,IACV4H,GAAS5H,MACwB,QAA9B+N,EAAK/N,EAAEwf,MAAM/X,WAAgC,IAAPsG,OAAgB,EAASA,EAAG/X,SAAW,KAC3C,QAA9B0sB,EAAK1iB,EAAEwf,MAAM9X,WAAgC,IAAPgb,OAAgB,EAASA,EAAG1sB,SAAW,GAChF,CACZ,EAyEIoR,MAAOib,GACPC,qBACAM,kBATJ,SAA2B5iB,GACvB,MAAM6iB,EAASR,GAAkBriB,GAEjC,OADoBsiB,GAAkBtiB,EAC/BpG,CAAYipB,EAAOhrB,IAAI2qB,IAClC,GC5EMM,GAAeA,CAAC7U,EAAQvB,IAAYhR,GAAC,GAAAlN,OAAQkN,EAAI,EAAIgR,EAASuB,GACpE,SAAS8U,GAAS9U,EAAQvB,GACtB,MAAsB,kBAAXuB,EACCjO,GAAM6R,GAAI5D,EAAQvB,EAAQ1M,GAE7BrR,GAAMmX,KAAKmI,GACTmT,GAASnT,EAAQvB,GAGjBuB,EAAO9H,WAAW,QACnB2c,GAAa7U,EAAQvB,GACrBsW,GAAW/U,EAAQvB,EAEjC,CACA,MAAMuW,GAAWA,CAAChsB,EAAMupB,KACpB,MAAMxnB,EAAS,IAAI/B,GACbsrB,EAAYvpB,EAAOhD,OACnBktB,EAAajsB,EAAKY,KAAI,CAACsrB,EAAUhsB,IAAM4rB,GAASI,EAAU3C,EAAGrpB,MACnE,OAAQ6I,IACJ,IAAK,IAAI7I,EAAI,EAAGA,EAAIorB,EAAWprB,IAC3B6B,EAAO7B,GAAK+rB,EAAW/rB,GAAG6I,GAE9B,OAAOhH,CAAM,CAChB,EAECoqB,GAAYA,CAACnV,EAAQvB,KACvB,MAAM1T,EAAS,IAAKiV,KAAWvB,GACzBwW,EAAa,CAAC,EACpB,IAAK,MAAM/pB,KAAOH,OACM/C,IAAhBgY,EAAO9U,SAAsClD,IAAhByW,EAAOvT,KACpC+pB,EAAW/pB,GAAO4pB,GAAS9U,EAAO9U,GAAMuT,EAAOvT,KAGvD,OAAQ6G,IACJ,IAAK,MAAM7G,KAAO+pB,EACdlqB,EAAOG,GAAO+pB,EAAW/pB,GAAK6G,GAElC,OAAOhH,CAAM,CAChB,EAECgqB,GAAaA,CAAC/U,EAAQvB,KACxB,MAAM2W,EAAWZ,GAAQH,kBAAkB5V,GACrC4W,EAAcvB,GAAoB9T,GAClCsV,EAAcxB,GAAoBrV,GAIxC,OAHuB4W,EAAYpB,UAAYqB,EAAYrB,SACvDoB,EAAYnB,YAAcoB,EAAYpB,WACtCmB,EAAYlB,YAAcmB,EAAYnB,WAE/BlN,GAAK+N,GAASK,EAAY9pB,OAAQ+pB,EAAY/pB,QAAS6pB,IAG9D7H,IAAQ,EAAM,mBAAFhtB,OAAqByf,EAAM,WAAAzf,OAAUke,EAAM,6KAChDoW,GAAa7U,EAAQvB,GAChC,EChDE+T,GAAWA,CAACxpB,EAAMupB,EAAI5pB,KACxB,MAAM4sB,EAAmBhD,EAAKvpB,EAC9B,OAA4B,IAArBusB,EAAyB,GAAK5sB,EAAQK,GAAQusB,CAAgB,ECJnEC,GAAYA,CAACxsB,EAAMupB,IAAQ9kB,GAAMmW,GAAI5a,EAAMupB,EAAI9kB,GAgBrD,SAASgoB,GAAa1qB,EAAQujB,EAAMoH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,kBADO3jB,EAiB+BhH,EAAO,IAfnDyqB,GAEW,kBAANzjB,EACLrR,GAAMmX,KAAK9F,GAAKohB,GAAW4B,GAE7BhsB,MAAMiJ,QAAQD,GACZijB,GAEW,kBAANjjB,EACLojB,GAEJK,IAbX,IAA4BzjB,EAkBxB,MAAM8jB,EAAY9qB,EAAOhD,OAAS,EAClC,IAAK,IAAImB,EAAI,EAAGA,EAAI2sB,EAAW3sB,IAAK,CAChC,IAAI4sB,EAAQF,EAAa7qB,EAAO7B,GAAI6B,EAAO7B,EAAI,IAC/C,GAAIolB,EAAM,CACN,MAAMyH,EAAiBhtB,MAAMiJ,QAAQsc,GAAQA,EAAKplB,IAAMic,GAAOmJ,EAC/DwH,EAAQ7O,GAAK8O,EAAgBD,EACjC,CACAH,EAAO1qB,KAAK6qB,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAOlrB,GAAqD,IAA3CkO,MAAOid,GAAU,EAAI,KAAE5H,EAAI,MAAEwH,GAAOhuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMquB,EAAcF,EAAMluB,OAM1B,GALAylB,GAAU2I,IAAgBprB,EAAOhD,OAAQ,wDAKrB,IAAhBouB,EACA,MAAO,IAAMprB,EAAO,GAEpBkrB,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnBrrB,EAAS,IAAIA,GAAQqrB,WAEzB,MAAMT,EAASF,GAAa1qB,EAAQujB,EAAMwH,GACpCD,EAAYF,EAAO5tB,OACnBsuB,EAAgBtkB,IAClB,IAAI7I,EAAI,EACR,GAAI2sB,EAAY,EACZ,KAAO3sB,EAAI+sB,EAAMluB,OAAS,KAClBgK,EAAIkkB,EAAM/sB,EAAI,IADOA,KAKjC,MAAMotB,EAAkB9D,GAASyD,EAAM/sB,GAAI+sB,EAAM/sB,EAAI,GAAI6I,GACzD,OAAO4jB,EAAOzsB,GAAGotB,EAAgB,EAErC,OAAOJ,EACAnkB,GAAMskB,EAAapd,EAAMgd,EAAM,GAAIA,EAAME,EAAc,GAAIpkB,IAC5DskB,CACV,CCvFA,SAASE,GAAcC,GACnB,MAAMvW,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQwW,GACxB,MAAMptB,EAAM4W,EAAOA,EAAOlY,OAAS,GACnC,IAAK,IAAImB,EAAI,EAAGA,GAAKutB,EAAWvtB,IAAK,CACjC,MAAMwtB,EAAiBlE,GAAS,EAAGiE,EAAWvtB,GAC9C+W,EAAOhV,KAAK2Y,GAAIva,EAAK,EAAGqtB,GAC5B,CACJ,CDLIC,CAAW1W,EAAQuW,EAAIzuB,OAAS,GACzBkY,CACX,CEIA,SAAS2W,GAASv1B,GAA4E,IAA3E,SAAEgC,EAAW,IAAKuzB,UAAWC,EAAc,MAAEC,EAAK,KAAExI,EAAO,aAAcjtB,EAKxF,MAAM01B,EAAkB7G,GAAc5B,GAChCA,EAAK1kB,IAAIgnB,IACTA,GAA2BtC,GAK3B9lB,EAAQ,CACVwuB,MAAM,EACNruB,MAAOkuB,EAAe,IAKpBI,EC7BV,SAA8BhX,EAAQ5c,GAClC,OAAO4c,EAAOrW,KAAKstB,GAAMA,EAAI7zB,GACjC,CD2B0B8zB,CAGtBL,GAASA,EAAM/uB,SAAW8uB,EAAe9uB,OACnC+uB,EACAP,GAAcM,GAAiBxzB,GAC/B+zB,EAAoBpB,GAAYiB,EAAeJ,EAAgB,CACjEvI,KAAMvlB,MAAMiJ,QAAQ+kB,GACdA,GA9BSxrB,EA+BKsrB,EA/BG9I,EA+BagJ,EA9BjCxrB,EAAO3B,KAAI,IAAMmkB,GAAUU,KAAWpf,OAAO,EAAG9D,EAAOxD,OAAS,MAD3E,IAAuBwD,EAAQwiB,EAiC3B,MAAO,CACHsJ,mBAAoBh0B,EACpBuC,KAAOopB,IACHxmB,EAAMG,MAAQyuB,EAAkBpI,GAChCxmB,EAAMwuB,KAAOhI,GAAK3rB,EACXmF,GAGnB,CE1CA,SAAS8uB,GAAkBhK,EAAUiK,GACjC,OAAOA,EAAgBjK,GAAY,IAAOiK,GAAiB,CAC/D,CCNA,MAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc1I,EAAGtZ,GAC5C,MAAMiiB,EAAQvuB,KAAKG,IAAIylB,EAAIwI,GAAwB,GACnD,OAAOF,GAAkB5hB,EAAUgiB,EAAaC,GAAQ3I,EAAI2I,EAChE,CCFA,MAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAU52B,GAA6D,IACxE62B,EACAC,GAFY,SAAE90B,EAAW,IAAG,OAAE+0B,EAAS,IAAI,SAAE9K,EAAW,EAAC,KAAE+K,EAAO,GAAIh3B,EAG1EksB,GAAQlqB,GAAYoqB,GAAsBqK,IAAc,8CACxD,IAAIQ,EAAe,EAAIF,EAIvBE,EAAerf,EAAM8e,GAAYC,GAAYM,GAC7Cj1B,EAAW4V,EAAM4e,GAAaC,GAAanK,GAAsBtqB,IAC7Di1B,EAAe,GAIfJ,EAAYK,IACR,MAAMC,EAAmBD,EAAeD,EAClCxoB,EAAQ0oB,EAAmBn1B,EAC3B0jB,EAAIyR,EAAmBlL,EACvBtG,EAAIyR,GAAgBF,EAAcD,GAClClK,EAAIhlB,KAAKsvB,KAAK5oB,GACpB,OAAO8nB,GAAW7Q,EAAIC,EAAKoH,CAAC,EAEhC+J,EAAcI,IACV,MACMzoB,EADmByoB,EAAeD,EACPj1B,EAC3B7D,EAAIsQ,EAAQwd,EAAWA,EACvB1H,EAAIxc,KAAKunB,IAAI2H,EAAc,GAAKlvB,KAAKunB,IAAI4H,EAAc,GAAKl1B,EAC5Ds1B,EAAIvvB,KAAKsvB,KAAK5oB,GACdmiB,EAAIwG,GAAgBrvB,KAAKunB,IAAI4H,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBX,GAAU,GAAK,EAAI,KACzCp4B,EAAIomB,GAAK+S,GAAM1G,CAAC,IAOvCiG,EAAYK,GACEnvB,KAAKsvB,KAAKH,EAAel1B,KACxBk1B,EAAejL,GAAYjqB,EAAW,GACzCu0B,GAEZO,EAAcI,GACAnvB,KAAKsvB,KAAKH,EAAel1B,IACIA,EAAWA,GAAvCiqB,EAAWiL,KAI9B,MACMA,EAmBV,SAAyBL,EAAUC,EAAYS,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI1vB,EAAI,EAAGA,EAAI4vB,GAAgB5vB,IAChC2vB,GAAkBX,EAASW,GAAUV,EAAWU,GAEpD,OAAOA,CACX,CAzByBE,CAAgBb,EAAUC,EAD1B,EAAI90B,GAGzB,GADAA,EAAWoqB,GAAsBpqB,GAC7BqxB,MAAM6D,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACT51B,YAGH,CACD,MAAM21B,EAAY5vB,KAAKunB,IAAI4H,EAAc,GAAKF,EAC9C,MAAO,CACHW,YACAC,QAAwB,EAAfX,EAAmBlvB,KAAKypB,KAAKwF,EAAOW,GAC7C31B,WAER,CACJ,CACA,MAAMy1B,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAenvB,KAAKypB,KAAK,EAAIyF,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAarsB,EAAShB,GAC3B,OAAOA,EAAKuG,MAAMpH,QAAyBlD,IAAjB+E,EAAQ7B,IACtC,CAuBA,SAASmuB,GAAMh4B,GAAkD,IAAjD,UAAEu1B,EAAS,UAAE0C,EAAS,UAAEC,KAAcxsB,GAAS1L,EAC3D,MAAM2e,EAAS4W,EAAU,GACnBnY,EAASmY,EAAUA,EAAU7uB,OAAS,GAKtCS,EAAQ,CAAEwuB,MAAM,EAAOruB,MAAOqX,IAC9B,UAAEgZ,EAAS,QAAEC,EAAO,KAAEZ,EAAI,SAAEh1B,EAAQ,SAAEiqB,EAAQ,uBAAEkM,GA9B1D,SAA0BzsB,GACtB,IAAI0sB,EAAgB,CAChBnM,SAAU,EACV0L,UAAW,IACXC,QAAS,GACTZ,KAAM,EACNmB,wBAAwB,KACrBzsB,GAGP,IAAKqsB,GAAarsB,EAASosB,KACvBC,GAAarsB,EAASmsB,IAAe,CACrC,MAAMQ,EAAUzB,GAAWlrB,GAC3B0sB,EAAgB,IACTA,KACAC,EACHrB,KAAM,GAEVoB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiB,IAC5F5sB,EACHugB,UAAWK,GAAsB5gB,EAAQugB,UAAY,KAEnDsM,EAAkBtM,GAAY,EAC9BgL,EAAeW,GAAW,EAAI7vB,KAAKypB,KAAKmG,EAAYX,IACpDwB,EAAepb,EAASuB,EACxB8Z,EAAsBnM,GAAsBvkB,KAAKypB,KAAKmG,EAAYX,IAQlE0B,EAAkB3wB,KAAK4mB,IAAI6J,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,MAAM2B,EAAcxB,GAAgBqB,EAAqBxB,GAEzD0B,EAAiBhL,IACb,MAAMkJ,EAAW9uB,KAAKsvB,KAAKJ,EAAewB,EAAsB9K,GAChE,OAAQvQ,EACJyZ,IACO0B,EACCtB,EAAewB,EAAsBD,GACrCI,EACA7wB,KAAKinB,IAAI4J,EAAcjL,GACvB6K,EAAezwB,KAAK8wB,IAAID,EAAcjL,GAAG,CAE7D,MACK,GAAqB,IAAjBsJ,EAEL0B,EAAiBhL,GAAMvQ,EACnBrV,KAAKsvB,KAAKoB,EAAsB9K,IAC3B6K,GACID,EAAkBE,EAAsBD,GAAgB7K,OAEpE,CAED,MAAMmL,EAAoBL,EAAsB1wB,KAAKypB,KAAKyF,EAAeA,EAAe,GACxF0B,EAAiBhL,IACb,MAAMkJ,EAAW9uB,KAAKsvB,KAAKJ,EAAewB,EAAsB9K,GAE1DoL,EAAWhxB,KAAKC,IAAI8wB,EAAoBnL,EAAG,KACjD,OAAQvQ,EACHyZ,IACK0B,EACEtB,EAAewB,EAAsBD,GACrCzwB,KAAKixB,KAAKD,GACVD,EACIN,EACAzwB,KAAKkxB,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAO,CACH9C,mBAAoBmC,GAAyBn2B,GAAmB,KAChEuC,KAAOopB,IACH,MAAMtZ,EAAUskB,EAAchL,GAC9B,GAAKwK,EAqBDhxB,EAAMwuB,KAAOhI,GAAK3rB,MArBO,CACzB,IAAIogB,EAAkBmW,EACZ,IAAN5K,IAOIvL,EADA6U,EAAe,EACGb,GAAsBuC,EAAehL,EAAGtZ,GAGxC,GAG1B,MAAM6kB,EAA2BnxB,KAAK4mB,IAAIvM,IAAoB8V,EACxDiB,EAA+BpxB,KAAK4mB,IAAIvR,EAAS/I,IAAY4jB,EACnE9wB,EAAMwuB,KACFuD,GAA4BC,CACpC,CAKA,OADAhyB,EAAMG,MAAQH,EAAMwuB,KAAOvY,EAAS/I,EAC7BlN,CAAK,EAGxB,CC7HA,SAASiyB,GAAOp5B,GAAiK,IAAhK,UAAEu1B,EAAS,SAAEtJ,EAAW,EAAG,MAAEoN,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEzxB,EAAG,IAAEE,EAAG,UAAE+vB,EAAY,GAAG,UAAEC,GAAYl4B,EAC3K,MAAM2e,EAAS4W,EAAU,GACnBpuB,EAAQ,CACVwuB,MAAM,EACNruB,MAAOqX,GAGL+a,EAAmBhpB,QACT/J,IAARqB,EACOE,OACCvB,IAARuB,GAEGH,KAAK4mB,IAAI3mB,EAAM0I,GAAK3I,KAAK4mB,IAAIzmB,EAAMwI,GAD/B1I,EAC0CE,EAEzD,IAAIyxB,EAAYN,EAAQpN,EACxB,MAAM2N,EAAQjb,EAASgb,EACjBvc,OAA0BzW,IAAjB8yB,EAA6BG,EAAQH,EAAaG,GAK7Dxc,IAAWwc,IACXD,EAAYvc,EAASuB,GACzB,MAAMkb,EAAalM,IAAOgM,EAAY5xB,KAAKsvB,KAAK1J,EAAI2L,GAC9CQ,EAAcnM,GAAMvQ,EAASyc,EAAUlM,GACvCoM,EAAiBpM,IACnB,MAAMlf,EAAQorB,EAAUlM,GAClBnO,EAASsa,EAAWnM,GAC1BxmB,EAAMwuB,KAAO5tB,KAAK4mB,IAAIlgB,IAAUwpB,EAChC9wB,EAAMG,MAAQH,EAAMwuB,KAAOvY,EAASoC,CAAM,EAQ9C,IAAIwa,EACAC,EACJ,MAAMC,EAAsBvM,IAjCLjd,SAkCAvJ,EAAMG,WAlCSX,IAARqB,GAAqB0I,EAAI1I,QAAiBrB,IAARuB,GAAqBwI,EAAIxI,KAoCrF8xB,EAAsBrM,EACtBsM,EAAWjC,GAAO,CACdzC,UAAW,CAACpuB,EAAMG,MAAOoyB,EAAgBvyB,EAAMG,QAC/C2kB,SAAUmK,GAAsB0D,EAAYnM,EAAGxmB,EAAMG,OACrDswB,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,cACF,EAGN,OADAgC,EAAmB,GACZ,CACHlE,mBAAoB,KACpBzxB,KAAOopB,IAOH,IAAIwM,GAAkB,EAUtB,OATKF,QAAoCtzB,IAAxBqzB,IACbG,GAAkB,EAClBJ,EAAcpM,GACduM,EAAmBvM,SAMKhnB,IAAxBqzB,GAAqCrM,EAAIqM,EAClCC,EAAS11B,KAAKopB,EAAIqM,KAGxBG,GAAmBJ,EAAcpM,GAC3BxmB,EACX,EAGZ,CCjFA,IAAI4I,GACJ,SAASqqB,KACLrqB,QAAMpJ,CACV,CASA,MAAM0zB,GAAO,CACTtqB,IAAKA,UACWpJ,IAARoJ,IACAsqB,GAAKjkB,IAAI3G,GAAUd,cAAgBtB,EAC7BoC,GAAUf,UACVoB,YAAYC,OAEfA,IAEXqG,IAAMkkB,IACFvqB,GAAMuqB,EACNlqB,eAAegqB,GAAU,GCvB3BG,GAAmB/lB,IACrB,MAAMgmB,EAAgBx6B,IAAA,IAAC,UAAE0O,GAAW1O,EAAA,OAAKwU,EAAO9F,EAAU,EAC1D,MAAO,CACHlH,MAAOA,IAAMwc,GAAMxP,OAAOgmB,GAAe,GACzCC,KAAMA,IAAMxW,GAAYuW,GAKxBzqB,IAAKA,IAAON,GAAUd,aAAec,GAAUf,UAAY2rB,GAAKtqB,MACnE,ECTC2qB,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAI54B,EAAW,EAEf,IAAImF,EAAQyzB,EAAUr2B,KAAKvC,GAC3B,MAAQmF,EAAMwuB,MAAQ3zB,EAAW04B,IAC7B14B,GAHa,GAIbmF,EAAQyzB,EAAUr2B,KAAKvC,GAE3B,OAAOA,GAAY04B,GAAuBG,IAAW74B,CACzD,CCJA,MAAM84B,GAAQ,CACVC,MAAO3B,GACPA,QAAO,GACP4B,MAAOzF,GACPA,UAAWA,GACXyC,OAAMA,IASV,SAASiD,GAAYj7B,GAA2M,IAGxNk7B,EACAC,GAJc,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASf,GAAiBhF,UAAWgG,EAAW,KAAE/7B,EAAO,YAAW,OAAEg8B,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAapwB,GAAS1L,EACtN+7B,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAIN,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAMt7B,IAAS+1B,GAKxC,IAAI+G,EACAD,IAAqB9G,IACK,kBAAnBgG,EAAY,KAInBe,EAAwB3H,GAAY,CAAC,EAAG,KAAM4G,EAAa,CACvD3jB,OAAO,IAEX2jB,EAAc,CAAC,EAAG,MAEtB,MAAMX,EAAYyB,EAAiB,IAAK3wB,EAAS6pB,UAAWgG,IAC5D,IAAIgB,EACe,WAAfb,IACAa,EAAoBF,EAAiB,IAC9B3wB,EACH6pB,UAAW,IAAIgG,GAAaxG,UAC5B9I,WAAYvgB,EAAQugB,UAAY,MAGxC,IAAIuQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAU5E,oBAA+BwF,IACzCZ,EAAU5E,mBAAqB2E,GAAsBC,IAEzD,MAAM,mBAAE5E,GAAuB4E,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvB7E,IACA4G,EAAmB5G,EAAqByF,EACxCoB,EAAgBD,GAAoBpB,EAAS,GAAKC,GAEtD,IAAIqB,EAAc,EAClB,MAAMC,EAAQruB,IACV,GAAkB,OAAdguB,EACA,OAOAX,EAAQ,IACRW,EAAY30B,KAAKC,IAAI00B,EAAWhuB,IAChCqtB,EAAQ,IACRW,EAAY30B,KAAKC,IAAI0G,EAAYmuB,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMA10B,KAAKmQ,MAAMxJ,EAAYguB,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAczB,GAASU,GAAS,EAAI,GAAK,GAC5DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAc/0B,KAAKG,IAAI80B,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIY,EAAQ,CAMR,MAAMrK,EAAWppB,KAAKC,IAAI80B,EAAaD,GAAiBD,EAKxD,IAAIQ,EAAmBr1B,KAAKs1B,MAAMlM,GAK9BmM,EAAoBnM,EAAW,GAK9BmM,GAAqBnM,GAAY,IAClCmM,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBr1B,KAAKC,IAAIo1B,EAAkB5B,EAAS,GAIhChyB,QAAQ4zB,EAAmB,KAE3B,YAAf1B,GACA4B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAflB,IACLyB,EAAiBZ,IAGzBW,EAAUtlB,EAAM,EAAG,EAAG0lB,GAAqBV,CAC/C,CAMA,MAAMz1B,EAAQ81B,EACR,CAAEtH,MAAM,EAAOruB,MAAOi0B,EAAY,IAClC4B,EAAe54B,KAAK24B,GACtBZ,IACAn1B,EAAMG,MAAQg1B,EAAsBn1B,EAAMG,QAE9C,IAAI,KAAEquB,GAASxuB,EACV81B,GAAyC,OAAvBjH,IACnBL,EAAOoG,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2B7G,GAO7D,OANImG,GACAA,EAAS30B,EAAMG,OAEfi2B,GACAC,IAEGr2B,CAAK,EAEVs2B,EAAsBA,KACxBrB,GAAmBA,EAAgB3B,OACnC2B,OAAkBz1B,CAAS,EAEzB6I,EAASA,KACXgtB,EAAY,OACZiB,IACAvC,IACAe,IACAS,EAAYC,EAAa,IAAI,EAE3Ba,EAASA,KACXhB,EAAY,WACZX,GAAcA,IACd4B,IACAvC,GAAwB,EAEtBwC,EAAOA,KACT,GAAI1B,EACA,OACCI,IACDA,EAAkBd,EAAOyB,IAC7B,MAAMhtB,EAAMqsB,EAAgBrsB,MAC5B4rB,GAAUA,IACO,OAAbc,EACAC,EAAY3sB,EAAM0sB,EAEZC,GAA2B,aAAdF,IACnBE,EAAY3sB,GAEE,aAAdysB,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgB50B,OAAO,EAEvB4zB,GACAsC,IAEJ,MAAMC,EAAW,CACbC,KAAIA,CAACzB,EAAS0B,IACH1C,EAAuByC,KAAKzB,EAAS0B,GAEhD,QAAIxD,GACA,OAAO/N,GAAsBwQ,EACjC,EACA,QAAIzC,CAAKC,GACLA,EAAUlO,GAAsBkO,GAChCwC,EAAcxC,EACG,OAAbmC,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgBrsB,MAAQuqB,EAAUyB,EAH9CU,EAAWnC,CAKnB,EACA,YAAIt4B,GACA,MAAMA,EAA4C,OAAjC44B,EAAU5E,mBACrB2E,GAAsBC,GACtBA,EAAU5E,mBAChB,OAAO1J,GAAsBtqB,EACjC,EACA,SAAI+5B,GACA,OAAOA,CACX,EACA,SAAIA,CAAM+B,GACFA,IAAa/B,GAAUK,IAE3BL,EAAQ+B,EACRH,EAAStD,KAAO/N,GAAsBwQ,GAC1C,EACA,SAAI31B,GACA,OAAOq1B,CACX,EACAkB,OACAK,MAAOA,KACHvB,EAAY,SACZC,EAAWK,CAAW,EAE1BrC,KAAMA,KACFuB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZZ,GAAUA,IACVpsB,IAAQ,EAEZA,OAAQA,KACe,OAAfmtB,GACAI,EAAKJ,GACTntB,GAAQ,EAEZwuB,SAAUA,KACNxB,EAAY,UAAU,EAE1ByB,OAASf,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOS,CACX,CClSA,MAAMO,GCTN,SAAc7uB,GACV,IAAImoB,EACJ,MAAO,UACY7wB,IAAX6wB,IACAA,EAASnoB,KACNmoB,EAEf,CDEsB2G,EAAK,IAAM1zB,OAAO8F,eAAeC,KAAK4tB,QAAQ9tB,UAAW,aAIzE+tB,GAAoB,IAAI1wB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS2wB,GAA2Bh3B,EAAOi3B,EAASv+B,GAAwC,IAAtC,SAAE87B,EAAQ,WAAED,KAAenwB,GAAS1L,EAOtF,KAN+Bk+B,MAC3BG,GAAkBvwB,IAAIywB,KACrB7yB,EAAQ+vB,aACc,WAAvB/vB,EAAQgwB,YACY,IAApBhwB,EAAQksB,SACS,YAAjBlsB,EAAQlM,MAER,OAAO,EAIX,IACI07B,EACAC,EAFAa,GAAa,EAQbwC,GAAgB,EAKpB,MAAMvC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAGNF,IACA,IAAI,UAAE1G,EAAS,SAAEvzB,EAAW,IAAG,KAAEirB,EAAI,MAAEwI,GAAU/pB,EAIjD,GAvCkC+yB,EAACF,EAAW7yB,IAA6B,WAAjBA,EAAQlM,MACpD,oBAAd++B,IACC5R,GAAuBjhB,EAAQuhB,MAqC5BwR,CAA8BF,EAAW7yB,GAAU,CACnD,MAAMgzB,EAAkBzD,GAAa,IAC9BvvB,EACH8vB,OAAQ,EACRH,MAAO,IAEX,IAAIl0B,EAAQ,CAAEwuB,MAAM,EAAOruB,MAAOiuB,EAAU,IAC5C,MAAMoJ,EAAwB,GAK9B,IAAIhR,EAAI,EACR,MAAQxmB,EAAMwuB,MAAQhI,EArDV,KAsDRxmB,EAAQu3B,EAAgBT,OAAOtQ,GAC/BgR,EAAsB/0B,KAAKzC,EAAMG,OACjCqmB,GA7DQ,GA+DZ8H,OAAQ9uB,EACR4uB,EAAYoJ,EACZ38B,EAAW2rB,EAjEC,GAkEZV,EAAO,QACX,CACA,MAAMlb,EE3FV,SAAsBiP,EAASud,EAAWhJ,GAAwF,IAA7E,MAAE8F,EAAQ,EAAC,SAAEr5B,EAAQ,OAAEw5B,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEzO,EAAI,MAAEwI,GAAQhvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3H,MAAMm4B,EAAkB,CAAE,CAACL,GAAYhJ,GACnCE,IACAmJ,EAAgBhgB,OAAS6W,GAC7B,MAAM/I,EAASe,GAAwBR,GAMvC,OAFIvlB,MAAMiJ,QAAQ+b,KACdkS,EAAgBlS,OAASA,GACtB1L,EAAQhQ,QAAQ4tB,EAAiB,CACpCvD,QACAr5B,WACA0qB,OAAShlB,MAAMiJ,QAAQ+b,GAAmB,SAATA,EACjCmS,KAAM,OACNC,WAAYtD,EAAS,EACrB72B,UAA0B,YAAf+2B,EAA2B,YAAc,UAE5D,CFyEsBqD,CAAaz3B,EAAM03B,MAAM3qB,QAASkqB,EAAWhJ,EAAW,IACnE7pB,EACH1J,WASAirB,KAAMA,EACNwI,UAEEwJ,EAAkBA,KACpBT,GAAgB,EAChBzsB,EAAUvC,QAAQ,EAEhB0vB,EAAaA,KACfV,GAAgB,EAChBxa,GAAMxP,OAAOyqB,GACb/D,IACAe,GAAuB,EAU3BlqB,EAAUotB,SAAW,KACbX,IAEJl3B,EAAM8O,IGhId,SAA0Bmf,EAASv1B,GAAmC,IAAjC,OAAEw7B,EAAM,WAAEE,EAAa,QAAQ17B,EAIhE,OAAOu1B,EAHOiG,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACAjG,EAAU7uB,OAAS,EAE7B,CH2HkB04B,CAAiB7J,EAAW7pB,IACtCmwB,GAAcA,IACdqD,IAAY,EAoEhB,MA/DiB,CACbtB,KAAIA,CAACzB,EAAS0B,IACH1C,EAAuByC,KAAKzB,EAAS0B,GAEhDwB,eAAeC,IACXvtB,EAAUutB,SAAWA,EACrBvtB,EAAUotB,SAAW,KACdrb,IAEX,QAAIuW,GACA,OAAO/N,GAAsBva,EAAU+qB,aAAe,EAC1D,EACA,QAAIzC,CAAKC,GACLvoB,EAAU+qB,YAAc1Q,GAAsBkO,EAClD,EACA,SAAIyB,GACA,OAAOhqB,EAAUwtB,YACrB,EACA,SAAIxD,CAAM+B,GACN/rB,EAAUwtB,aAAezB,CAC7B,EACA,YAAI97B,GACA,OAAOsqB,GAAsBtqB,EACjC,EACA07B,KAAMA,KACE1B,IAEJjqB,EAAU2rB,OAIVzZ,GAAYgb,GAAgB,EAEhClB,MAAOA,IAAMhsB,EAAUgsB,QACvBtD,KAAMA,KAEF,GADAuB,GAAa,EACe,SAAxBjqB,EAAUyqB,UACV,OASJ,MAAM,YAAEM,GAAgB/qB,EACxB,GAAI+qB,EAAa,CACb,MAAM4B,EAAkBzD,GAAa,IAC9BvvB,EACH0vB,UAAU,IAEd9zB,EAAMk4B,gBAAgBd,EAAgBT,OAAOnB,EAlKzC,IAkKoEx1B,MAAOo3B,EAAgBT,OAAOnB,GAAax1B,MAlK/G,GAmKR,CACA43B,GAAY,EAEhBlB,SAAUA,KACFQ,GAEJzsB,EAAUyrB,QAAQ,EAEtBhuB,OAAQ0vB,EAGhB,CIrMA,MAAMO,GAAoB,CACtBjgC,KAAM,SACNm4B,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTwH,GAAsB,CACxBlgC,KAAM,YACNwC,SAAU,IAMRirB,GAAO,CACTztB,KAAM,YACNytB,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBjrB,SAAU,IAER29B,GAAuBA,CAACC,EAAQ5/B,KAAoB,IAAlB,UAAEu1B,GAAWv1B,EACjD,OAAIu1B,EAAU7uB,OAAS,EACZg5B,GAEF/oB,EAAe7I,IAAI8xB,GACjBA,EAAS/oB,WAAW,SAxBG,CAClCrX,KAAM,SACNm4B,UAAW,IACXC,QAAoB,IAsBarC,EAAU,GAtBnB,EAAIxtB,KAAKypB,KAAK,KAAO,GAC7C0G,UAAW,IAsBDuH,GAEHxS,EAAI,ECzBT4S,GAAeA,CAACh2B,EAAKvC,IAEX,WAARuC,MAKiB,kBAAVvC,IAAsBI,MAAMiJ,QAAQrJ,OAE1B,kBAAVA,IACN6rB,GAAQ3c,KAAKlP,IAAoB,MAAVA,GACvBA,EAAMuP,WAAW,UChBpBipB,GAAc,IAAInyB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASoyB,GAAmBrvB,GACxB,MAAO3Q,EAAMuH,GAASoJ,EAAEsvB,MAAM,GAAI,GAAGtnB,MAAM,KAC3C,GAAa,gBAAT3Y,EACA,OAAO2Q,EACX,MAAOmH,GAAUvQ,EAAM4oB,MAAM/X,KAAe,GAC5C,IAAKN,EACD,OAAOnH,EACX,MAAM8H,EAAOlR,EAAM4F,QAAQ2K,EAAQ,IACnC,IAAIooB,EAAeH,GAAYhyB,IAAI/N,GAAQ,EAAI,EAG/C,OAFI8X,IAAWvQ,IACX24B,GAAgB,KACblgC,EAAO,IAAMkgC,EAAeznB,EAAO,GAC9C,CACA,MAAM0nB,GAAgB,oBAChB32B,GAAS,IACR4pB,GACHG,kBAAoB5iB,IAChB,MAAMyvB,EAAYzvB,EAAEwf,MAAMgQ,IAC1B,OAAOC,EAAYA,EAAU53B,IAAIw3B,IAAoBluB,KAAK,KAAOnB,CAAC,GClBpE0vB,GAAoB,IACnBlnB,GAEH7Z,MAAK,GACLsC,gBAAiBtC,GACjBghC,aAAchhC,GACdw/B,KAAMx/B,GACNihC,OAAQjhC,GAER8D,YAAa9D,GACbkhC,eAAgBlhC,GAChBmhC,iBAAkBnhC,GAClBohC,kBAAmBphC,GACnBqhC,gBAAiBrhC,GACjBkK,OAAM,GACNo3B,aAAcp3B,IAKZq3B,GAAuB/2B,GAAQu2B,GAAkBv2B,GCvBvD,SAASypB,GAAkBzpB,EAAKvC,GAC5B,IAAIu5B,EAAmBD,GAAoB/2B,GAI3C,OAHIg3B,IAAqBt3B,KACrBs3B,EAAmB1N,IAEhB0N,EAAiBvN,kBAClBuN,EAAiBvN,kBAAkBhsB,QACnCX,CACV,CCTA,MAAMm6B,GAAqBpwB,GAAM,aAAa8F,KAAK9F,GCDnD,SAASqwB,GAAOz5B,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBw5B,GAAkBx5B,QAD7D,CAGT,CCDA,SAAS05B,GAAmBn/B,EAAYgI,GACpC,OAAOhI,EAAWgI,IAAQhI,EAAoB,SAAKA,CACvD,CCEA,MAAMo/B,GAAqB,SAAC1C,EAAWj3B,EAAO8V,GAA4B,IAApBvb,EAAU4E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAQo1B,IACJ,MAAMqF,EAAkBF,GAAmBn/B,EAAY08B,IAAc,CAAC,EAMhElD,EAAQ6F,EAAgB7F,OAASx5B,EAAWw5B,OAAS,EAK3D,IAAI,QAAE6B,EAAU,GAAMr7B,EACtBq7B,GAAoB9Q,GAAsBiP,GAC1C,MAAM9F,ECvBd,SAAsBjuB,EAAOi3B,EAAWnhB,EAAQvb,GAC5C,MAAMs/B,EAAqBtB,GAAatB,EAAWnhB,GACnD,IAAImY,EAEAA,EADA7tB,MAAMiJ,QAAQyM,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMgkB,OAAoCz6B,IAApB9E,EAAW8F,KAAqB9F,EAAW8F,KAAOL,EAAM4O,MAC9E,IAAImrB,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAIz5B,EAAI,EAAGA,EAAI0tB,EAAU7uB,OAAQmB,IAIb,OAAjB0tB,EAAU1tB,KACV0tB,EAAU1tB,GAAW,IAANA,EAAUu5B,EAAgB7L,EAAU1tB,EAAI,IAEvDk5B,GAAOxL,EAAU1tB,KACjBy5B,EAAoB13B,KAAK/B,GAGD,kBAAjB0tB,EAAU1tB,IACA,SAAjB0tB,EAAU1tB,IACO,MAAjB0tB,EAAU1tB,KACVw5B,EAA0B9L,EAAU1tB,IAG5C,GAAIs5B,GACAG,EAAoB56B,QACpB26B,EACA,IAAK,IAAIx5B,EAAI,EAAGA,EAAIy5B,EAAoB56B,OAAQmB,IAE5C0tB,EADc+L,EAAoBz5B,IACfyrB,GAAkBiL,EAAW8C,GAGxD,OAAO9L,CACX,CDf0BgM,CAAaj6B,EAAOi3B,EAAWnhB,EAAQ8jB,GAMnDM,EAAiBjM,EAAU,GAC3BkM,EAAiBlM,EAAUA,EAAU7uB,OAAS,GAC9Cg7B,EAAqB7B,GAAatB,EAAWiD,GAC7CL,EAAqBtB,GAAatB,EAAWkD,GACnDvV,GAAQwV,IAAuBP,EAAoB,6BAAFjiC,OAA+Bq/B,EAAS,WAAAr/B,OAAUsiC,EAAc,UAAAtiC,OAASuiC,EAAc,OAAAviC,OAAMsiC,EAAc,+DAAAtiC,OAA8DsiC,EAAc,8BAAAtiC,OAA6BuiC,EAAc,+BACnR,IAAI/1B,EAAU,CACV6pB,YACAtJ,SAAU3kB,EAAMyP,cAChBkW,KAAM,aACHiU,EACH7F,OAAQ6B,EACRpB,SAAWprB,IACPpJ,EAAM8O,IAAI1F,GACVwwB,EAAgBpF,UAAYoF,EAAgBpF,SAASprB,EAAE,EAE3DmrB,WAAYA,KACRA,IACAqF,EAAgBrF,YAAcqF,EAAgBrF,YAAY,GAwBlE,GDrER,SAA4B77B,GAA2I,IAA1I,KAAE2hC,EAAMtG,MAAOuG,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEvG,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAE9zB,EAAI,QAAEu1B,KAAYr7B,GAAY7B,EACjK,QAASyK,OAAOC,KAAK7I,GAAY6E,MACrC,CCkDas7B,CAAoBd,KACrBx1B,EAAU,IACHA,KACAi0B,GAAqBpB,EAAW7yB,KAQvCA,EAAQ1J,WACR0J,EAAQ1J,SAAWoqB,GAAsB1gB,EAAQ1J,WAEjD0J,EAAQ+vB,cACR/vB,EAAQ+vB,YAAcrP,GAAsB1gB,EAAQ+vB,eAEnDiG,IACAP,GACD3U,KACyB,IAAzB0U,EAAgB1hC,MAChB6N,EAKA,OEhFZ,SAA+BrN,GAA8C,IAA7C,UAAEu1B,EAAS,MAAE8F,EAAK,SAAES,EAAQ,WAAED,GAAa77B,EACvE,MAAMiiC,EAAWA,KACbnG,GAAYA,EAASvG,EAAUA,EAAU7uB,OAAS,IAClDm1B,GAAcA,IAQP,CACHxB,KAAM,EACN0B,MAAO,EACP/5B,SAAU,EACV07B,KAAO5Z,GACPia,MAAQja,GACR2W,KAAO3W,GACP8Z,KAAOzB,IACHA,IACOD,QAAQC,WAEnB3sB,OAASsU,GACTka,SAAWla,KAGnB,OAAOuX,EACDJ,GAAa,CACX1F,UAAW,CAAC,EAAG,GACfvzB,SAAU,EACVq5B,QACAQ,WAAYoG,IAEdA,GACV,CF8CmBC,CAAuB1V,GACxB,IAAK9gB,EAAS2vB,MAAO,GACrB3vB,GAKV,IAMC7J,EAAWsgC,WACR76B,EAAM03B,OACN13B,EAAM03B,MAAM3qB,mBAAmB+tB,cAK9B96B,EAAM03B,MAAM9X,WAAW4U,SAAU,CAClC,MAAMuG,EAAuB/D,GAA2Bh3B,EAAOi3B,EAAW7yB,GAC1E,GAAI22B,EACA,OAAOA,CACf,CAIA,OAAOpH,GAAavvB,EAAQ,CAEpC,EG/GA,SAAS42B,GAAwBh7B,GAC7B,OAAOkC,QAAQsN,EAAcxP,IAAUA,EAAMsG,IACjD,CCDA,MAAM20B,GAAqB7xB,GAAM,iBAAiB8F,KAAK9F,GCHvD,SAAS8xB,GAAcrN,EAAKhvB,IACG,IAAvBgvB,EAAI1sB,QAAQtC,IACZgvB,EAAIvrB,KAAKzD,EACjB,CACA,SAASs8B,GAAWtN,EAAKhvB,GACrB,MAAMwC,EAAQwsB,EAAI1sB,QAAQtC,GACtBwC,GAAS,GACTwsB,EAAInnB,OAAOrF,EAAO,EAC1B,CCNA,MAAM+5B,GACFn1B,WAAAA,GACIC,KAAKm1B,cAAgB,EACzB,CACA/0B,GAAAA,CAAIgX,GAEA,OADA4d,GAAch1B,KAAKm1B,cAAe/d,GAC3B,IAAM6d,GAAWj1B,KAAKm1B,cAAe/d,EAChD,CACAge,MAAAA,CAAOld,EAAGC,EAAGoH,GACT,MAAM8V,EAAmBr1B,KAAKm1B,cAAcj8B,OAC5C,GAAKm8B,EAEL,GAAyB,IAArBA,EAIAr1B,KAAKm1B,cAAc,GAAGjd,EAAGC,EAAGoH,QAG5B,IAAK,IAAIllB,EAAI,EAAGA,EAAIg7B,EAAkBh7B,IAAK,CAKvC,MAAM+c,EAAUpX,KAAKm1B,cAAc96B,GACnC+c,GAAWA,EAAQc,EAAGC,EAAGoH,EAC7B,CAER,CACA+V,OAAAA,GACI,OAAOt1B,KAAKm1B,cAAcj8B,MAC9B,CACAwH,KAAAA,GACIV,KAAKm1B,cAAcj8B,OAAS,CAChC,EC1BJ,MAIMq8B,GAAsB,CACxB1uB,aAAS1N,GAOb,MAAMq8B,GASFz1B,WAAAA,CAAY4V,GAAoB,IAAA8f,EAAA,SAAdv3B,EAAOjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EApBhBa,MAyBTkG,KAAK01B,QAAU,SAQf11B,KAAK21B,kBAAmB,EAIxB31B,KAAK41B,OAAS,CAAC,EACf51B,KAAK61B,gBAAkB,SAAC3yB,GAAqB,IAAlBmE,IAAMpO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC7B,MAAMq2B,EAAczC,GAAKtqB,MAMrBkzB,EAAKK,YAAcxG,GACnBmG,EAAKM,oBAETN,EAAKpX,KAAOoX,EAAK5uB,QACjB4uB,EAAKO,WAAW9yB,GAEZuyB,EAAK5uB,UAAY4uB,EAAKpX,MAAQoX,EAAKG,OAAOK,QAC1CR,EAAKG,OAAOK,OAAOb,OAAOK,EAAK5uB,SAG/BQ,GAAUouB,EAAKG,OAAOM,eACtBT,EAAKG,OAAOM,cAAcd,OAAOK,EAAK5uB,QAE9C,EACA7G,KAAKm2B,aAAc,EACnBn2B,KAAKg2B,WAAWrgB,GAChB3V,KAAK21B,kBA7DI77B,EA6DuBkG,KAAK6G,SA5DjCgf,MAAMtb,WAAWzQ,KA6DrBkG,KAAKwxB,MAAQtzB,EAAQszB,KACzB,CACAwE,UAAAA,CAAWnvB,GACP7G,KAAK6G,QAAUA,EACf7G,KAAK81B,UAAYjJ,GAAKtqB,KAC1B,CACAwzB,iBAAAA,GAAiD,IAA/BK,EAAcn9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+G,KAAK6G,QACpC7G,KAAKo2B,eAAiBA,EACtBp2B,KAAKq2B,cAAgBr2B,KAAK81B,SAC9B,CAyCAz8B,QAAAA,CAASi9B,GAIL,OAAOt2B,KAAKu2B,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGpf,EAAWtV,GACL7B,KAAK41B,OAAOze,KACbnX,KAAK41B,OAAOze,GAAa,IAAI+d,IAEjC,MAAMsB,EAAcx2B,KAAK41B,OAAOze,GAAW/W,IAAIyB,GAC/C,MAAkB,WAAdsV,EACO,KACHqf,IAKAhgB,GAAMI,MAAK,KACF5W,KAAK41B,OAAOK,OAAOX,WACpBt1B,KAAKitB,MACT,GACF,EAGHuJ,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiB12B,KAAK41B,OAC7B51B,KAAK41B,OAAOc,GAAeh2B,OAEnC,CAMAi2B,MAAAA,CAAOC,EAAeC,GAClB72B,KAAK42B,cAAgBA,EACrB52B,KAAK62B,kBAAoBA,CAC7B,CAgBAjuB,GAAAA,CAAI1F,GAAkB,IAAfmE,IAAMpO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACJoO,GAAWrH,KAAK42B,cAIjB52B,KAAK42B,cAAc1zB,EAAGlD,KAAK61B,iBAH3B71B,KAAK61B,gBAAgB3yB,EAAGmE,EAKhC,CACA2qB,eAAAA,CAAgB3T,EAAMxX,EAAS5F,GAC3BjB,KAAK4I,IAAI/B,GACT7G,KAAKqe,UAAOllB,EACZ6G,KAAKo2B,eAAiB/X,EACtBre,KAAKq2B,cAAgBr2B,KAAK81B,UAAY70B,CAC1C,CAKA61B,IAAAA,CAAK5zB,GACDlD,KAAK61B,gBAAgB3yB,GACrBlD,KAAKqe,KAAOnb,EACZlD,KAAKq2B,cAAgBr2B,KAAKo2B,oBAAiBj9B,EAC3C6G,KAAKitB,OACDjtB,KAAK62B,mBACL72B,KAAK62B,mBACb,CAQAnuB,GAAAA,GAII,OAHI6sB,GAAoB1uB,SACpB0uB,GAAoB1uB,QAAQzK,KAAK4D,MAE9BA,KAAK6G,OAChB,CAIAkwB,WAAAA,GACI,OAAO/2B,KAAKqe,IAChB,CAQA9U,WAAAA,GACI,MAAM+lB,EAAczC,GAAKtqB,MACzB,IAAKvC,KAAK21B,uBACkBx8B,IAAxB6G,KAAKo2B,gBACL9G,EAActvB,KAAK81B,UAjOJ,GAkOf,OAAO,EAEX,MAAM70B,EAAQ1G,KAAKC,IAAIwF,KAAK81B,UAAY91B,KAAKq2B,cApO1B,IAsOnB,OAAO5N,GAAkBle,WAAWvK,KAAK6G,SACrC0D,WAAWvK,KAAKo2B,gBAAiBn1B,EACzC,CAaAjH,KAAAA,CAAMg9B,GAEF,OADAh3B,KAAKitB,OACE,IAAIyB,SAASC,IAChB3uB,KAAKm2B,aAAc,EACnBn2B,KAAKuE,UAAYyyB,EAAerI,GAC5B3uB,KAAK41B,OAAOqB,gBACZj3B,KAAK41B,OAAOqB,eAAe7B,QAC/B,IACDhF,MAAK,KACApwB,KAAK41B,OAAOsB,mBACZl3B,KAAK41B,OAAOsB,kBAAkB9B,SAElCp1B,KAAKm3B,gBAAgB,GAE7B,CAMAlK,IAAAA,GACQjtB,KAAKuE,YACLvE,KAAKuE,UAAU0oB,OACXjtB,KAAK41B,OAAOwB,iBACZp3B,KAAK41B,OAAOwB,gBAAgBhC,UAGpCp1B,KAAKm3B,gBACT,CAMAE,WAAAA,GACI,QAASr3B,KAAKuE,SAClB,CACA4yB,cAAAA,UACWn3B,KAAKuE,SAChB,CAUA+yB,OAAAA,GACIt3B,KAAKy2B,iBACLz2B,KAAKitB,OACDjtB,KAAK62B,mBACL72B,KAAK62B,mBAEb,EAEJ,SAASU,GAAY5hB,EAAMzX,GACvB,OAAO,IAAIs3B,GAAY7f,EAAMzX,EACjC,CCvTA,MAAMs5B,GAAiBt0B,GAAOlR,GAASA,EAAKgX,KAAK9F,GCK3Cu0B,GAAsB,CAACptB,EAAQgB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACTtC,KAAO9F,GAAY,SAANA,EACboH,MAAQpH,GAAMA,IDOZw0B,GAA0Bx0B,GAAMu0B,GAAoBtT,KAAKqT,GAAct0B,IEJvEy0B,GAAa,IAAIF,GAAqB5lC,GAAO8zB,ICKnD,SAASiS,GAAevxB,EAAehK,EAAKvC,GACpCuM,EAAcwxB,SAASx7B,GACvBgK,EAAczI,SAASvB,GAAKuM,IAAI9O,GAGhCuM,EAAcyxB,SAASz7B,EAAKk7B,GAAYz9B,GAEhD,CACA,SAASi+B,GAAU1xB,EAAeqO,GAC9B,MAAMyB,EAAWoI,GAAelY,EAAeqO,GAC/C,IAAI,cAAE0B,EAAgB,CAAC,EAAC,WAAE/hB,EAAa,CAAC,KAAMub,GAAWuG,EAAW9P,EAAc2xB,qBAAqB7hB,GAAU,GAAS,CAAC,EAC3HvG,EAAS,IAAKA,KAAWwG,GACzB,IAAK,MAAM/Z,KAAOuT,EAAQ,CAEtBgoB,GAAevxB,EAAehK,EADhB4Y,GAA6BrF,EAAOvT,IAEtD,CACJ,CAuEA,SAAS47B,GAAwB57B,EAAKhI,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWgI,IAAQhI,EAAoB,SAAKA,GAC7C8F,IAC3B,CC3FA,SAAS+9B,GAAoB1lC,EAAoC6J,GAAK,IAAxC,cAAE87B,EAAa,eAAEC,GAAgB5lC,EAC3D,MAAM6lC,EAAcF,EAAcp1B,eAAe1G,KAAgC,IAAxB+7B,EAAe/7B,GAExE,OADA+7B,EAAe/7B,IAAO,EACfg8B,CACX,CACA,SAASC,GAAoBx+B,EAAO8V,GAChC,MAAM/I,EAAU/M,EAAM4O,MACtB,IAAIxO,MAAMiJ,QAAQyM,GAOd,OAAO/I,IAAY+I,EANnB,IAAK,IAAIvV,EAAI,EAAGA,EAAIuV,EAAO1W,OAAQmB,IAC/B,GAAIuV,EAAOvV,KAAOwM,EACd,OAAO,CAMvB,CACA,SAAS0xB,GAAclyB,EAAeqO,GAA0D,IAA9C,MAAEmZ,EAAQ,EAAC,mBAAE2K,EAAkB,KAAExmC,GAAMiH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GACrF,WAAE5E,EAAagS,EAAc8rB,uBAAsB,cAAE/b,KAAkBxG,GAAWvJ,EAAc2xB,qBAAqBtjB,GACzH,MAAM+jB,EAAapyB,EAAczI,SAAS,cACtC46B,IACAnkC,EAAamkC,GACjB,MAAME,EAAa,GACbC,EAAqB3mC,GACvBqU,EAAciB,gBACdjB,EAAciB,eAAesxB,WAAW5mC,GAC5C,IAAK,MAAMqK,KAAOuT,EAAQ,CACtB,MAAM9V,EAAQuM,EAAczI,SAASvB,GAC/Bga,EAAczG,EAAOvT,GAC3B,IAAKvC,QACeX,IAAhBkd,GACCsiB,GACGT,GAAqBS,EAAoBt8B,GAC7C,SAEJ,MAAMq3B,EAAkB,CACpB7F,QACA6B,QAAS,KACN8D,GAAmBn/B,GAAc,CAAC,EAAGgI,IAM5C,GAAI6K,OAAO2xB,wBAAyB,CAChC,MAAMC,EAAWzyB,EAAcqT,WAAW9Z,GAC1C,GAAIk5B,EAAU,CACV,MAAMpJ,EAAUxoB,OAAO2xB,wBAAwBC,EAAUz8B,EAAKvC,EAAO0c,IACrD,OAAZkZ,IACAgE,EAAgBhE,QAAUA,EAC1BgE,EAAgBiB,WAAY,EAEpC,CACJ,CACA,IAAIoE,GAAWrF,EAAgBiB,YAC1B2D,GAAoBx+B,EAAOuc,GAahC,GAZ6B,WAAzBqd,EAAgB1hC,OACf8H,EAAMyP,eAAiBmqB,EAAgBjV,YACxCsa,GAAU,GAOVj/B,EAAMyK,YACNw0B,GAAU,GAEVA,EACA,SACJj/B,EAAME,MAAMy5B,GAAmBp3B,EAAKvC,EAAOuc,EAAahQ,EAAc2yB,oBAAsB7vB,EAAe7I,IAAIjE,GACzG,CAAErK,MAAM,GACR0hC,IACN,MAAMnvB,EAAYzK,EAAMyK,UACpBuwB,GAAwB2D,KACxBA,EAAWr4B,IAAI/D,GACfkI,EAAU6rB,MAAK,IAAMqI,EAAWl4B,OAAOlE,MAE3Cq8B,EAAWt8B,KAAKmI,EACpB,CAMA,OALI6R,GACAsY,QAAQtT,IAAIsd,GAAYtI,MAAK,KACzBha,GAAiB2hB,GAAU1xB,EAAe+P,EAAc,IAGzDsiB,CACX,CCjGA,SAASO,GAAe5yB,EAAe5U,GAAuB,IAAdyM,EAAOjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMkd,EAAWoI,GAAelY,EAAe5U,EAASyM,EAAQoK,QAChE,IAAI,WAAEjU,EAAagS,EAAc8rB,wBAA0B,CAAC,GAAMhc,GAAY,CAAC,EAC3EjY,EAAQs6B,qBACRnkC,EAAa6J,EAAQs6B,oBAMzB,MAAMU,EAAe/iB,EACf,IAAMuY,QAAQtT,IAAImd,GAAclyB,EAAe8P,EAAUjY,IACzD,IAAMwwB,QAAQC,UAKdwK,EAAqB9yB,EAAc+yB,iBAAmB/yB,EAAc+yB,gBAAgBxnC,KACpF,WAAsB,IAArBynC,EAAYpgC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEo7B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBlgC,EAClE,OAkBZ,SAAyBgS,EAAe5U,GAAgF,IAAvE4iC,EAAap7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGq7B,EAAer7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGs7B,EAAgBt7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGiF,EAAOjF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClH,MAAMu/B,EAAa,GACbY,GAAsBjzB,EAAc+yB,gBAAgBxnC,KAAO,GAAK0iC,EAChEiF,EAA+C,IAArBhF,EAC1B,WAAM,OAAJt7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAUq7B,CAAe,EAC9B,WAAM,OAAKgF,GAATrgC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAA+Bq7B,CAAe,EAUzD,OATAp6B,MAAMC,KAAKkM,EAAc+yB,iBACpBI,KAAKC,IACLl8B,SAAQ,CAACpB,EAAO9B,KACjB8B,EAAMi5B,OAAO,iBAAkB3jC,GAC/BinC,EAAWt8B,KAAK68B,GAAe98B,EAAO1K,EAAS,IACxCyM,EACH2vB,MAAOwG,EAAgBkF,EAAwBl/B,KAChD+1B,MAAK,IAAMj0B,EAAMi5B,OAAO,oBAAqB3jC,KAAU,IAEvDi9B,QAAQtT,IAAIsd,EACvB,CAlCmBgB,CAAgBrzB,EAAe5U,EAAS4iC,EAAgBgF,EAAc/E,EAAiBC,EAAkBr2B,EACpH,EACE,IAAMwwB,QAAQC,WAKd,KAAEwF,GAAS9/B,EACjB,GAAI8/B,EAAM,CACN,MAAOv9B,EAAOC,GAAiB,mBAATs9B,EAChB,CAAC+E,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOtiC,IAAQw5B,MAAK,IAAMv5B,KAC9B,CAEI,OAAO63B,QAAQtT,IAAI,CAAC8d,IAAgBC,EAAmBj7B,EAAQ2vB,QAEvE,CAkBA,SAAS4L,GAAgBvhB,EAAGC,GACxB,OAAOD,EAAEyhB,iBAAiBxhB,EAC9B,CCpDA,MAAMyhB,GAAuB,IAAIv2B,GAAsBkkB,UACjDsS,GAAoBx2B,EAAqBnK,OAC/C,SAAS4gC,GAAYzzB,GACjB,OAAQqyB,GAAehK,QAAQtT,IAAIsd,EAAW39B,KAAIvI,IAAA,IAAC,UAAE+R,EAAS,QAAErG,GAAS1L,EAAA,OCP7E,SAA8B6T,EAAeqO,GAA0B,IAE/DnQ,EAFiDrG,EAAOjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAoN,EAAc+uB,OAAO,iBAAkB1gB,GAEnCxa,MAAMiJ,QAAQuR,GAAa,CAC3B,MAAMgkB,EAAahkB,EAAW3Z,KAAKtJ,GAAYwnC,GAAe5yB,EAAe5U,EAASyM,KACtFqG,EAAYmqB,QAAQtT,IAAIsd,EAC5B,MACK,GAA0B,kBAAfhkB,EACZnQ,EAAY00B,GAAe5yB,EAAeqO,EAAYxW,OAErD,CACD,MAAM67B,EAA2C,oBAAfrlB,EAC5B6J,GAAelY,EAAeqO,EAAYxW,EAAQoK,QAClDoM,EACNnQ,EAAYmqB,QAAQtT,IAAImd,GAAclyB,EAAe0zB,EAAoB77B,GAC7E,CACA,OAAOqG,EAAU6rB,MAAK,IAAM/pB,EAAc+uB,OAAO,oBAAqB1gB,IAC1E,CDVkFslB,CAAqB3zB,EAAe9B,EAAWrG,EAAQ,IACzI,CACA,SAAS+7B,GAAqB5zB,GAC1B,IAAI7C,EAAUs2B,GAAYzzB,GAC1B,MAAM1M,EA6RC,CACH6J,QAAS02B,IAAgB,GACzBC,YAAaD,KACbvgB,WAAYugB,KACZtpB,SAAUspB,KACVE,UAAWF,KACXG,WAAYH,KACZ11B,KAAM01B,MAnSV,IAAII,GAAkB,EAKtB,MAAMC,EAA0BA,CAACp9B,EAAKuX,KAClC,MAAMyB,EAAWoI,GAAelY,EAAeqO,GAC/C,GAAIyB,EAAU,CACV,MAAM,WAAE9hB,EAAU,cAAE+hB,KAAkBxG,GAAWuG,EACjDhZ,EAAM,IAAKA,KAAQyS,KAAWwG,EAClC,CACA,OAAOjZ,CAAG,EAmBd,SAASoK,EAAerJ,EAASs8B,GAC7B,MAAMnpC,EAAQgV,EAAcqT,WACtB5V,EAAUuC,EAAco0B,mBAAkB,IAAS,CAAC,EAKpD/B,EAAa,GAKbgC,EAAc,IAAIv6B,IAMxB,IAAIw6B,EAAkB,CAAC,EAKnBC,EAAsBvN,IAO1B,IAAK,IAAIhzB,EAAI,EAAGA,EAAIw/B,GAAmBx/B,IAAK,CACxC,MAAMrI,EAAO4nC,GAAqBv/B,GAC5BwgC,EAAYlhC,EAAM3H,GAClBoS,OAAuBjL,IAAhB9H,EAAMW,GAAsBX,EAAMW,GAAQ8R,EAAQ9R,GACzD8oC,EAAgB73B,EAAemB,GAK/B22B,EAAc/oC,IAASwoC,EAAoBK,EAAUvhB,SAAW,MAClD,IAAhByhB,IACAH,EAAsBvgC,GAO1B,IAAI2gC,EAAc52B,IAASN,EAAQ9R,IAASoS,IAAS/S,EAAMW,IAAS8oC,EAepE,GAXIE,GACAV,GACAj0B,EAAc40B,yBACdD,GAAc,GAMlBH,EAAU1C,cAAgB,IAAKwC,IAI7BE,EAAUvhB,UAA4B,OAAhByhB,IAElB32B,IAASy2B,EAAUK,UAErB93B,EAAoBgB,IACJ,mBAATA,EACP,SAQJ,IAAI+2B,EADqBC,GAAuBP,EAAUK,SAAU92B,IAG/DpS,IAASwoC,GACNK,EAAUvhB,WACT0hB,GACDF,GAEHzgC,EAAIugC,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiBphC,MAAMiJ,QAAQiB,GAAQA,EAAO,CAACA,GAKrD,IAAIm3B,EAAiBD,EAAer/B,OAAOs+B,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBr/B,IACnB8+B,GAAoB,EAChBT,EAAYp6B,IAAIjE,KAChBg/B,GAAuB,EACvBX,EAAYj6B,OAAOpE,IAEvBw+B,EAAUzC,eAAe/7B,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAOo/B,EAAS,CACvB,MAAM1kC,EAAOwkC,EAAel/B,GACtBgiB,EAAOmd,EAAmBn/B,GAEhC,GAAIs+B,EAAgB53B,eAAe1G,GAC/B,SAIJ,IAAIs/B,GAAkB,EAElBA,EADA9mB,GAAkB9d,IAAS8d,GAAkBwJ,IAC1BD,GAAernB,EAAMsnB,GAGtBtnB,IAASsnB,EAE3Bsd,OACaxiC,IAATpC,EAEA2kC,EAAcr/B,GAIdq+B,EAAYt6B,IAAI/D,QAGNlD,IAATpC,GAAsB2jC,EAAYp6B,IAAIjE,GAK3Cq/B,EAAcr/B,GAOdw+B,EAAU1C,cAAc97B,IAAO,CAEvC,CAKAw+B,EAAUK,SAAW92B,EACrBy2B,EAAUW,mBAAqBD,EAI3BV,EAAUvhB,WACVqhB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmBj0B,EAAcS,wBACjCq0B,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtC3C,EAAWt8B,QAAQk/B,EAAevgC,KAAKwJ,IAAS,CAC5CA,UAAWA,EACXrG,QAAS,CAAElM,UAASkM,OAGhC,CAMA,GAAIw8B,EAAY9oC,KAAM,CAClB,MAAMgqC,EAAoB,CAAC,EAC3BlB,EAAYn9B,SAASlB,IACjB,MAAMw/B,EAAiBx1B,EAAcy1B,cAAcz/B,QAC5BlD,IAAnB0iC,IACAD,EAAkBv/B,GAAOw/B,EAC7B,IAEJnD,EAAWt8B,KAAK,CAAEmI,UAAWq3B,GACjC,CACA,IAAIG,EAAgB//B,QAAQ08B,EAAWx/B,QAOvC,OANIohC,IACmB,IAAlBjpC,EAAMwS,SAAqBxS,EAAMwS,UAAYxS,EAAMmS,SACnD6C,EAAc40B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBv4B,EAAQk1B,GAAchK,QAAQC,SACzD,CAkBA,MAAO,CACHpnB,iBACAqS,UAhBJ,SAAmB5nB,EAAMsnB,EAAUpb,GAC/B,IAAI+S,EAEJ,GAAItX,EAAM3H,GAAMsnB,WAAaA,EACzB,OAAOoV,QAAQC,UAEsB,QAAxC1d,EAAK5K,EAAc+yB,uBAAoC,IAAPnoB,GAAyBA,EAAG1T,SAASpB,IAAY,IAAI8U,EAAI,OAAuC,QAA/BA,EAAK9U,EAAMmL,sBAAmC,IAAP2J,OAAgB,EAASA,EAAG2I,UAAU5nB,EAAMsnB,EAAS,IAC9M3f,EAAM3H,GAAMsnB,SAAWA,EACvB,MAAMof,EAAanxB,EAAerJ,EAASlM,GAC3C,IAAK,MAAMqK,KAAO1C,EACdA,EAAM0C,GAAK87B,cAAgB,CAAC,EAEhC,OAAOO,CACX,EAIIsD,mBArPJ,SAA4BC,GACxBz4B,EAAUy4B,EAAa51B,EAC3B,EAoPIuyB,SAAUA,IAAMj/B,EAExB,CACA,SAASyhC,GAAuB/c,EAAMtnB,GAClC,MAAoB,kBAATA,EACAA,IAASsnB,IAEXnkB,MAAMiJ,QAAQpM,KACXqnB,GAAernB,EAAMsnB,EAGrC,CACA,SAAS6b,KACL,MAAO,CACH5gB,SAFyBrgB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGzBk/B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBoD,mBAAoB,CAAC,EAE7B,CExSA,IAAIrzB,GAAK,ECCT,MAAMuwB,GAAa,CACfn0B,UAAW,CACP2U,QCDR,cAA+BA,GAM3BnZ,WAAAA,CAAYoZ,GACRmC,MAAMnC,GACNA,EAAK7R,iBAAmB6R,EAAK7R,eAAiB2yB,GAAqB9gB,GACvE,CACA+iB,mCAAAA,GACI,MAAM,QAAE14B,GAAYxD,KAAKmZ,KAAKO,WAC9B1Z,KAAKgI,UACD5E,EAAoBI,KACpBxD,KAAKgI,QAAUxE,EAAQ24B,UAAUn8B,KAAKmZ,MAE9C,CAIApR,KAAAA,GACI/H,KAAKk8B,qCACT,CACAl1B,MAAAA,GACI,MAAM,QAAExD,GAAYxD,KAAKmZ,KAAKO,YACtBlW,QAAS44B,GAAgBp8B,KAAKmZ,KAAKhF,WAAa,CAAC,EACrD3Q,IAAY44B,GACZp8B,KAAKk8B,qCAEb,CACAl0B,OAAAA,GAAY,ID3BZxD,KAAM,CACF0U,QDLR,cAAmCA,GAC/BnZ,WAAAA,GACIub,SAASriB,WACT+G,KAAKmI,GAAKA,IACd,CACAnB,MAAAA,GACI,IAAKhH,KAAKmZ,KAAK3S,gBACX,OACJ,MAAM,UAAE61B,EAAS,eAAEC,EAAc,OAAEh0B,GAAWtI,KAAKmZ,KAAK3S,iBAChD61B,UAAWE,GAAkBv8B,KAAKmZ,KAAKqjB,qBAAuB,CAAC,EACvE,IAAKx8B,KAAKmZ,KAAK7R,gBAAkB+0B,IAAcE,EAC3C,OAEJ,MAAME,EAAgBz8B,KAAKmZ,KAAK7R,eAAesS,UAAU,QAASyiB,EAAW,CAAE/zB,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAStI,KAAKmZ,KAAKO,WAAWpR,SACxJg0B,IAAmBD,GACnBI,EAAcrM,MAAK,IAAMkM,EAAet8B,KAAKmI,KAErD,CACAJ,KAAAA,GACI,MAAM,SAAE20B,GAAa18B,KAAKmZ,KAAK3S,iBAAmB,CAAC,EAC/Ck2B,IACA18B,KAAKgI,QAAU00B,EAAS18B,KAAKmI,IAErC,CACAH,OAAAA,GAAY,KG3BV8F,GAAWA,CAACoK,EAAGC,IAAM5d,KAAK4mB,IAAIjJ,EAAIC,GCWxC,MAAMwkB,GACF58B,WAAAA,CAAYlG,EAAO+iC,GAAgF,IAAtE,mBAAEj+B,EAAkB,cAAEk+B,EAAa,iBAAEC,GAAmB,GAAO7jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DA+G,KAAKyc,WAAa,KAIlBzc,KAAK+8B,cAAgB,KAIrB/8B,KAAKg9B,kBAAoB,KAIzBh9B,KAAK48B,SAAW,CAAC,EAIjB58B,KAAK68B,cAAgB31B,OACrBlH,KAAKi9B,YAAc,KACf,IAAMj9B,KAAK+8B,gBAAiB/8B,KAAKg9B,kBAC7B,OACJ,MAAMvjB,EAAOyjB,GAAWl9B,KAAKg9B,kBAAmBh9B,KAAKm9B,SAC/CC,EAAmC,OAApBp9B,KAAKyc,WAIpB4gB,EDxClB,SAAoBnlB,EAAGC,GAEnB,MAAMmlB,EAASxvB,GAASoK,EAAEzO,EAAG0O,EAAE1O,GACzB8zB,EAASzvB,GAASoK,EAAExO,EAAGyO,EAAEzO,GAC/B,OAAOnP,KAAKypB,KAAKsZ,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAW/jB,EAAKrI,OAAQ,CAAE3H,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAK0zB,IAAiBC,EAClB,OACJ,MAAM,MAAEvlB,GAAU2B,GACZ,UAAEvY,GAAce,GACtBjC,KAAKm9B,QAAQ/gC,KAAK,IAAK0b,EAAO5W,cAC9B,MAAM,QAAEu8B,EAAO,OAAEC,GAAW19B,KAAK48B,SAC5BQ,IACDK,GAAWA,EAAQz9B,KAAK+8B,cAAetjB,GACvCzZ,KAAKyc,WAAazc,KAAK+8B,eAE3BW,GAAUA,EAAO19B,KAAK+8B,cAAetjB,EAAK,EAE9CzZ,KAAK29B,kBAAoB,CAAC9jC,EAAO4f,KAC7BzZ,KAAK+8B,cAAgBljC,EACrBmG,KAAKg9B,kBAAoBY,GAAenkB,EAAMzZ,KAAKrB,oBAEnD6X,GAAMxP,OAAOhH,KAAKi9B,aAAa,EAAK,EAExCj9B,KAAK69B,gBAAkB,CAAChkC,EAAO4f,KAC3BzZ,KAAK/F,MACL,MAAM,MAAE6jC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBh+B,KAAK48B,SAGtD,GAFI58B,KAAK88B,kBACLkB,GAAmBA,KACjBh+B,KAAK+8B,gBAAiB/8B,KAAKg9B,kBAC7B,OACJ,MAAMiB,EAAUf,GAA0B,kBAAfrjC,EAAM7H,KAC3BgO,KAAKg9B,kBACLY,GAAenkB,EAAMzZ,KAAKrB,oBAAqBqB,KAAKm9B,SACtDn9B,KAAKyc,YAAcqhB,GACnBA,EAAMjkC,EAAOokC,GAEjBF,GAAgBA,EAAalkC,EAAOokC,EAAQ,GAG3CzmB,GAAiB3d,GAClB,OACJmG,KAAK88B,iBAAmBA,EACxB98B,KAAK48B,SAAWA,EAChB58B,KAAKrB,mBAAqBA,EAC1BqB,KAAK68B,cAAgBA,GAAiB31B,OACtC,MACMg3B,EAAcN,GADPhmB,GAAiB/d,GACWmG,KAAKrB,qBACxC,MAAEmZ,GAAUomB,GACZ,UAAEh9B,GAAce,GACtBjC,KAAKm9B,QAAU,CAAC,IAAKrlB,EAAO5W,cAC5B,MAAM,eAAEi9B,GAAmBvB,EAC3BuB,GACIA,EAAetkC,EAAOqjC,GAAWgB,EAAal+B,KAAKm9B,UACvDn9B,KAAKo+B,gBAAkBhmB,GAAKJ,GAAgBhY,KAAK68B,cAAe,cAAe78B,KAAK29B,mBAAoB3lB,GAAgBhY,KAAK68B,cAAe,YAAa78B,KAAK69B,iBAAkB7lB,GAAgBhY,KAAK68B,cAAe,gBAAiB78B,KAAK69B,iBAC9O,CACAQ,cAAAA,CAAezB,GACX58B,KAAK48B,SAAWA,CACpB,CACA3iC,GAAAA,GACI+F,KAAKo+B,iBAAmBp+B,KAAKo+B,kBAC7B3nB,GAAYzW,KAAKi9B,YACrB,EAEJ,SAASW,GAAenkB,EAAM9a,GAC1B,OAAOA,EAAqB,CAAEmZ,MAAOnZ,EAAmB8a,EAAK3B,QAAW2B,CAC5E,CACA,SAAS6kB,GAAcpmB,EAAGC,GACtB,MAAO,CAAE1O,EAAGyO,EAAEzO,EAAI0O,EAAE1O,EAAGC,EAAGwO,EAAExO,EAAIyO,EAAEzO,EACtC,CACA,SAASwzB,GAAU1qC,EAAY2qC,GAAS,IAApB,MAAErlB,GAAOtlB,EACzB,MAAO,CACHslB,QACA7W,MAAOq9B,GAAcxmB,EAAOymB,GAAgBpB,IAC5C/rB,OAAQktB,GAAcxmB,EAAO0mB,GAAiBrB,IAC9C1e,SAAUlV,GAAY4zB,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQjkC,OAAS,EACpC,CACA,SAASqQ,GAAY4zB,EAASsB,GAC1B,GAAItB,EAAQjkC,OAAS,EACjB,MAAO,CAAEuQ,EAAG,EAAGC,EAAG,GAEtB,IAAIrP,EAAI8iC,EAAQjkC,OAAS,EACrBwlC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBpB,GAClC,KAAO9iC,GAAK,IACRqkC,EAAmBvB,EAAQ9iC,KACvBskC,EAAUz9B,UAAYw9B,EAAiBx9B,UACvC0d,GAAsB6f,MAG1BpkC,IAEJ,IAAKqkC,EACD,MAAO,CAAEj1B,EAAG,EAAGC,EAAG,GAEtB,MAAMmjB,EAAO/N,GAAsB6f,EAAUz9B,UAAYw9B,EAAiBx9B,WAC1E,GAAa,IAAT2rB,EACA,MAAO,CAAEpjB,EAAG,EAAGC,EAAG,GAEtB,MAAMkL,EAAkB,CACpBnL,GAAIk1B,EAAUl1B,EAAIi1B,EAAiBj1B,GAAKojB,EACxCnjB,GAAIi1B,EAAUj1B,EAAIg1B,EAAiBh1B,GAAKmjB,GAQ5C,OANIjY,EAAgBnL,IAAM4jB,MACtBzY,EAAgBnL,EAAI,GAEpBmL,EAAgBlL,IAAM2jB,MACtBzY,EAAgBlL,EAAI,GAEjBkL,CACX,CCvJA,SAASgqB,GAAWC,GAChB,OAAOA,EAAKnkC,IAAMmkC,EAAKrkC,GAC3B,CACA,SAASskC,GAAOhlC,GAAuC,IAAhC8V,EAAM3W,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG8lC,EAAW9lC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOsB,KAAK4mB,IAAIrnB,EAAQ8V,IAAWmvB,CACvC,CACA,SAASC,GAAc/9B,EAAO4O,EAAQD,GAAsB,IAAduB,EAAMlY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACnDgI,EAAMkQ,OAASA,EACflQ,EAAMg+B,YAAclqB,GAAIlF,EAAOrV,IAAKqV,EAAOnV,IAAKuG,EAAMkQ,QACtDlQ,EAAMuJ,MAAQo0B,GAAWhvB,GAAUgvB,GAAW/uB,IAC1CivB,GAAO79B,EAAMuJ,MAAO,EAAG,OAAWqb,MAAM5kB,EAAMuJ,UAC9CvJ,EAAMuJ,MAAQ,GAClBvJ,EAAMi+B,UACFnqB,GAAInF,EAAOpV,IAAKoV,EAAOlV,IAAKuG,EAAMkQ,QAAUlQ,EAAMg+B,aAClDH,GAAO79B,EAAMi+B,YAAcrZ,MAAM5kB,EAAMi+B,cACvCj+B,EAAMi+B,UAAY,EAC1B,CACA,SAASC,GAAal+B,EAAO4O,EAAQD,EAAQuB,GACzC6tB,GAAc/9B,EAAMwI,EAAGoG,EAAOpG,EAAGmG,EAAOnG,EAAG0H,EAASA,EAAOhD,aAAUhV,GACrE6lC,GAAc/9B,EAAMyI,EAAGmG,EAAOnG,EAAGkG,EAAOlG,EAAGyH,EAASA,EAAO/C,aAAUjV,EACzE,CACA,SAASimC,GAAiBxvB,EAAQyvB,EAAU/4B,GACxCsJ,EAAOpV,IAAM8L,EAAO9L,IAAM6kC,EAAS7kC,IACnCoV,EAAOlV,IAAMkV,EAAOpV,IAAMokC,GAAWS,EACzC,CAKA,SAASC,GAAyB1vB,EAAQ/K,EAAQyB,GAC9CsJ,EAAOpV,IAAMqK,EAAOrK,IAAM8L,EAAO9L,IACjCoV,EAAOlV,IAAMkV,EAAOpV,IAAMokC,GAAW/5B,EACzC,CACA,SAAS06B,GAAqB3vB,EAAQ/K,EAAQyB,GAC1Cg5B,GAAyB1vB,EAAOnG,EAAG5E,EAAO4E,EAAGnD,EAAOmD,GACpD61B,GAAyB1vB,EAAOlG,EAAG7E,EAAO6E,EAAGpD,EAAOoD,EACxD,CCZA,SAAS81B,GAA4BX,EAAMrkC,EAAKE,GAC5C,MAAO,CACHF,SAAarB,IAARqB,EAAoBqkC,EAAKrkC,IAAMA,OAAMrB,EAC1CuB,SAAavB,IAARuB,EACCmkC,EAAKnkC,IAAMA,GAAOmkC,EAAKnkC,IAAMmkC,EAAKrkC,UAClCrB,EAEd,CAcA,SAASsmC,GAA4BC,EAAYC,GAC7C,IAAInlC,EAAMmlC,EAAgBnlC,IAAMklC,EAAWllC,IACvCE,EAAMilC,EAAgBjlC,IAAMglC,EAAWhlC,IAO3C,OAJIilC,EAAgBjlC,IAAMilC,EAAgBnlC,IACtCklC,EAAWhlC,IAAMglC,EAAWllC,OAC3BA,EAAKE,GAAO,CAACA,EAAKF,IAEhB,CAAEA,MAAKE,MAClB,CAuCA,MAAMklC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHxlC,IAAKylC,GAAoBH,EAAaC,GACtCrlC,IAAKulC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAMMC,GAAcA,KAAA,CAChB12B,EAPoB,CACpBy1B,UAAW,EACX10B,MAAO,EACP2G,OAAQ,EACR8tB,YAAa,GAIbv1B,EARoB,CACpBw1B,UAAW,EACX10B,MAAO,EACP2G,OAAQ,EACR8tB,YAAa,KAOXmB,GAAYA,KAAA,CACd32B,EAFe,CAASjP,IAAK,EAAGE,IAAK,GAGrCgP,EAHe,CAASlP,IAAK,EAAGE,IAAK,KCVzC,SAAS2lC,GAASx+B,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASy+B,GAAuB9tC,GAAgC,IAA/B,IAAEga,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAASla,EAC1D,MAAO,CACHiX,EAAG,CAAEjP,IAAKmS,EAAMjS,IAAK+R,GACrB/C,EAAG,CAAElP,IAAKgS,EAAK9R,IAAKgS,GAE5B,CCVA,SAAS6zB,GAAgB/1B,GACrB,YAAiBrR,IAAVqR,GAAiC,IAAVA,CAClC,CACA,SAASg2B,GAAQhuC,GAA4B,IAA3B,MAAEgY,EAAK,OAAEgD,EAAM,OAAEC,GAAQjb,EACvC,OAAS+tC,GAAgB/1B,KACpB+1B,GAAgB/yB,KAChB+yB,GAAgB9yB,EACzB,CACA,SAASqB,GAAapS,GAClB,OAAQ8jC,GAAS9jC,IACb+jC,GAAe/jC,IACfA,EAAOiN,GACPjN,EAAO0Q,QACP1Q,EAAO2Q,SACP3Q,EAAO4Q,OACf,CACA,SAASmzB,GAAe/jC,GACpB,OAAOgkC,GAAchkC,EAAO+M,IAAMi3B,GAAchkC,EAAOgN,EAC3D,CACA,SAASg3B,GAAc5mC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS6mC,GAAW7oB,EAAOtN,EAAOy0B,GAG9B,OAAOA,EADQz0B,GADYsN,EAAQmnB,EAGvC,CAIA,SAAS2B,GAAgB9oB,EAAOonB,EAAW10B,EAAOy0B,EAAa4B,GAI3D,YAHiB1nC,IAAb0nC,IACA/oB,EAAQ6oB,GAAW7oB,EAAO+oB,EAAU5B,IAEjC0B,GAAW7oB,EAAOtN,EAAOy0B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAASjmC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGuR,EAAKvR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGgmC,EAAWhmC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAE0nC,EAAQ5nC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzE0lC,EAAKrkC,IAAMomC,GAAgB/B,EAAKrkC,IAAK0kC,EAAW10B,EAAOy0B,EAAa4B,GACpEhC,EAAKnkC,IAAMkmC,GAAgB/B,EAAKnkC,IAAKwkC,EAAW10B,EAAOy0B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAGxuC,GAAY,IAAV,EAAEiX,EAAC,EAAEC,GAAGlX,EAChCsuC,GAAeE,EAAIv3B,EAAGA,EAAEy1B,UAAWz1B,EAAEe,MAAOf,EAAEw1B,aAC9C6B,GAAeE,EAAIt3B,EAAGA,EAAEw1B,UAAWx1B,EAAEc,MAAOd,EAAEu1B,YAClD,CAuDA,SAASgC,GAAcz2B,GACnB,OAAI02B,OAAOC,UAAU32B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS42B,GAAcvC,EAAM/wB,GACzB+wB,EAAKrkC,IAAMqkC,EAAKrkC,IAAMsT,EACtB+wB,EAAKnkC,IAAMmkC,EAAKnkC,IAAMoT,CAC1B,CAMA,SAASuzB,GAAcxC,EAAMyC,EAAUrtC,GAA8B,IAA3BoI,EAAKklC,EAAUC,GAAUvtC,EAC/D,MAAMwtC,OAAuCtoC,IAA1BmoC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAclqB,GAAI8pB,EAAKrkC,IAAKqkC,EAAKnkC,IAAK+mC,GAE5CX,GAAejC,EAAMyC,EAAWjlC,GAAMilC,EAAWC,GAAWtC,EAAaqC,EAAW92B,MACxF,CAIA,MAAMk3B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAK72B,GACvBk3B,GAAcL,EAAIv3B,EAAGU,EAAWu3B,IAChCL,GAAcL,EAAIt3B,EAAGS,EAAWw3B,GACpC,CCpHA,SAASE,GAAmB/5B,EAAU81B,GAClC,OAAO0C,GHeX,SAA4BxoB,EAAO8lB,GAC/B,IAAKA,EACD,OAAO9lB,EACX,MAAMgqB,EAAUlE,EAAe,CAAEn0B,EAAGqO,EAAMnL,KAAMjD,EAAGoO,EAAMtL,MACnDu1B,EAAcnE,EAAe,CAAEn0B,EAAGqO,EAAMrL,MAAO/C,EAAGoO,EAAMpL,SAC9D,MAAO,CACHF,IAAKs1B,EAAQp4B,EACbiD,KAAMm1B,EAAQr4B,EACdiD,OAAQq1B,EAAYr4B,EACpB+C,MAAOs1B,EAAYt4B,EAE3B,CG1BmCu4B,CAAmBl6B,EAASgP,wBAAyB8mB,GACxF,CCJA,MAAMqE,GAAmBzvC,IAAiB,IAAhB,QAAEqU,GAASrU,EACjC,OAAOqU,EAAUA,EAAQq7B,cAAcC,YAAc,IAAI,ECiBvDC,GAAsB,IAAIjoB,QAKhC,MAAMkoB,GACFtiC,WAAAA,CAAYsG,GAIRrG,KAAKsiC,eAAiB,KACtBtiC,KAAKuiC,YAAa,EAClBviC,KAAKwiC,iBAAmB,KACxBxiC,KAAKi/B,YAAc,CAAEx1B,EAAG,EAAGC,EAAG,GAI9B1J,KAAKyiC,aAAc,EACnBziC,KAAK0iC,uBAAwB,EAI7B1iC,KAAK2iC,QAAUvC,KACfpgC,KAAKqG,cAAgBA,CACzB,CACArM,KAAAA,CAAM4oC,GAA4C,IAA/B,aAAEC,GAAe,GAAO5pC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEuN,GAAoBxG,KAAKqG,cACjC,GAAIG,IAAiD,IAA9BA,EAAgB61B,UACnC,OACJ,MA4FM,iBAAES,GAAqB98B,KAAK0Z,WAClC1Z,KAAK8iC,WAAa,IAAInG,GAAWiG,EAAa,CAC1CzE,eA9FoBtkC,IACpB,MAAM,iBAAEijC,GAAqB98B,KAAK0Z,WAGlCojB,EAAmB98B,KAAK+iC,iBAAmB/iC,KAAKgjC,gBAC5CH,GACA7iC,KAAK6iC,aAAajrB,GAAiB/d,EAAO,QAAQie,MACtD,EAwFA2lB,QAtFYA,CAAC5jC,EAAO4f,KAEpB,MAAM,KAAEhV,EAAI,gBAAEw+B,EAAe,YAAEC,GAAgBljC,KAAK0Z,WACpD,GAAIjV,IAASw+B,IACLjjC,KAAKsiC,gBACLtiC,KAAKsiC,iBACTtiC,KAAKsiC,eAAiBzpB,GAAcpU,IAE/BzE,KAAKsiC,gBACN,OAERtiC,KAAKuiC,YAAa,EAClBviC,KAAKwiC,iBAAmB,KACxBxiC,KAAKmjC,qBACDnjC,KAAKqG,cAAcqN,aACnB1T,KAAKqG,cAAcqN,WAAW0vB,oBAAqB,EACnDpjC,KAAKqG,cAAcqN,WAAW9D,YAASzW,GAK3CknC,IAAUxB,IACN,IAAIh4B,EAAU7G,KAAKqjC,mBAAmBxE,GAAMn2B,OAAS,EAIrD,GAAI0C,GAAQpC,KAAKnC,GAAU,CACvB,MAAM,WAAE6M,GAAe1T,KAAKqG,cAC5B,GAAIqN,GAAcA,EAAW7O,OAAQ,CACjC,MAAMy+B,EAAe5vB,EAAW7O,OAAO0+B,UAAU1E,GACjD,GAAIyE,EAAc,CAEdz8B,EADe+3B,GAAW0E,IACN/4B,WAAW1D,GAAW,IAC9C,CACJ,CACJ,CACA7G,KAAKi/B,YAAYJ,GAAQh4B,CAAO,IAGhCq8B,GACA1sB,GAAMxP,QAAO,IAAMk8B,EAAYrpC,EAAO4f,KAAO,GAAO,GAExD,MAAM,eAAEnS,GAAmBtH,KAAKqG,cAChCiB,GAAkBA,EAAesS,UAAU,aAAa,EAAK,EA4C7D8jB,OA1CWA,CAAC7jC,EAAO4f,KAEnB,MAAM,gBAAEwpB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAY1jC,KAAK0Z,WAE9E,IAAKupB,IAAoBjjC,KAAKsiC,eAC1B,OACJ,MAAM,OAAElxB,GAAWqI,EAEnB,GAAI+pB,GAA+C,OAA1BxjC,KAAKwiC,iBAM1B,OALAxiC,KAAKwiC,iBAmWrB,SAA6BpxB,GAA4B,IAApBuyB,EAAa1qC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7C9B,EAAY,KACZoD,KAAK4mB,IAAI/P,EAAO1H,GAAKi6B,EACrBxsC,EAAY,IAEPoD,KAAK4mB,IAAI/P,EAAO3H,GAAKk6B,IAC1BxsC,EAAY,KAEhB,OAAOA,CACX,CA5WwCysC,CAAoBxyB,QAEd,OAA1BpR,KAAKwiC,kBACLiB,GAAmBA,EAAgBzjC,KAAKwiC,mBAKhDxiC,KAAK6jC,WAAW,IAAKpqB,EAAK3B,MAAO1G,GACjCpR,KAAK6jC,WAAW,IAAKpqB,EAAK3B,MAAO1G,GAOjCpR,KAAKqG,cAAcgB,SAKnBq8B,GAAUA,EAAO7pC,EAAO4f,EAAK,EAa7BskB,aAXiBA,CAAClkC,EAAO4f,IAASzZ,KAAKitB,KAAKpzB,EAAO4f,GAYnDukB,gBAXoBA,IAAMqC,IAAUxB,IACpC,IAAI5tB,EACJ,MAAwC,WAAjCjR,KAAK8jC,kBAAkBjF,KAC0B,QAAlD5tB,EAAKjR,KAAKqjC,mBAAmBxE,GAAMt6B,iBAA8B,IAAP0M,OAAgB,EAASA,EAAGif,OAAO,KASpG,CACCvxB,mBAAoBqB,KAAKqG,cAAc09B,wBACvCjH,mBACAD,cAAeoF,GAAiBjiC,KAAKqG,gBAE7C,CACA4mB,IAAAA,CAAKpzB,EAAO4f,GACR,MAAM8oB,EAAaviC,KAAKuiC,WAExB,GADAviC,KAAKgC,UACAugC,EACD,OACJ,MAAM,SAAE9jB,GAAahF,EACrBzZ,KAAKg3B,eAAevY,GACpB,MAAM,UAAEulB,GAAchkC,KAAK0Z,WACvBsqB,GACAxtB,GAAMxP,QAAO,IAAMg9B,EAAUnqC,EAAO4f,IAE5C,CACAzX,MAAAA,GACIhC,KAAKuiC,YAAa,EAClB,MAAM,WAAE7uB,EAAU,eAAEpM,GAAmBtH,KAAKqG,cACxCqN,IACAA,EAAW0vB,oBAAqB,GAEpCpjC,KAAK8iC,YAAc9iC,KAAK8iC,WAAW7oC,MACnC+F,KAAK8iC,gBAAa3pC,EAClB,MAAM,gBAAE8pC,GAAoBjjC,KAAK0Z,YAC5BupB,GAAmBjjC,KAAKsiC,iBACzBtiC,KAAKsiC,iBACLtiC,KAAKsiC,eAAiB,MAE1Bh7B,GAAkBA,EAAesS,UAAU,aAAa,EAC5D,CACAiqB,UAAAA,CAAWhF,EAAMoF,EAAQ7yB,GACrB,MAAM,KAAE3M,GAASzE,KAAK0Z,WAEtB,IAAKtI,IAAW8yB,GAAWrF,EAAMp6B,EAAMzE,KAAKwiC,kBACxC,OACJ,MAAM2B,EAAYnkC,KAAKqjC,mBAAmBxE,GAC1C,IAAI9nC,EAAOiJ,KAAKi/B,YAAYJ,GAAQztB,EAAOytB,GAEvC7+B,KAAKyiC,aAAeziC,KAAKyiC,YAAY5D,KACrC9nC,ERtLZ,SAA0B+gB,EAAKtlB,EAAgBmwC,GAAS,IAAvB,IAAEnoC,EAAG,IAAEE,GAAKlI,EASzC,YARY2G,IAARqB,GAAqBsd,EAAQtd,EAE7Bsd,EAAQ6qB,EAAU5tB,GAAIva,EAAKsd,EAAO6qB,EAAQnoC,KAAOD,KAAKG,IAAIod,EAAOtd,QAEpDrB,IAARuB,GAAqBod,EAAQpd,IAElCod,EAAQ6qB,EAAU5tB,GAAIra,EAAKod,EAAO6qB,EAAQjoC,KAAOH,KAAKC,IAAIsd,EAAOpd,IAE9Dod,CACX,CQ4KmBssB,CAAiBrtC,EAAMiJ,KAAKyiC,YAAY5D,GAAO7+B,KAAK2iC,QAAQ9D,KAEvEsF,EAAUv7B,IAAI7R,EAClB,CACAosC,kBAAAA,GACI,IAAIlyB,EACJ,MAAM,gBAAEozB,EAAe,YAAEvE,GAAgB9/B,KAAK0Z,WACxC7U,EAAS7E,KAAKqG,cAAcqN,aAC7B1T,KAAKqG,cAAcqN,WAAW7O,OAC7B7E,KAAKqG,cAAcqN,WAAW4wB,SAAQ,GACG,QAAxCrzB,EAAKjR,KAAKqG,cAAcqN,kBAA+B,IAAPzC,OAAgB,EAASA,EAAGpM,OAC7E0/B,EAAkBvkC,KAAKyiC,YACzB4B,GAAmBxhC,EAAYwhC,GAC1BrkC,KAAKyiC,cACNziC,KAAKyiC,YAAcziC,KAAKwkC,yBAKxBxkC,KAAKyiC,eADL4B,IAAmBx/B,IR5KnC,SAAiC0+B,EAAStvC,GAAgC,IAA9B,IAAEuY,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAOxY,EACpE,MAAO,CACHwV,EAAG+1B,GAA4B+D,EAAU95B,EAAGkD,EAAMF,GAClD/C,EAAG81B,GAA4B+D,EAAU75B,EAAG8C,EAAKE,GAEzD,CQwKmC+3B,CAAwB5/B,EAAO0+B,UAAWc,GAMrErkC,KAAK2iC,QRrHb,WAA0D,IAA9B7C,EAAW7mC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG2mC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHn2B,EAAGo2B,GAAmBC,EAAa,OAAQ,SAC3Cp2B,EAAGm2B,GAAmBC,EAAa,MAAO,UAElD,CQ0GuB4E,CAAmB5E,GAK9ByE,IAAoBvkC,KAAKyiC,aACzB59B,GACA7E,KAAKyiC,cACJziC,KAAK0iC,uBACNrC,IAAUxB,IACF7+B,KAAKqjC,mBAAmBxE,KACxB7+B,KAAKyiC,YAAY5D,GR9IrC,SAA+Bh6B,EAAQ49B,GACnC,MAAMkC,EAAsB,CAAC,EAO7B,YANwBxrC,IAApBspC,EAAYjoC,MACZmqC,EAAoBnqC,IAAMioC,EAAYjoC,IAAMqK,EAAOrK,UAE/BrB,IAApBspC,EAAY/nC,MACZiqC,EAAoBjqC,IAAM+nC,EAAY/nC,IAAMmK,EAAOrK,KAEhDmqC,CACX,CQqI6CC,CAAsB//B,EAAO0+B,UAAU1E,GAAO7+B,KAAKyiC,YAAY5D,IAC5F,GAGZ,CACA2F,qBAAAA,GACI,MAAQH,gBAAiB5B,EAAW,yBAAEoC,GAA6B7kC,KAAK0Z,WACxE,IAAK+oB,IAAgB5/B,EAAY4/B,GAC7B,OAAO,EACX,MAAMqC,EAAqBrC,EAAY57B,QACvC8X,GAAiC,OAAvBmmB,EAA6B,0GACvC,MAAM,WAAEpxB,GAAe1T,KAAKqG,cAE5B,IAAKqN,IAAeA,EAAW7O,OAC3B,OAAO,EACX,MAAMkgC,EF7Od,SAAwBvxB,EAASwxB,EAAoBrmC,GACjD,MAAMsmC,EAAcpD,GAAmBruB,EAAS7U,IAC1C,OAAEumC,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYx7B,EAAGy7B,EAAO9zB,OAAO3H,GAC3C23B,GAAc6D,EAAYv7B,EAAGw7B,EAAO9zB,OAAO1H,IAExCu7B,CACX,CEqO+BE,CAAeL,EAAoBpxB,EAAWliB,KAAMwO,KAAKqG,cAAc09B,yBAC9F,IAAIqB,ERvLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHt7B,EAAGg2B,GAA4B8D,EAAU95B,EAAGs7B,EAAet7B,GAC3DC,EAAG+1B,GAA4B8D,EAAU75B,EAAGq7B,EAAer7B,GAEnE,CQkLkC27B,CAAwB3xB,EAAW7O,OAAO0+B,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,SAAgC5wC,GAAW,IAAV,EAAEwV,EAAC,EAAEC,GAAGzV,EACrC,MAAO,CAAEuY,IAAK9C,EAAElP,IAAKiS,MAAOhD,EAAE/O,IAAKgS,OAAQhD,EAAEhP,IAAKiS,KAAMlD,EAAEjP,IAC9D,CK6O6D+qC,CAAwBH,IACzEplC,KAAK0iC,wBAA0B4C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACApO,cAAAA,CAAevY,GACX,MAAM,KAAEha,EAAI,aAAE+gC,EAAY,YAAE1F,EAAW,eAAE2F,EAAc,iBAAE3I,EAAgB,oBAAE4I,GAAyB1lC,KAAK0Z,WACnG+oB,EAAcziC,KAAKyiC,aAAe,CAAC,EACnCkD,EAAqBtF,IAAUxB,IACjC,IAAKqF,GAAWrF,EAAMp6B,EAAMzE,KAAKwiC,kBAC7B,OAEJ,IAAInuC,EAAcouC,GAAeA,EAAY5D,IAAU,CAAC,EACpD/B,IACAzoC,EAAa,CAAEmG,IAAK,EAAGE,IAAK,IAOhC,MAAMsxB,EAAkB8T,EAAc,IAAM,IACtC/T,EAAgB+T,EAAc,GAAK,IACnClU,EAAU,CACZ55B,KAAM,UACNysB,SAAU+mB,EAAe/mB,EAASogB,GAAQ,EAC1C7S,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACR+a,KACApxC,GAKP,OAAO2L,KAAK4lC,wBAAwB/G,EAAMjT,EAAQ,IAGtD,OAAO8C,QAAQtT,IAAIuqB,GAAoBvV,KAAKsV,EAChD,CACAE,uBAAAA,CAAwB/G,EAAMxqC,GAC1B,MAAM8vC,EAAYnkC,KAAKqjC,mBAAmBxE,GAC1C,OAAOsF,EAAUnqC,MAAMy5B,GAAmBoL,EAAMsF,EAAW,EAAG9vC,GAClE,CACA2uC,aAAAA,GACI3C,IAAUxB,GAAS7+B,KAAKqjC,mBAAmBxE,GAAM5R,QACrD,CACA8V,cAAAA,GACI1C,IAAUxB,IAAW,IAAI5tB,EAAI,OAA0D,QAAlDA,EAAKjR,KAAKqjC,mBAAmBxE,GAAMt6B,iBAA8B,IAAP0M,OAAgB,EAASA,EAAGsf,OAAO,GACtI,CACAuT,iBAAAA,CAAkBjF,GACd,IAAI5tB,EACJ,OAA0D,QAAlDA,EAAKjR,KAAKqjC,mBAAmBxE,GAAMt6B,iBAA8B,IAAP0M,OAAgB,EAASA,EAAGtX,KAClG,CAOA0pC,kBAAAA,CAAmBxE,GACf,MAAMgH,EAAU,QAAUhH,EAAKtqB,cACzBljB,EAAQ2O,KAAKqG,cAAcqT,WAC3BosB,EAAsBz0C,EAAMw0C,GAClC,OAAOC,GAED9lC,KAAKqG,cAAczI,SAASihC,GAAOxtC,EAAMwS,QAAUxS,EAAMwS,QAAQg7B,QAAQ1lC,IAAc,EACjG,CACA0pC,YAAAA,CAAa/qB,GACTuoB,IAAUxB,IACN,MAAM,KAAEp6B,GAASzE,KAAK0Z,WAEtB,IAAKwqB,GAAWrF,EAAMp6B,EAAMzE,KAAKwiC,kBAC7B,OACJ,MAAM,WAAE9uB,GAAe1T,KAAKqG,cACtB89B,EAAYnkC,KAAKqjC,mBAAmBxE,GAC1C,GAAInrB,GAAcA,EAAW7O,OAAQ,CACjC,MAAM,IAAErK,EAAG,IAAEE,GAAQgZ,EAAW7O,OAAO0+B,UAAU1E,GACjDsF,EAAUv7B,IAAIkP,EAAM+mB,GAAQ9pB,GAAIva,EAAKE,EAAK,IAC9C,IAER,CAMAqrC,8BAAAA,GACI,IAAK/lC,KAAKqG,cAAcQ,QACpB,OACJ,MAAM,KAAEpC,EAAI,gBAAE4/B,GAAoBrkC,KAAK0Z,YACjC,WAAEhG,GAAe1T,KAAKqG,cAC5B,IAAKxD,EAAYwhC,KAAqB3wB,IAAe1T,KAAKyiC,YACtD,OAKJziC,KAAKgjC,gBAKL,MAAMgD,EAAc,CAAEv8B,EAAG,EAAGC,EAAG,GAC/B22B,IAAUxB,IACN,MAAMsF,EAAYnkC,KAAKqjC,mBAAmBxE,GAC1C,GAAIsF,EAAW,CACX,MAAMnyB,EAASmyB,EAAUz7B,MACzBs9B,EAAYnH,GRpS5B,SAAoBhvB,EAAQD,GACxB,IAAIuB,EAAS,GACb,MAAM80B,EAAerH,GAAW/uB,GAC1Bq2B,EAAetH,GAAWhvB,GAOhC,OANIs2B,EAAeD,EACf90B,EAASwS,GAAS/T,EAAOpV,IAAKoV,EAAOlV,IAAMurC,EAAcp2B,EAAOrV,KAE3DyrC,EAAeC,IACpB/0B,EAASwS,GAAS9T,EAAOrV,IAAKqV,EAAOnV,IAAMwrC,EAAct2B,EAAOpV,MAE7D4P,EAAM,EAAG,EAAG+G,EACvB,CQyRoCD,CAAW,CAAE1W,IAAKwX,EAAQtX,IAAKsX,GAAUhS,KAAKyiC,YAAY5D,GAClF,KAKJ,MAAM,kBAAEjwB,GAAsB5O,KAAKqG,cAAcqT,WACjD1Z,KAAKqG,cAAcQ,QAAQvK,MAAM6N,UAAYyE,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN8E,EAAWliB,MAAQkiB,EAAWliB,KAAK20C,eACnCzyB,EAAW0yB,eACXpmC,KAAKmjC,qBAKL9C,IAAUxB,IACN,IAAKqF,GAAWrF,EAAMp6B,EAAM,MACxB,OAIJ,MAAM0/B,EAAYnkC,KAAKqjC,mBAAmBxE,IACpC,IAAErkC,EAAG,IAAEE,GAAQsF,KAAKyiC,YAAY5D,GACtCsF,EAAUv7B,IAAImM,GAAIva,EAAKE,EAAKsrC,EAAYnH,IAAO,GAEvD,CACAwH,YAAAA,GACI,IAAKrmC,KAAKqG,cAAcQ,QACpB,OACJu7B,GAAoBx5B,IAAI5I,KAAKqG,cAAerG,MAC5C,MAIMsmC,EAAsBtuB,GAJZhY,KAAKqG,cAAcQ,QAIkB,eAAgBhN,IACjE,MAAM,KAAE4K,EAAI,aAAE0L,GAAe,GAASnQ,KAAK0Z,WAC3CjV,GAAQ0L,GAAgBnQ,KAAKhG,MAAMH,EAAM,IAEvC0sC,EAAyBA,KAC3B,MAAM,gBAAElC,GAAoBrkC,KAAK0Z,WAC7B7W,EAAYwhC,KACZrkC,KAAKyiC,YAAcziC,KAAKwkC,wBAC5B,GAEE,WAAE9wB,GAAe1T,KAAKqG,cACtBmgC,EAA4B9yB,EAAW4D,iBAAiB,UAAWivB,GACrE7yB,IAAeA,EAAW7O,SAC1B6O,EAAWliB,MAAQkiB,EAAWliB,KAAK20C,eACnCzyB,EAAW0yB,gBAEfG,IAKA,MAAME,EAAqBvvB,GAAYhQ,OAAQ,UAAU,IAAMlH,KAAK+lC,mCAK9DW,EAA2BhzB,EAAW4D,iBAAiB,aAAc9kB,IAAiC,IAAhC,MAAEyO,EAAK,iBAAE0lC,GAAkBn0C,EAC/FwN,KAAKuiC,YAAcoE,IACnBtG,IAAUxB,IACN,MAAMtH,EAAcv3B,KAAKqjC,mBAAmBxE,GACvCtH,IAELv3B,KAAKi/B,YAAYJ,IAAS59B,EAAM49B,GAAMK,UACtC3H,EAAY3uB,IAAI2uB,EAAY7uB,MAAQzH,EAAM49B,GAAMK,WAAU,IAE9Dl/B,KAAKqG,cAAcgB,SACvB,IAEJ,MAAO,KACHo/B,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACAhtB,QAAAA,GACI,MAAMroB,EAAQ2O,KAAKqG,cAAcqT,YAC3B,KAAEjV,GAAO,EAAK,kBAAE++B,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEoB,GAAkB,EAAK,YAAEvE,EAAcF,GAAc,aAAE4F,GAAe,GAAUn0C,EAC1J,MAAO,IACAA,EACHoT,OACA++B,oBACAP,kBACAoB,kBACAvE,cACA0F,eAER,EAEJ,SAAStB,GAAW/sC,EAAWsN,EAAM+9B,GACjC,QAAkB,IAAT/9B,GAAiBA,IAAStN,KACT,OAArBqrC,GAA6BA,IAAqBrrC,EAC3D,CCtcA,MAAMyvC,GAAgBxvB,GAAY,CAACvd,EAAO4f,KAClCrC,GACAZ,GAAMxP,QAAO,IAAMoQ,EAAQvd,EAAO4f,IACtC,ECLJ,MAAMotB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQpI,GAC7B,OAAIA,EAAKnkC,MAAQmkC,EAAKrkC,IACX,EACHysC,GAAUpI,EAAKnkC,IAAMmkC,EAAKrkC,KAAQ,GAC9C,CAQA,MAAM0sC,GAAsB,CACxBC,QAASA,CAACn1B,EAAQmH,KACd,IAAKA,EAAKvJ,OACN,OAAOoC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI3G,GAAGrC,KAAKgJ,GAIR,OAAOA,EAHPA,EAASzH,WAAWyH,EAK5B,CAKA,MAAMvI,EAAIu9B,GAAgBh1B,EAAQmH,EAAKvJ,OAAOnG,GACxCC,EAAIs9B,GAAgBh1B,EAAQmH,EAAKvJ,OAAOlG,GAC9C,MAAO,GAAPhY,OAAU+X,EAAC,MAAA/X,OAAKgY,EAAC,OCjCnB09B,GAAmB,CACrBD,QAASA,CAACn1B,EAAMxf,KAAqC,IAAnC,UAAE60C,EAAS,gBAAEC,GAAiB90C,EAC5C,MAAM+0C,EAAWv1B,EACXw1B,EAAS7hB,GAAQrb,MAAM0H,GAE7B,GAAIw1B,EAAOtuC,OAAS,EAChB,OAAOquC,EACX,MAAMhhB,EAAWZ,GAAQH,kBAAkBxT,GACrCZ,EAA8B,kBAAdo2B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB79B,EAAEe,MAAQ68B,EAAU59B,EAC7Ci+B,EAASJ,EAAgB59B,EAAEc,MAAQ68B,EAAU39B,EACnD89B,EAAO,EAAIp2B,IAAWq2B,EACtBD,EAAO,EAAIp2B,IAAWs2B,EAOtB,MAAMC,EAAe5yB,GAAI0yB,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAIp2B,KAClBo2B,EAAO,EAAIp2B,IAAWu2B,GAEQ,kBAAvBH,EAAO,EAAIp2B,KAClBo2B,EAAO,EAAIp2B,IAAWu2B,GACnBphB,EAASihB,EAAO,GCnB/B,MAAMI,WAAiCC,EAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAEzhC,EAAa,YAAE0hC,EAAW,kBAAEC,EAAiB,SAAE9hC,GAAalG,KAAK3O,OACnE,WAAEqiB,GAAerN,E/IlB/B,IAA2B4hC,I+ImBDC,G/IlBtBjrC,OAAO8S,OAAO9G,EAAiBg/B,G+ImBvBv0B,IACIq0B,EAAYI,OACZJ,EAAYI,MAAM/nC,IAAIsT,GACtBs0B,GAAqBA,EAAkBtL,UAAYx2B,GACnD8hC,EAAkBtL,SAAShpB,GAE/BA,EAAWliB,KAAK42C,YAChB10B,EAAW4D,iBAAiB,qBAAqB,KAC7CtX,KAAKqoC,cAAc,IAEvB30B,EAAW40B,WAAW,IACf50B,EAAWxV,QACdo+B,eAAgBA,IAAMt8B,KAAKqoC,kBAGnCxB,GAAsBE,gBAAiB,CAC3C,CACAwB,uBAAAA,CAAwBp0B,GACpB,MAAM,iBAAEq0B,EAAgB,cAAEniC,EAAa,KAAE5B,EAAI,UAAE43B,GAAcr8B,KAAK3O,MAC5DqiB,EAAarN,EAAcqN,WACjC,OAAKA,GASLA,EAAW2oB,UAAYA,EACnB53B,GACA0P,EAAUq0B,mBAAqBA,QACVrvC,IAArBqvC,EACA90B,EAAW+0B,aAGXzoC,KAAKqoC,eAELl0B,EAAUkoB,YAAcA,IACpBA,EACA3oB,EAAWg1B,UAELh1B,EAAWi1B,YAMjBnyB,GAAMpP,YAAW,KACb,MAAMwhC,EAAQl1B,EAAWm1B,WACpBD,GAAUA,EAAME,QAAQ5vC,QACzB8G,KAAKqoC,cACT,KAIL,MAnCI,IAoCf,CACAU,kBAAAA,GACI,MAAM,WAAEr1B,GAAe1T,KAAK3O,MAAMgV,cAC9BqN,IACAA,EAAWliB,KAAK42C,YAChB1lC,EAAU0E,YAAW,MACZsM,EAAWs1B,kBAAoBt1B,EAAWu1B,UAC3CjpC,KAAKqoC,cACT,IAGZ,CACAa,oBAAAA,GACI,MAAM,cAAE7iC,EAAa,YAAE0hC,EAAaC,kBAAmBmB,GAAoBnpC,KAAK3O,OAC1E,WAAEqiB,GAAerN,EACnBqN,IACAA,EAAW01B,4BACPrB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAM5nC,OAAOmT,GACzBy1B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW31B,GAEtC,CACA20B,YAAAA,GACI,MAAM,aAAEA,GAAiBroC,KAAK3O,MAC9Bg3C,GAAgBA,GACpB,CACAhhC,MAAAA,GACI,OAAO,IACX,EAEJ,SAASrB,GAAc3U,GACnB,MAAOgrC,EAAWgM,GCpFtB,WACI,MAAMvkC,GAAUG,EAAAA,EAAAA,YAAWjF,GAC3B,GAAgB,OAAZ8E,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEu4B,EAAS,eAAEC,EAAc,SAAEI,GAAa54B,EAG1CqE,GAAKmhC,EAAAA,EAAAA,SAGX,OAFAjqC,EAAAA,EAAAA,YAAU,IAAMq9B,EAASv0B,IAAK,KAEtBk0B,GAAaC,EAAiB,EAAC,EADlB+L,IAAM/L,GAAkBA,EAAen0B,IACE,EAAC,EACnE,CDyEsCohC,GAC5BxB,GAAc9jC,EAAAA,EAAAA,YAAWe,GAC/B,OAAQ6iC,EAAAA,cAA6BD,GAA0B,IAAKv2C,EAAO02C,YAAaA,EAAaC,mBAAmB/jC,EAAAA,EAAAA,YAAWgB,GAA2Bo3B,UAAWA,EAAWgM,aAAcA,GACtM,CACA,MAAMH,GAAyB,CAC3Br1C,aAAc,IACPq0C,GACHsC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRv9B,oBAAqBi7B,GACrBh7B,qBAAsBg7B,GACtB96B,uBAAwB86B,GACxB/6B,wBAAyB+6B,GACzBuC,UAAWrC,IE1HTsC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQxwC,OACrB0wC,GAAY9vC,GAA2B,kBAAVA,EAAqByQ,WAAWzQ,GAASA,EACtE+vC,GAAQ/vC,GAA2B,kBAAVA,GAAsBuR,GAAGrC,KAAKlP,GA0C7D,SAASgwC,GAAUptC,EAAQqtC,GACvB,YAA8B5wC,IAAvBuD,EAAOqtC,GACRrtC,EAAOqtC,GACPrtC,EAAO7J,YACjB,CAwBA,MAAMm3C,GAAkBC,GAAS,EAAG,GAAKnqB,IACnCoqB,GAAmBD,GAAS,GAAK,IAAM3zB,IAC7C,SAAS2zB,GAASzvC,EAAKE,EAAKwkB,GACxB,OAAQtgB,GAEAA,EAAIpE,EACG,EACPoE,EAAIlE,EACG,EACJwkB,EAAOyE,GAASnpB,EAAKE,EAAKkE,GAEzC,CCrFA,SAASurC,GAAatL,EAAMuL,GACxBvL,EAAKrkC,IAAM4vC,EAAW5vC,IACtBqkC,EAAKnkC,IAAM0vC,EAAW1vC,GAC1B,CAMA,SAAS2vC,GAAYrJ,EAAKsJ,GACtBH,GAAanJ,EAAIv3B,EAAG6gC,EAAU7gC,GAC9B0gC,GAAanJ,EAAIt3B,EAAG4gC,EAAU5gC,EAClC,CCVA,SAAS6gC,GAAiBzyB,EAAOonB,EAAW10B,EAAOy0B,EAAa4B,GAM5D,OAJA/oB,EAAQ6oB,GADR7oB,GAASonB,EACiB,EAAI10B,EAAOy0B,QACpB9lC,IAAb0nC,IACA/oB,EAAQ6oB,GAAW7oB,EAAO,EAAI+oB,EAAU5B,IAErCnnB,CACX,CAsBA,SAAS0yB,GAAqB3L,EAAMyC,EAAU9uC,EAA8B2e,EAAQs5B,GAAY,IAA/CpuC,EAAKklC,EAAUC,GAAUhvC,GAlB1E,SAAyBqsC,GAA8F,IAAxFK,EAASjmC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGuR,EAAKvR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGkY,EAAMlY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAK4nC,EAAQ5nC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEixC,EAAUnxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG4lC,EAAM4L,EAAUxxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG4lC,EACzGzzB,GAAQpC,KAAKk2B,KACbA,EAAY30B,WAAW20B,GAEvBA,EADyBnqB,GAAI01B,EAAWjwC,IAAKiwC,EAAW/vC,IAAKwkC,EAAY,KAC1CuL,EAAWjwC,KAE9C,GAAyB,kBAAd0kC,EACP,OACJ,IAAID,EAAclqB,GAAIq1B,EAAW5vC,IAAK4vC,EAAW1vC,IAAKyW,GAClD0tB,IAASuL,IACTnL,GAAeC,GACnBL,EAAKrkC,IAAM+vC,GAAiB1L,EAAKrkC,IAAK0kC,EAAW10B,EAAOy0B,EAAa4B,GACrEhC,EAAKnkC,IAAM6vC,GAAiB1L,EAAKnkC,IAAKwkC,EAAW10B,EAAOy0B,EAAa4B,EACzE,CAMI6J,CAAgB7L,EAAMyC,EAAWjlC,GAAMilC,EAAWC,GAAWD,EAAWE,GAAYF,EAAW92B,MAAO2G,EAAQs5B,EAClH,CAIA,MAAM/I,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASgJ,GAAoB3J,EAAKM,EAAYgJ,EAAWM,GACrDJ,GAAqBxJ,EAAIv3B,EAAG63B,EAAYI,GAAO4I,EAAYA,EAAU7gC,OAAItQ,EAAWyxC,EAAYA,EAAUnhC,OAAItQ,GAC9GqxC,GAAqBxJ,EAAIt3B,EAAG43B,EAAYK,GAAO2I,EAAYA,EAAU5gC,OAAIvQ,EAAWyxC,EAAYA,EAAUlhC,OAAIvQ,EAClH,CCjDA,SAAS0xC,GAAgB5pC,GACrB,OAA2B,IAApBA,EAAMi+B,WAAmC,IAAhBj+B,EAAMuJ,KAC1C,CACA,SAASsgC,GAAY7pC,GACjB,OAAO4pC,GAAgB5pC,EAAMwI,IAAMohC,GAAgB5pC,EAAMyI,EAC7D,CAOA,SAASqhC,GAAiB7yB,EAAGC,GACzB,OAAQ5d,KAAKmQ,MAAMwN,EAAEzO,EAAEjP,OAASD,KAAKmQ,MAAMyN,EAAE1O,EAAEjP,MAC3CD,KAAKmQ,MAAMwN,EAAEzO,EAAE/O,OAASH,KAAKmQ,MAAMyN,EAAE1O,EAAE/O,MACvCH,KAAKmQ,MAAMwN,EAAExO,EAAElP,OAASD,KAAKmQ,MAAMyN,EAAEzO,EAAElP,MACvCD,KAAKmQ,MAAMwN,EAAExO,EAAEhP,OAASH,KAAKmQ,MAAMyN,EAAEzO,EAAEhP,IAC/C,CACA,SAASswC,GAAYhK,GACjB,OAAOpC,GAAWoC,EAAIv3B,GAAKm1B,GAAWoC,EAAIt3B,EAC9C,CCpBA,MAAMuhC,GACFlrC,WAAAA,GACIC,KAAK8oC,QAAU,EACnB,CACA1oC,GAAAA,CAAI+Y,GACA6b,GAAch1B,KAAK8oC,QAAS3vB,GAC5BA,EAAK+xB,gBACT,CACA3qC,MAAAA,CAAO4Y,GAKH,GAJA8b,GAAWj1B,KAAK8oC,QAAS3vB,GACrBA,IAASnZ,KAAKmrC,WACdnrC,KAAKmrC,cAAWhyC,GAEhBggB,IAASnZ,KAAKorC,KAAM,CACpB,MAAMD,EAAWnrC,KAAK8oC,QAAQ9oC,KAAK8oC,QAAQ5vC,OAAS,GAChDiyC,GACAnrC,KAAK0oC,QAAQyC,EAErB,CACJ,CACAxC,QAAAA,CAASxvB,GACL,MAAMkyB,EAAcrrC,KAAK8oC,QAAQwC,WAAWC,GAAWpyB,IAASoyB,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI9wC,EAAIgxC,EAAahxC,GAAK,EAAGA,IAAK,CACnC,MAAMkxC,EAASvrC,KAAK8oC,QAAQzuC,GAC5B,IAAyB,IAArBkxC,EAAOlP,UAAqB,CAC5B8O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAnrC,KAAK0oC,QAAQyC,IACN,EAKf,CACAzC,OAAAA,CAAQvvB,EAAMqyB,GACV,MAAML,EAAWnrC,KAAKorC,KACtB,GAAIjyB,IAASgyB,IAEbnrC,KAAKmrC,SAAWA,EAChBnrC,KAAKorC,KAAOjyB,EACZA,EAAKsyB,OACDN,GAAU,CACVA,EAASrjC,UAAYqjC,EAASD,iBAC9B/xB,EAAK+xB,iBACL/xB,EAAKuyB,WAAaP,EACdK,IACAryB,EAAKuyB,WAAWC,iBAAkB,GAElCR,EAASS,WACTzyB,EAAKyyB,SAAWT,EAASS,SACzBzyB,EAAKyyB,SAASj9B,aACVw8B,EAASU,iBAAmBV,EAASx8B,cAEzCwK,EAAK3nB,MAAQ2nB,EAAK3nB,KAAKs6C,aACvB3yB,EAAK4yB,eAAgB,GAEzB,MAAM,UAAEC,GAAc7yB,EAAKjb,SACT,IAAd8tC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACIlsC,KAAK8oC,QAAQvrC,SAAS4b,IAClB,MAAM,QAAEjb,EAAO,aAAEiuC,GAAiBhzB,EAClCjb,EAAQo+B,gBAAkBp+B,EAAQo+B,iBAC9B6P,GACAA,EAAajuC,QAAQo+B,gBACjB6P,EAAajuC,QAAQo+B,gBAC7B,GAER,CACA4O,cAAAA,GACIlrC,KAAK8oC,QAAQvrC,SAAS4b,IAClBA,EAAKrR,UAAYqR,EAAK+xB,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQpsC,KAAKorC,MAAQprC,KAAKorC,KAAKQ,WACvB5rC,KAAKorC,KAAKQ,cAAWzyC,EAE7B,EC5GJ,SAASkzC,GAAyBprC,EAAOomC,EAAWiF,GAChD,IAAIniC,EAAY,GAOhB,MAAMoiC,EAAatrC,EAAMwI,EAAEy1B,UAAYmI,EAAU59B,EAC3C+iC,EAAavrC,EAAMyI,EAAEw1B,UAAYmI,EAAU39B,EAWjD,IAVI6iC,GAAcC,KACdriC,EAAY,eAAHzY,OAAkB66C,EAAU,QAAA76C,OAAO86C,EAAU,YAMtC,IAAhBnF,EAAU59B,GAA2B,IAAhB49B,EAAU39B,IAC/BS,GAAa,SAAJzY,OAAa,EAAI21C,EAAU59B,EAAC,MAAA/X,OAAK,EAAI21C,EAAU39B,EAAC,OAEzD4iC,EAAiB,CACjB,MAAM,OAAEl/B,EAAM,QAAEC,EAAO,QAAEC,GAAYg/B,EACjCl/B,IACAjD,GAAa,UAAJzY,OAAc0b,EAAM,UAC7BC,IACAlD,GAAa,WAAJzY,OAAe2b,EAAO,UAC/BC,IACAnD,GAAa,WAAJzY,OAAe4b,EAAO,SACvC,CAKA,MAAMm/B,EAAgBxrC,EAAMwI,EAAEe,MAAQ68B,EAAU59B,EAC1CijC,EAAgBzrC,EAAMyI,EAAEc,MAAQ68B,EAAU39B,EAIhD,OAHsB,IAAlB+iC,GAAyC,IAAlBC,IACvBviC,GAAa,SAAJzY,OAAa+6C,EAAa,MAAA/6C,OAAKg7C,EAAa,MAElDviC,GAAa,MACxB,CCvCA,MAAMwiC,GAAiBA,CAACz0B,EAAGC,IAAMD,EAAE00B,MAAQz0B,EAAEy0B,MCG7C,MAAMC,GACF9sC,WAAAA,GACIC,KAAKvI,SAAW,GAChBuI,KAAK8sC,SAAU,CACnB,CACA1sC,GAAAA,CAAIjE,GACA64B,GAAch1B,KAAKvI,SAAU0E,GAC7B6D,KAAK8sC,SAAU,CACnB,CACAvsC,MAAAA,CAAOpE,GACH84B,GAAWj1B,KAAKvI,SAAU0E,GAC1B6D,KAAK8sC,SAAU,CACnB,CACAvvC,OAAAA,CAAQsE,GACJ7B,KAAK8sC,SAAW9sC,KAAKvI,SAAS+hC,KAAKmT,IACnC3sC,KAAK8sC,SAAU,EACf9sC,KAAKvI,SAAS8F,QAAQsE,EAC1B,ECQJ,MAAMkrC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI9kC,GAAK,EAKT,MAAM+kC,GAAsB,CACxBl7C,KAAM,kBACNm7C,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoB96C,GAA6F,IAA5F,qBAAE+6C,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBn7C,EACpH,OAAO,MACHuN,WAAAA,GAAuH,IAA3G4O,EAAY1V,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGqN,EAAMrN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqB,OAAlBu0C,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGxtC,KAAKmI,GAAKA,KAIVnI,KAAK4tC,YAAc,EAOnB5tC,KAAKvI,SAAW,IAAI0I,IAKpBH,KAAK9B,QAAU,CAAC,EAMhB8B,KAAK6tC,iBAAkB,EACvB7tC,KAAKojC,oBAAqB,EAO1BpjC,KAAK+rC,eAAgB,EAKrB/rC,KAAK8tC,mBAAoB,EAKzB9tC,KAAK+tC,yBAA0B,EAK/B/tC,KAAKguC,kBAAmB,EAIxBhuC,KAAKiuC,uBAAwB,EAC7BjuC,KAAKkuC,uBAAwB,EAK7BluC,KAAK8rC,YAAa,EAIlB9rC,KAAKmuC,OAAQ,EAKbnuC,KAAKouC,YAAa,EAIlBpuC,KAAKquC,sBAAuB,EAS5BruC,KAAKqnC,UAAY,CAAE59B,EAAG,EAAGC,EAAG,GAI5B1J,KAAKsuC,cAAgB,IAAI7lC,IACzBzI,KAAKuuC,iBAAkB,EAEvBvuC,KAAKwuC,iBAAkB,EACvBxuC,KAAKyuC,2BAA4B,EACjCzuC,KAAK0uC,kBAAoB,KACjB1uC,KAAK8rC,aACL9rC,KAAK8rC,YAAa,EAClB9rC,KAAK2uC,oBACT,EAOJ3uC,KAAK4uC,iBAAmB,KCrJpC,IAAgBC,EDsJA7uC,KAAKyuC,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZrtC,KAAK8uC,MAAMvxC,QAAQwxC,IACnB/uC,KAAK8uC,MAAMvxC,QAAQyxC,IACnBhvC,KAAK8uC,MAAMvxC,QAAQ0xC,IACnBjvC,KAAK8uC,MAAMvxC,QAAQ2xC,IClKnBL,EDmKO3B,GClKfhmC,OAAOioC,aACPjoC,OAAOioC,YAAYC,OAAOP,EDiKS,EAE/B7uC,KAAKqvC,cAAe,EACpBrvC,KAAKsvC,WAAY,EACjBtvC,KAAKuvC,kBAAoB,EAKzBvvC,KAAKwvC,YAAc,IAAI/mC,IACvBzI,KAAK2O,aAAeA,EACpB3O,KAAKxO,KAAO8U,EAASA,EAAO9U,MAAQ8U,EAAStG,KAC7CA,KAAKyvC,KAAOnpC,EAAS,IAAIA,EAAOmpC,KAAMnpC,GAAU,GAChDtG,KAAKsG,OAASA,EACdtG,KAAK4sC,MAAQtmC,EAASA,EAAOsmC,MAAQ,EAAI,EACzC,IAAK,IAAIvyC,EAAI,EAAGA,EAAI2F,KAAKyvC,KAAKv2C,OAAQmB,IAClC2F,KAAKyvC,KAAKp1C,GAAGg0C,sBAAuB,EAEpCruC,KAAKxO,OAASwO,OACdA,KAAK8uC,MAAQ,IAAIjC,GACzB,CACAv1B,gBAAAA,CAAiB/kB,EAAM6kB,GAInB,OAHKpX,KAAKsuC,cAAchuC,IAAI/N,IACxByN,KAAKsuC,cAAc1lC,IAAIrW,EAAM,IAAI2iC,IAE9Bl1B,KAAKsuC,cAAc5lC,IAAInW,GAAM6N,IAAIgX,EAC5C,CACAs4B,eAAAA,CAAgBn9C,GACZ,MAAMo9C,EAAsB3vC,KAAKsuC,cAAc5lC,IAAInW,GAAM,QAAA8lB,EAAApf,UAAAC,OADpC02C,EAAI,IAAA11C,MAAAme,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJq3B,EAAIr3B,EAAA,GAAAtf,UAAAsf,GAEzBo3B,GAAuBA,EAAoBva,UAAUwa,EACzD,CACAC,YAAAA,CAAat9C,GACT,OAAOyN,KAAKsuC,cAAchuC,IAAI/N,EAClC,CAIAwV,KAAAA,CAAMD,GAAqD,IAA3CikC,EAAa9yC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+G,KAAKxO,KAAK+8C,gBACtC,GAAIvuC,KAAK8H,SACL,OE1MhB,IAAsB0L,EF2MVxT,KAAKmuC,OE3MK36B,EF2MgB1L,aE1MRgoC,YAAkC,QAApBt8B,EAAQwD,QF2MxChX,KAAK8H,SAAWA,EAChB,MAAM,SAAE5B,EAAQ,OAAErB,EAAM,cAAEwB,GAAkBrG,KAAK9B,QASjD,GARImI,IAAkBA,EAAcQ,SAChCR,EAAc0B,MAAMD,GAExB9H,KAAKxO,KAAKs9C,MAAM1uC,IAAIJ,MACpBA,KAAKsG,QAAUtG,KAAKsG,OAAO7O,SAAS2I,IAAIJ,MACpC+rC,IAAkBlnC,GAAUqB,KAC5BlG,KAAK+rC,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsBA,IAAOhwC,KAAKxO,KAAK08C,uBAAwB,EACrEX,EAAqBzlC,GAAU,KAC3B9H,KAAKxO,KAAK08C,uBAAwB,EAClC6B,GAAeA,IACfA,EGtNpB,SAAeluC,EAAUouC,GACrB,MAAMj2C,EAAQ6yB,GAAKtqB,MACb2tC,EAAe19C,IAAmB,IAAlB,UAAE0O,GAAW1O,EAC/B,MAAMk9B,EAAUxuB,EAAYlH,EACxB01B,GAAWugB,IACXx5B,GAAYy5B,GACZruC,EAAS6tB,EAAUugB,GACvB,EAGJ,OADAz5B,GAAMI,KAAKs5B,GAAc,GAClB,IAAMz5B,GAAYy5B,EAC7B,CH2MkCriB,CAAMmiB,EAAqB,KACrCnJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C9mC,KAAK8uC,MAAMvxC,QAAQ4yC,IACvB,GAER,CACIjqC,GACAlG,KAAKxO,KAAK4+C,mBAAmBlqC,EAAUlG,OAGd,IAAzBA,KAAK9B,QAAQsF,SACb6C,IACCH,GAAYrB,IACb7E,KAAKsX,iBAAiB,aAAarjB,IAA+E,IAA9E,MAAEgN,EAAK,iBAAE0lC,EAAgB,yBAAE0J,EAA0BxrC,OAAQyrC,GAAYr8C,EACzG,GAAI+L,KAAKuwC,yBAGL,OAFAvwC,KAAK4P,YAASzW,OACd6G,KAAKwwC,oBAAiBr3C,GAI1B,MAAMs3C,EAAmBzwC,KAAK9B,QAAQ7J,YAClCgS,EAAc8rB,wBACdue,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BvqC,EAAcqT,WAKvEm3B,GAAiB7wC,KAAK8wC,eACvB/F,GAAiB/qC,KAAK8wC,aAAcR,IACrCD,EAMEU,GAAgCpK,GAAoB0J,EAC1D,GAAIrwC,KAAK9B,QAAQ8yC,YACZhxC,KAAK0rC,YAAc1rC,KAAK0rC,WAAW5jC,UACpCipC,GACCpK,IACIkK,IAAkB7wC,KAAKgpC,kBAAoB,CAC5ChpC,KAAK0rC,aACL1rC,KAAKmsC,aAAensC,KAAK0rC,WACzB1rC,KAAKmsC,aAAaA,kBAAehzC,GAErC6G,KAAKixC,mBAAmBhwC,EAAO8vC,GAC/B,MAAMG,EAAmB,IAClB1d,GAAmBid,EAAkB,UACxCtiB,OAAQwiB,EACRtiB,WAAYuiB,IAEZvqC,EAAc2yB,oBACdh5B,KAAK9B,QAAQ8yC,cACbE,EAAiBrjB,MAAQ,EACzBqjB,EAAiBl/C,MAAO,GAE5BgO,KAAKg3B,eAAeka,EACxB,MAOSvK,GACDwJ,GAAgBnwC,MAEhBA,KAAKipC,UAAYjpC,KAAK9B,QAAQo+B,gBAC9Bt8B,KAAK9B,QAAQo+B,iBAGrBt8B,KAAK8wC,aAAeR,CAAS,GAGzC,CACAtoC,OAAAA,GACIhI,KAAK9B,QAAQgI,UAAYlG,KAAKyoC,aAC9BzoC,KAAKxO,KAAKs9C,MAAMvuC,OAAOP,MACvB,MAAM4oC,EAAQ5oC,KAAK6oC,WACnBD,GAASA,EAAMroC,OAAOP,MACtBA,KAAKsG,QAAUtG,KAAKsG,OAAO7O,SAASgJ,OAAOT,MAC3CA,KAAK8H,cAAW3O,EAChBsd,GAAYzW,KAAK4uC,iBACrB,CAEAuC,WAAAA,GACInxC,KAAKiuC,uBAAwB,CACjC,CACAmD,aAAAA,GACIpxC,KAAKiuC,uBAAwB,CACjC,CACAoD,eAAAA,GACI,OAAOrxC,KAAKiuC,uBAAyBjuC,KAAKkuC,qBAC9C,CACAqC,sBAAAA,GACI,OAAQvwC,KAAKojC,oBACRpjC,KAAKsG,QAAUtG,KAAKsG,OAAOiqC,2BAC5B,CACR,CAEAe,WAAAA,GACQtxC,KAAKqxC,oBAETrxC,KAAK8rC,YAAa,EAClB9rC,KAAK8uC,OAAS9uC,KAAK8uC,MAAMvxC,QAAQg0C,IACjCvxC,KAAK4tC,cACT,CACA4D,oBAAAA,GACI,MAAM,cAAEnrC,GAAkBrG,KAAK9B,QAC/B,OAAOmI,GAAiBA,EAAcqT,WAAW9K,iBACrD,CACA65B,UAAAA,GAAyC,IAA9BgJ,IAAqBx4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAE5B,GADA+G,KAAKxO,KAAK+8C,iBAAkB,EACxBvuC,KAAKxO,KAAK6/C,kBAEV,YADArxC,KAAK9B,QAAQo+B,gBAAkBt8B,KAAK9B,QAAQo+B,kBAIhD,IADCt8B,KAAKxO,KAAKs6C,YAAc9rC,KAAKxO,KAAK8/C,cAC/BtxC,KAAK+rC,cACL,OACJ/rC,KAAK+rC,eAAgB,EACrB,IAAK,IAAI1xC,EAAI,EAAGA,EAAI2F,KAAKyvC,KAAKv2C,OAAQmB,IAAK,CACvC,MAAM8e,EAAOnZ,KAAKyvC,KAAKp1C,GACvB8e,EAAKk1B,sBAAuB,EAC5Bl1B,EAAKgtB,aAAa,YACdhtB,EAAKjb,QAAQ8yC,YACb73B,EAAKsvB,YAAW,EAExB,CACA,MAAM,SAAEviC,EAAQ,OAAErB,GAAW7E,KAAK9B,QAClC,QAAiB/E,IAAb+M,IAA2BrB,EAC3B,OACJ,MAAM+J,EAAoB5O,KAAKwxC,uBAC/BxxC,KAAK0xC,2BAA6B9iC,EAC5BA,EAAkB5O,KAAK2O,aAAc,SACrCxV,EACN6G,KAAK2xC,iBACLF,GAAyBzxC,KAAK0vC,gBAAgB,aAClD,CACA1oC,MAAAA,GACIhH,KAAKwuC,iBAAkB,EAKvB,GAJyBxuC,KAAKqxC,kBAQ1B,OAHArxC,KAAKoxC,gBACLpxC,KAAK2uC,yBACL3uC,KAAK8uC,MAAMvxC,QAAQq0C,IAGlB5xC,KAAK8rC,YACN9rC,KAAK8uC,MAAMvxC,QAAQs0C,IAEvB7xC,KAAK8rC,YAAa,EAIlB9rC,KAAK8uC,MAAMvxC,QAAQu0C,IAKnB9xC,KAAK8uC,MAAMvxC,QAAQ6oC,IAKnBpmC,KAAK8uC,MAAMvxC,QAAQw0C,IACnB/xC,KAAK2uC,oBAML,MAAMpsC,EAAMsqB,GAAKtqB,MACjBN,GAAUhB,MAAQmJ,EAAM,EAAG,IAAO,GAAI7H,EAAMN,GAAUf,WACtDe,GAAUf,UAAYqB,EACtBN,GAAUd,cAAe,EACzBC,GAAM4F,OAAO3G,QAAQ4B,IACrBb,GAAM4wC,UAAU3xC,QAAQ4B,IACxBb,GAAMiG,OAAOhH,QAAQ4B,IACrBA,GAAUd,cAAe,CAC7B,CACAinC,SAAAA,GACSpoC,KAAKwuC,kBACNxuC,KAAKwuC,iBAAkB,EACvB9rC,EAAUkU,MAAK,IAAM5W,KAAKgH,WAElC,CACA2nC,iBAAAA,GACI3uC,KAAK8uC,MAAMvxC,QAAQ00C,IACnBjyC,KAAKwvC,YAAYjyC,QAAQ20C,GAC7B,CACAC,wBAAAA,GACSnyC,KAAKyuC,4BACNzuC,KAAKyuC,2BAA4B,EACjCj4B,GAAMw7B,UAAUhyC,KAAK4uC,kBAAkB,GAAO,GAEtD,CACAxF,yBAAAA,GAMI5yB,GAAMpP,YAAW,KACTpH,KAAK+rC,cACL/rC,KAAKxO,KAAK42C,YAGVpoC,KAAKxO,KAAKk9C,mBACd,GAER,CAIAiD,cAAAA,IACQ3xC,KAAK4rC,UAAa5rC,KAAK8H,WAE3B9H,KAAK4rC,SAAW5rC,KAAKskC,UACzB,CACA8B,YAAAA,GACI,IAAKpmC,KAAK8H,SACN,OAGJ,GADA9H,KAAKmmC,iBACCnmC,KAAK9B,QAAQk0C,sBAAuBpyC,KAAKipC,YAC1CjpC,KAAK+rC,cACN,OASJ,GAAI/rC,KAAK0rC,aAAe1rC,KAAK0rC,WAAW5jC,SACpC,IAAK,IAAIzN,EAAI,EAAGA,EAAI2F,KAAKyvC,KAAKv2C,OAAQmB,IAAK,CAC1B2F,KAAKyvC,KAAKp1C,GAClB8rC,cACT,CAEJ,MAAMkM,EAAaryC,KAAK6E,OACxB7E,KAAK6E,OAAS7E,KAAKskC,SAAQ,GAC3BtkC,KAAKsyC,gBAAkBlS,KACvBpgC,KAAK+rC,eAAgB,EACrB/rC,KAAKsnC,qBAAkBnuC,EACvB6G,KAAK0vC,gBAAgB,UAAW1vC,KAAK6E,OAAO0+B,WAC5C,MAAM,cAAEl9B,GAAkBrG,KAAK9B,QAC/BmI,GACIA,EAAc+uB,OAAO,gBAAiBp1B,KAAK6E,OAAO0+B,UAAW8O,EAAaA,EAAW9O,eAAYpqC,EACzG,CACAgtC,YAAAA,GAAgC,IAAnBoM,EAAKt5C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACbu5C,EAAmBx2C,QAAQgE,KAAK9B,QAAQu0C,cAAgBzyC,KAAK8H,UAC7D9H,KAAKklC,QACLllC,KAAKklC,OAAO0I,cAAgB5tC,KAAKxO,KAAKo8C,aACtC5tC,KAAKklC,OAAOqN,QAAUA,IACtBC,GAAmB,GAEnBA,IACAxyC,KAAKklC,OAAS,CACV0I,YAAa5tC,KAAKxO,KAAKo8C,YACvB2E,QACAG,OAAQhF,EAAkB1tC,KAAK8H,UAC/BsJ,OAAQq8B,EAAcztC,KAAK8H,WAGvC,CACA6lC,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMgF,EAAmB3yC,KAAK+rC,eAAiB/rC,KAAKquC,qBAC9CuE,EAAgB5yC,KAAKsnC,kBAAoBwD,GAAY9qC,KAAKsnC,iBAC1D14B,EAAoB5O,KAAKwxC,uBACzBqB,EAAyBjkC,EACzBA,EAAkB5O,KAAK2O,aAAc,SACrCxV,EACA25C,EAA8BD,IAA2B7yC,KAAK0xC,2BAChEiB,IACCC,GACG9jC,GAAa9O,KAAK2O,eAClBmkC,KACJnF,EAAe3tC,KAAK8H,SAAU+qC,GAC9B7yC,KAAKquC,sBAAuB,EAC5BruC,KAAKkrC,iBAEb,CACA5G,OAAAA,GAAgC,IAAxByO,IAAe95C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACnB,MAAM+5C,EAAUhzC,KAAKmlC,iBACrB,IAAI5B,EAAYvjC,KAAKizC,oBAAoBD,GA88BrD,IAAkBhS,EAp8BN,OAJI+R,IACAxP,EAAYvjC,KAAK+yC,gBAAgBxP,IAw8B7C2P,IADclS,EAr8BGuC,GAs8BH95B,GACdypC,GAAUlS,EAAIt3B,GAt8BC,CACHkkC,YAAa5tC,KAAKxO,KAAKo8C,YACvBuF,YAAaH,EACbzP,YACA50B,aAAc,CAAC,EACfkB,OAAQ7P,KAAKmI,GAErB,CACAg9B,cAAAA,GACI,MAAM,cAAE9+B,GAAkBrG,KAAK9B,QAC/B,IAAKmI,EACD,OAAO+5B,KACX,MAAMY,EAAM36B,EAAcw7B,sBAEpB,OAAEqD,GAAWllC,KAAKxO,KAKxB,OAJI0zC,IACA9D,GAAcJ,EAAIv3B,EAAGy7B,EAAO9zB,OAAO3H,GACnC23B,GAAcJ,EAAIt3B,EAAGw7B,EAAO9zB,OAAO1H,IAEhCs3B,CACX,CACAiS,mBAAAA,CAAoBjS,GAChB,MAAMoS,EAAmBhT,KACzBiK,GAAY+I,EAAkBpS,GAK9B,IAAK,IAAI3mC,EAAI,EAAGA,EAAI2F,KAAKyvC,KAAKv2C,OAAQmB,IAAK,CACvC,MAAM8e,EAAOnZ,KAAKyvC,KAAKp1C,IACjB,OAAE6qC,EAAM,QAAEhnC,GAAYib,EAC5B,GAAIA,IAASnZ,KAAKxO,MAAQ0zC,GAAUhnC,EAAQu0C,aAAc,CAKtD,GAAIvN,EAAOwN,OAAQ,CACfrI,GAAY+I,EAAkBpS,GAC9B,MAAQkE,OAAQmO,GAAerzC,KAAKxO,KAKhC6hD,IACAjS,GAAcgS,EAAiB3pC,GAAI4pC,EAAWjiC,OAAO3H,GACrD23B,GAAcgS,EAAiB1pC,GAAI2pC,EAAWjiC,OAAO1H,GAE7D,CACA03B,GAAcgS,EAAiB3pC,EAAGy7B,EAAO9zB,OAAO3H,GAChD23B,GAAcgS,EAAiB1pC,EAAGw7B,EAAO9zB,OAAO1H,EACpD,CACJ,CACA,OAAO0pC,CACX,CACAE,cAAAA,CAAetS,GAA4B,IAAvBuS,EAAat6C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7B,MAAMu6C,EAAiBpT,KACvBiK,GAAYmJ,EAAgBxS,GAC5B,IAAK,IAAI3mC,EAAI,EAAGA,EAAI2F,KAAKyvC,KAAKv2C,OAAQmB,IAAK,CACvC,MAAM8e,EAAOnZ,KAAKyvC,KAAKp1C,IAClBk5C,GACDp6B,EAAKjb,QAAQu0C,cACbt5B,EAAK+rB,QACL/rB,IAASA,EAAK3nB,MACdowC,GAAa4R,EAAgB,CACzB/pC,GAAI0P,EAAK+rB,OAAO9zB,OAAO3H,EACvBC,GAAIyP,EAAK+rB,OAAO9zB,OAAO1H,IAG1BoF,GAAaqK,EAAKxK,eAEvBizB,GAAa4R,EAAgBr6B,EAAKxK,aACtC,CAIA,OAHIG,GAAa9O,KAAK2O,eAClBizB,GAAa4R,EAAgBxzC,KAAK2O,cAE/B6kC,CACX,CACAT,eAAAA,CAAgB/R,GACZ,MAAMyS,EAAsBrT,KAC5BiK,GAAYoJ,EAAqBzS,GACjC,IAAK,IAAI3mC,EAAI,EAAGA,EAAI2F,KAAKyvC,KAAKv2C,OAAQmB,IAAK,CACvC,MAAM8e,EAAOnZ,KAAKyvC,KAAKp1C,GACvB,IAAK8e,EAAKrR,SACN,SACJ,IAAKgH,GAAaqK,EAAKxK,cACnB,SACJ6xB,GAASrnB,EAAKxK,eAAiBwK,EAAKw4B,iBACpC,MAAM/G,EAAYxK,KAElBiK,GAAYO,EADIzxB,EAAKgsB,kBAErBwF,GAAoB8I,EAAqBt6B,EAAKxK,aAAcwK,EAAKyyB,SAAWzyB,EAAKyyB,SAASrI,eAAYpqC,EAAWyxC,EACrH,CAIA,OAHI97B,GAAa9O,KAAK2O,eAClBg8B,GAAoB8I,EAAqBzzC,KAAK2O,cAE3C8kC,CACX,CACAC,cAAAA,CAAezyC,GACXjB,KAAK2zC,YAAc1yC,EACnBjB,KAAKxO,KAAK2gD,2BACVnyC,KAAK8tC,mBAAoB,CAC7B,CACAxF,UAAAA,CAAWpqC,GACP8B,KAAK9B,QAAU,IACR8B,KAAK9B,WACLA,EACH8tC,eAAiC7yC,IAAtB+E,EAAQ8tC,WAA0B9tC,EAAQ8tC,UAE7D,CACA4F,iBAAAA,GACI5xC,KAAKklC,YAAS/rC,EACd6G,KAAK6E,YAAS1L,EACd6G,KAAK4rC,cAAWzyC,EAChB6G,KAAK0xC,gCAA6Bv4C,EAClC6G,KAAK2zC,iBAAcx6C,EACnB6G,KAAK4P,YAASzW,EACd6G,KAAK+rC,eAAgB,CACzB,CACA6H,kCAAAA,GACS5zC,KAAK6zC,gBAQN7zC,KAAK6zC,eAAeC,2BACpB7xC,GAAUf,WACVlB,KAAK6zC,eAAe7E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B+E,EAAkB96C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjC,IAAIgY,EAMJ,MAAMm6B,EAAOprC,KAAKg0C,UAClBh0C,KAAK8tC,oBAAsB9tC,KAAK8tC,kBAAoB1C,EAAK0C,mBACzD9tC,KAAKguC,mBAAqBhuC,KAAKguC,iBAAmB5C,EAAK4C,kBACvDhuC,KAAK+tC,0BAA4B/tC,KAAK+tC,wBAA0B3C,EAAK2C,yBACrE,MAAMkG,EAAWj4C,QAAQgE,KAAKmsC,eAAiBnsC,OAASorC,EAUxD,KALkB2I,GACbE,GAAYj0C,KAAK+tC,yBAClB/tC,KAAK8tC,oBACmB,QAAtB78B,EAAKjR,KAAKsG,cAA2B,IAAP2K,OAAgB,EAASA,EAAG68B,oBAC5D9tC,KAAKk0C,gCAEL,OACJ,MAAM,OAAErvC,EAAM,SAAEqB,GAAalG,KAAK9B,QAIlC,GAAK8B,KAAK6E,SAAYA,GAAUqB,GAAhC,CAQA,GANAlG,KAAK8zC,yBAA2B7xC,GAAUf,WAMrClB,KAAK2zC,cAAgB3zC,KAAKwwC,eAAgB,CAC3C,MAAMqD,EAAiB7zC,KAAKm0C,6BACxBN,GACAA,EAAehvC,QACY,IAA3B7E,KAAKuvC,mBACLvvC,KAAK6zC,eAAiBA,EACtB7zC,KAAK4zC,qCACL5zC,KAAKwwC,eAAiBpQ,KACtBpgC,KAAKo0C,qBAAuBhU,KAC5Bb,GAAqBv/B,KAAKo0C,qBAAsBp0C,KAAK6E,OAAO0+B,UAAWsQ,EAAehvC,OAAO0+B,WAC7F8G,GAAYrqC,KAAKwwC,eAAgBxwC,KAAKo0C,uBAGtCp0C,KAAK6zC,eAAiB7zC,KAAKwwC,oBAAiBr3C,CAEpD,CAKA,GAAK6G,KAAKwwC,gBAAmBxwC,KAAK2zC,YAAlC,CxB5qBZ,IAAyB/jC,EAAQyvB,EAAU/4B,EwBqtB/B,GApCKtG,KAAK4P,SACN5P,KAAK4P,OAASwwB,KACdpgC,KAAKq0C,qBAAuBjU,MAK5BpgC,KAAKwwC,gBACLxwC,KAAKo0C,sBACLp0C,KAAK6zC,gBACL7zC,KAAK6zC,eAAejkC,QACpB5P,KAAK4zC,qCxB5rBIhkC,EwB6rBO5P,KAAK4P,OxB7rBJyvB,EwB6rBYr/B,KAAKwwC,exB7rBPlqC,EwB6rBuBtG,KAAK6zC,eAAejkC,OxB5rBlFwvB,GAAiBxvB,EAAOnG,EAAG41B,EAAS51B,EAAGnD,EAAOmD,GAC9C21B,GAAiBxvB,EAAOlG,EAAG21B,EAAS31B,EAAGpD,EAAOoD,IwBgsB7B1J,KAAK2zC,aACN33C,QAAQgE,KAAKmsC,cAEbnsC,KAAK4P,OAAS5P,KAAKszC,eAAetzC,KAAK6E,OAAO0+B,WAG9C8G,GAAYrqC,KAAK4P,OAAQ5P,KAAK6E,OAAO0+B,WAEzCxC,GAAc/gC,KAAK4P,OAAQ5P,KAAK2zC,cAMhCtJ,GAAYrqC,KAAK4P,OAAQ5P,KAAK6E,OAAO0+B,WAKrCvjC,KAAKk0C,+BAAgC,CACrCl0C,KAAKk0C,gCAAiC,EACtC,MAAML,EAAiB7zC,KAAKm0C,6BACxBN,GACA73C,QAAQ63C,EAAe1H,gBACnBnwC,QAAQgE,KAAKmsC,gBAChB0H,EAAe31C,QAAQu0C,cACxBoB,EAAejkC,QACY,IAA3B5P,KAAKuvC,mBACLvvC,KAAK6zC,eAAiBA,EACtB7zC,KAAK4zC,qCACL5zC,KAAKwwC,eAAiBpQ,KACtBpgC,KAAKo0C,qBAAuBhU,KAC5Bb,GAAqBv/B,KAAKo0C,qBAAsBp0C,KAAK4P,OAAQikC,EAAejkC,QAC5Ey6B,GAAYrqC,KAAKwwC,eAAgBxwC,KAAKo0C,uBAGtCp0C,KAAK6zC,eAAiB7zC,KAAKwwC,oBAAiBr3C,CAEpD,CAIA+zC,GAAoBE,sBA/DV,CA5BA,CA4Fd,CACA+G,0BAAAA,GACI,GAAKn0C,KAAKsG,SACNk6B,GAASxgC,KAAKsG,OAAOqI,gBACrB8xB,GAAezgC,KAAKsG,OAAOqI,cAG/B,OAAI3O,KAAKsG,OAAOguC,eACLt0C,KAAKsG,OAGLtG,KAAKsG,OAAO6tC,4BAE3B,CACAG,YAAAA,GACI,OAAOt4C,SAASgE,KAAKwwC,gBACjBxwC,KAAK2zC,aACL3zC,KAAK9B,QAAQ8yC,aACbhxC,KAAK6E,OACb,CACAoqC,cAAAA,GACI,IAAIh+B,EACJ,MAAMm6B,EAAOprC,KAAKg0C,UACZC,EAAWj4C,QAAQgE,KAAKmsC,eAAiBnsC,OAASorC,EACxD,IAAIrS,GAAU,EAuBd,IAlBI/4B,KAAK8tC,oBAA6C,QAAtB78B,EAAKjR,KAAKsG,cAA2B,IAAP2K,OAAgB,EAASA,EAAG68B,sBACtF/U,GAAU,GAMVkb,IACCj0C,KAAK+tC,yBAA2B/tC,KAAKguC,oBACtCjV,GAAU,GAMV/4B,KAAK8zC,2BAA6B7xC,GAAUf,YAC5C63B,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEl0B,EAAM,SAAEqB,GAAalG,KAAK9B,QAWlC,GANA8B,KAAK6tC,gBAAkB7xC,QAASgE,KAAKsG,QAAUtG,KAAKsG,OAAOunC,iBACvD7tC,KAAKgpC,kBACLhpC,KAAKu0C,kBACJv0C,KAAK6tC,kBACN7tC,KAAK2zC,YAAc3zC,KAAKwwC,oBAAiBr3C,IAExC6G,KAAK6E,SAAYA,IAAUqB,EAC5B,OAKJmkC,GAAYrqC,KAAKsyC,gBAAiBtyC,KAAK6E,OAAO0+B,WAI9C,MAAMiR,EAAiBx0C,KAAKqnC,UAAU59B,EAChCgrC,EAAiBz0C,KAAKqnC,UAAU39B,GlBvyBlD,SAAyBs3B,EAAKqG,EAAWqN,GAAsC,IAA5BC,EAAkB17C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjE,MAAM27C,EAAaF,EAASx7C,OAC5B,IAAK07C,EACD,OAGJ,IAAIz7B,EACAlY,EAFJomC,EAAU59B,EAAI49B,EAAU39B,EAAI,EAG5B,IAAK,IAAIrP,EAAI,EAAGA,EAAIu6C,EAAYv6C,IAAK,CACjC8e,EAAOu7B,EAASr6C,GAChB4G,EAAQkY,EAAKmuB,gBAKb,MAAMx/B,EAAWqR,EAAKrR,SAClBA,GACAA,EAASxL,OACkB,aAA3BwL,EAASxL,MAAMvE,UAGf48C,GACAx7B,EAAKjb,QAAQu0C,cACbt5B,EAAK+rB,QACL/rB,IAASA,EAAK3nB,MACdowC,GAAaZ,EAAK,CACdv3B,GAAI0P,EAAK+rB,OAAO9zB,OAAO3H,EACvBC,GAAIyP,EAAK+rB,OAAO9zB,OAAO1H,IAG3BzI,IAEAomC,EAAU59B,GAAKxI,EAAMwI,EAAEe,MACvB68B,EAAU39B,GAAKzI,EAAMyI,EAAEc,MAEvBu2B,GAAcC,EAAK//B,IAEnB0zC,GAAsB7lC,GAAaqK,EAAKxK,eACxCizB,GAAaZ,EAAK7nB,EAAKxK,cAE/B,CAKA04B,EAAU59B,EAAIw3B,GAAcoG,EAAU59B,GACtC49B,EAAU39B,EAAIu3B,GAAcoG,EAAU39B,EAC1C,CkB6vBYmrC,CAAgB70C,KAAKsyC,gBAAiBtyC,KAAKqnC,UAAWrnC,KAAKyvC,KAAMwE,IAK7D7I,EAAKvmC,QACJumC,EAAKx7B,QACgB,IAArB5P,KAAKqnC,UAAU59B,GAAgC,IAArBzJ,KAAKqnC,UAAU39B,IAC1C0hC,EAAKx7B,OAASw7B,EAAKvmC,OAAO0+B,UAC1B6H,EAAKiJ,qBAAuBjU,MAEhC,MAAM,OAAExwB,GAAWw7B,EACnB,IAAKx7B,EAWD,YALI5P,KAAK80C,sBACL90C,KAAKsnC,gBAAkBnH,KACvBngC,KAAK80C,oBAAsB,OAC3B90C,KAAKkrC,mBAIRlrC,KAAKsnC,kBACNtnC,KAAKsnC,gBAAkBnH,KACvBngC,KAAK+0C,6BAA+B5U,MAExC,MAAM6U,EAA0Bh1C,KAAK80C,oBAUrC3V,GAAan/B,KAAKsnC,gBAAiBtnC,KAAKsyC,gBAAiB1iC,EAAQ5P,KAAK2O,cACtE3O,KAAK80C,oBAAsBzI,GAAyBrsC,KAAKsnC,gBAAiBtnC,KAAKqnC,WAC3ErnC,KAAK80C,sBAAwBE,GAC7Bh1C,KAAKqnC,UAAU59B,IAAM+qC,GACrBx0C,KAAKqnC,UAAU39B,IAAM+qC,IACrBz0C,KAAKqvC,cAAe,EACpBrvC,KAAKkrC,iBACLlrC,KAAK0vC,gBAAgB,mBAAoB9/B,IAK7Cs9B,GAAoBG,wBACxB,CACApB,IAAAA,GACIjsC,KAAKsvC,WAAY,CAErB,CACA7D,IAAAA,GACIzrC,KAAKsvC,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlB+J,IAASh8C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAEpB,GADA+G,KAAK9B,QAAQgtC,gBAAkBlrC,KAAK9B,QAAQgtC,iBACxC+J,EAAW,CACX,MAAMrM,EAAQ5oC,KAAK6oC,WACnBD,GAASA,EAAMsC,gBACnB,CACIlrC,KAAKmsC,eAAiBnsC,KAAKmsC,aAAarkC,WACxC9H,KAAKmsC,kBAAehzC,EAE5B,CACA83C,kBAAAA,CAAmBhwC,GAA6C,IAAtC8vC,EAA4B93C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClD,MAAM2yC,EAAW5rC,KAAK4rC,SAChBsJ,EAAuBtJ,EACvBA,EAASj9B,aACT,CAAC,EACDwmC,EAAc,IAAKn1C,KAAK2O,cACxBglC,EAAcxT,KACfngC,KAAK6zC,gBACL7zC,KAAK6zC,eAAe31C,QAAQ8yC,aAC7BhxC,KAAKwwC,eAAiBxwC,KAAKo0C,0BAAuBj7C,GAEtD6G,KAAKk0C,gCAAkCnD,EACvC,MAAMqE,EAAiBhV,KAGjBiV,GAFiBzJ,EAAWA,EAAS/7B,YAAS1W,MAC/B6G,KAAK6E,OAAS7E,KAAK6E,OAAOgL,YAAS1W,GAElDyvC,EAAQ5oC,KAAK6oC,WACbyM,GAAgB1M,GAASA,EAAME,QAAQ5vC,QAAU,EACjDq8C,EAAyBv5C,QAAQq5C,IAClCC,IAC0B,IAA3Bt1C,KAAK9B,QAAQ8tC,YACZhsC,KAAKyvC,KAAKhsC,KAAK+xC,KAEpB,IAAIC,EADJz1C,KAAKuvC,kBAAoB,EAEzBvvC,KAAK01C,eAAkB1jC,IACnB,MAAM2R,EAAW3R,EAAS,IL56B1C,IAAmBkG,EAAGC,EK86CNjc,EAAQ/B,EAAMupB,EAAI9kB,EAjgBlB+2C,GAAahC,EAAYlqC,EAAGxI,EAAMwI,EAAGka,GACrCgyB,GAAahC,EAAYjqC,EAAGzI,EAAMyI,EAAGia,GACrC3jB,KAAK0zC,eAAeC,GAChB3zC,KAAKwwC,gBACLxwC,KAAKo0C,sBACLp0C,KAAK6E,QACL7E,KAAK6zC,gBACL7zC,KAAK6zC,eAAehvC,SACpB06B,GAAqB6V,EAAgBp1C,KAAK6E,OAAO0+B,UAAWvjC,KAAK6zC,eAAehvC,OAAO0+B,WAyf3FrnC,EAxfW8D,KAAKwwC,eAwfRr2C,EAxfwB6F,KAAKo0C,qBAwfvB1wB,EAxf6C0xB,EAwfzCx2C,EAxfyD+kB,EAyfvFiyB,GAAQ15C,EAAOuN,EAAGtP,EAAKsP,EAAGia,EAAGja,EAAG7K,GAChCg3C,GAAQ15C,EAAOwN,EAAGvP,EAAKuP,EAAGga,EAAGha,EAAG9K,GArfZ62C,IL37BLv9B,EK47BelY,KAAKwwC,eL57BjBr4B,EK47BiCs9B,EL37B3Cv9B,EAAEzO,EAAEjP,MAAQ2d,EAAE1O,EAAEjP,KACpB0d,EAAEzO,EAAE/O,MAAQyd,EAAE1O,EAAE/O,KAChBwd,EAAExO,EAAElP,MAAQ2d,EAAEzO,EAAElP,KAChB0d,EAAExO,EAAEhP,MAAQyd,EAAEzO,EAAEhP,OKy7BAsF,KAAK8tC,mBAAoB,GAExB2H,IACDA,EAAqBrV,MACzBiK,GAAYoL,EAAoBz1C,KAAKwwC,iBAErC6E,IACAr1C,KAAK6rC,gBAAkBsJ,ERl8B3C,SAAmBvlC,EAAQimC,EAAQzK,EAAMznB,EAAU4xB,EAAwBD,GACnEC,GACA3lC,EAAOlc,QAAUqhB,GAAI,OAEJ5b,IAAjBiyC,EAAK13C,QAAwB03C,EAAK13C,QAAU,EAAGs2C,GAAgBrmB,IAC/D/T,EAAOkmC,YAAc/gC,QAAuB5b,IAAnB08C,EAAOniD,QAAwBmiD,EAAOniD,QAAU,EAAG,EAAGw2C,GAAiBvmB,KAE3F2xB,IACL1lC,EAAOlc,QAAUqhB,QAAuB5b,IAAnB08C,EAAOniD,QAAwBmiD,EAAOniD,QAAU,OAAoByF,IAAjBiyC,EAAK13C,QAAwB03C,EAAK13C,QAAU,EAAGiwB,IAK3H,IAAK,IAAItpB,EAAI,EAAGA,EAAIsvC,GAAYtvC,IAAK,CACjC,MAAM07C,EAAc,SAAHrkD,OAAYg4C,GAAQrvC,GAAE,UACvC,IAAI27C,EAAelM,GAAU+L,EAAQE,GACjCE,EAAanM,GAAUsB,EAAM2K,QACZ58C,IAAjB68C,QAA6C78C,IAAf88C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACApM,GAAKmM,KAAkBnM,GAAKoM,IAE5BrmC,EAAOmmC,GAAex7C,KAAKG,IAAIqa,GAAI60B,GAASoM,GAAepM,GAASqM,GAAatyB,GAAW,IACxFvY,GAAQpC,KAAKitC,IAAe7qC,GAAQpC,KAAKgtC,MACzCpmC,EAAOmmC,IAAgB,MAI3BnmC,EAAOmmC,GAAeE,EAE9B,EAIIJ,EAAOzoC,QAAUg+B,EAAKh+B,UACtBwC,EAAOxC,OAAS2H,GAAI8gC,EAAOzoC,QAAU,EAAGg+B,EAAKh+B,QAAU,EAAGuW,GAElE,CQ25BoBuyB,CAAUf,EAAaD,EAAsBl1C,KAAK2O,aAAcgV,EAAU4xB,EAAwBD,IAEtGt1C,KAAKxO,KAAK2gD,2BACVnyC,KAAKkrC,iBACLlrC,KAAKuvC,kBAAoB5rB,CAAQ,EAErC3jB,KAAK01C,eAAe11C,KAAK9B,QAAQ8yC,WAAa,IAAO,EACzD,CACAha,cAAAA,CAAe94B,GACX8B,KAAK0vC,gBAAgB,kBACrB1vC,KAAKgpC,kBAAoBhpC,KAAKgpC,iBAAiB/b,OAC3CjtB,KAAKmsC,cAAgBnsC,KAAKmsC,aAAanD,kBACvChpC,KAAKmsC,aAAanD,iBAAiB/b,OAEnCjtB,KAAKu0C,mBACL99B,GAAYzW,KAAKu0C,kBACjBv0C,KAAKu0C,sBAAmBp7C,GAO5B6G,KAAKu0C,iBAAmB/9B,GAAMxP,QAAO,KACjC6/B,GAAsBC,wBAAyB,EAC/C9mC,KAAKgpC,iBIl+BrB,SAA4BlvC,EAAOiuB,EAAW7pB,GAC1C,MAAMi4C,EAAgB7sC,EAAcxP,GAASA,EAAQy9B,GAAYz9B,GAEjE,OADAq8C,EAAcn8C,MAAMy5B,GAAmB,GAAI0iB,EAAepuB,EAAW7pB,IAC9Di4C,EAAc5xC,SACzB,CJ89BwC6xC,CAAmB,EAp8BnC,IAo8BuD,IACxDl4C,EACHowB,SAAWtc,IACPhS,KAAK01C,eAAe1jC,GACpB9T,EAAQowB,UAAYpwB,EAAQowB,SAAStc,EAAO,EAEhDqc,WAAYA,KACRnwB,EAAQmwB,YAAcnwB,EAAQmwB,aAC9BruB,KAAKq2C,mBAAmB,IAG5Br2C,KAAKmsC,eACLnsC,KAAKmsC,aAAanD,iBAAmBhpC,KAAKgpC,kBAE9ChpC,KAAKu0C,sBAAmBp7C,CAAS,GAEzC,CACAk9C,iBAAAA,GACQr2C,KAAKmsC,eACLnsC,KAAKmsC,aAAanD,sBAAmB7vC,EACrC6G,KAAKmsC,aAAaR,qBAAkBxyC,GAExC,MAAMyvC,EAAQ5oC,KAAK6oC,WACnBD,GAASA,EAAMsD,wBACflsC,KAAKmsC,aACDnsC,KAAKgpC,iBACDhpC,KAAK6rC,qBACD1yC,EACZ6G,KAAK0vC,gBAAgB,oBACzB,CACAS,eAAAA,GACQnwC,KAAKgpC,mBACLhpC,KAAK01C,gBAAkB11C,KAAK01C,eAp+BpB,KAq+BR11C,KAAKgpC,iBAAiB/b,QAE1BjtB,KAAKq2C,mBACT,CACAC,uBAAAA,GACI,MAAMlL,EAAOprC,KAAKg0C,UAClB,IAAI,qBAAEK,EAAoB,OAAEzkC,EAAM,OAAE/K,EAAM,aAAE8J,GAAiBy8B,EAC7D,GAAKiJ,GAAyBzkC,GAAW/K,EAAzC,CAOA,GAAI7E,OAASorC,GACTprC,KAAK6E,QACLA,GACA0xC,GAA0Bv2C,KAAK9B,QAAQs4C,cAAex2C,KAAK6E,OAAO0+B,UAAW1+B,EAAO0+B,WAAY,CAChG3zB,EAAS5P,KAAK4P,QAAUwwB,KACxB,MAAMqW,EAAU7X,GAAW5+B,KAAK6E,OAAO0+B,UAAU95B,GACjDmG,EAAOnG,EAAEjP,IAAM4wC,EAAKx7B,OAAOnG,EAAEjP,IAC7BoV,EAAOnG,EAAE/O,IAAMkV,EAAOnG,EAAEjP,IAAMi8C,EAC9B,MAAMC,EAAU9X,GAAW5+B,KAAK6E,OAAO0+B,UAAU75B,GACjDkG,EAAOlG,EAAElP,IAAM4wC,EAAKx7B,OAAOlG,EAAElP,IAC7BoV,EAAOlG,EAAEhP,IAAMkV,EAAOlG,EAAElP,IAAMk8C,CAClC,CACArM,GAAYgK,EAAsBzkC,GAMlCgyB,GAAayS,EAAsB1lC,GAOnCwwB,GAAan/B,KAAK+0C,6BAA8B/0C,KAAKsyC,gBAAiB+B,EAAsB1lC,EA/BlF,CAgCd,CACAyhC,kBAAAA,CAAmBlqC,EAAUiT,GACpBnZ,KAAKwvC,YAAYlvC,IAAI4F,IACtBlG,KAAKwvC,YAAY5mC,IAAI1C,EAAU,IAAI+kC,IAEzBjrC,KAAKwvC,YAAY9mC,IAAIxC,GAC7B9F,IAAI+Y,GACV,MAAM9D,EAAS8D,EAAKjb,QAAQy4C,uBAC5Bx9B,EAAKuvB,QAAQ,CACTr0C,WAAYghB,EAASA,EAAOhhB,gBAAa8E,EACzCqyC,sBAAuBn2B,GAAUA,EAAOuhC,4BAClCvhC,EAAOuhC,4BAA4Bz9B,QACnChgB,GAEd,CACA8vC,MAAAA,GACI,MAAML,EAAQ5oC,KAAK6oC,WACnB,OAAOD,GAAQA,EAAMwC,OAASprC,IAClC,CACAg0C,OAAAA,GACI,IAAI/iC,EACJ,MAAM,SAAE/K,GAAalG,KAAK9B,QAC1B,OAAOgI,IAAuC,QAA1B+K,EAAKjR,KAAK6oC,kBAA+B,IAAP53B,OAAgB,EAASA,EAAGm6B,OAAgBprC,IACtG,CACA62C,WAAAA,GACI,IAAI5lC,EACJ,MAAM,SAAE/K,GAAalG,KAAK9B,QAC1B,OAAOgI,EAAsC,QAA1B+K,EAAKjR,KAAK6oC,kBAA+B,IAAP53B,OAAgB,EAASA,EAAGk6B,cAAWhyC,CAChG,CACA0vC,QAAAA,GACI,MAAM,SAAE3iC,GAAalG,KAAK9B,QAC1B,GAAIgI,EACA,OAAOlG,KAAKxO,KAAKg+C,YAAY9mC,IAAIxC,EACzC,CACAwiC,OAAAA,GAAiE,IAAzD,WAAE0F,EAAU,WAAE/5C,EAAU,sBAAEm3C,GAAwBvyC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAM2vC,EAAQ5oC,KAAK6oC,WACfD,GACAA,EAAMF,QAAQ1oC,KAAMwrC,GACpB4C,IACApuC,KAAKsnC,qBAAkBnuC,EACvB6G,KAAKouC,YAAa,GAElB/5C,GACA2L,KAAKsoC,WAAW,CAAEj0C,cAC1B,CACAs0C,QAAAA,GACI,MAAMC,EAAQ5oC,KAAK6oC,WACnB,QAAID,GACOA,EAAMD,SAAS3oC,KAK9B,CACAuxC,aAAAA,GACI,MAAM,cAAElrC,GAAkBrG,KAAK9B,QAC/B,IAAKmI,EACD,OAEJ,IAAIywC,GAAY,EAKhB,MAAM,aAAEnoC,GAAiBtI,EAQzB,IAPIsI,EAAavB,QACbuB,EAAatB,SACbsB,EAAarB,SACbqB,EAAapB,WACbupC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAI18C,EAAI,EAAGA,EAAI0yC,GAAc7zC,OAAQmB,IAAK,CAC3C,MAAMgC,EAAM,SAAW0wC,GAAc1yC,GAEjCsU,EAAatS,KACb06C,EAAY16C,GAAOsS,EAAatS,GAChCgK,EAAc2wC,eAAe36C,EAAK,GAE1C,CAGAgK,EAAcgB,SAEd,IAAK,MAAMhL,KAAO06C,EACd1wC,EAAc2wC,eAAe36C,EAAK06C,EAAY16C,IAIlDgK,EAAc6kC,gBAClB,CACAv3B,mBAAAA,CAAoBF,GAChB,IAAIxC,EAAI2U,EACR,IAAK5lB,KAAK8H,UAAY9H,KAAKmuC,MACvB,OACJ,IAAKnuC,KAAKsvC,UACN,OAAOtC,GAEX,MAAM17C,EAAS,CACX27C,WAAY,IAEVr+B,EAAoB5O,KAAKwxC,uBAC/B,GAAIxxC,KAAKouC,WAQL,OAPApuC,KAAKouC,YAAa,EAClB98C,EAAOoC,QAAU,GACjBpC,EAAO2lD,cACH/hC,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUwjC,gBAAkB,GACzG3lD,EAAO6Y,UAAYyE,EACbA,EAAkB5O,KAAK2O,aAAc,IACrC,OACCrd,EAEX,MAAM85C,EAAOprC,KAAKg0C,UAClB,IAAKh0C,KAAKsnC,kBAAoBtnC,KAAK6E,SAAWumC,EAAKx7B,OAAQ,CACvD,MAAMsnC,EAAc,CAAC,EAerB,OAdIl3C,KAAK9B,QAAQgI,WACbgxC,EAAYxjD,aACsByF,IAA9B6G,KAAK2O,aAAajb,QACZsM,KAAK2O,aAAajb,QAClB,EACVwjD,EAAYD,cACR/hC,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUwjC,gBAAkB,IAEzGj3C,KAAKqvC,eAAiBvgC,GAAa9O,KAAK2O,gBACxCuoC,EAAY/sC,UAAYyE,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN5O,KAAKqvC,cAAe,GAEjB6H,CACX,CACA,MAAMC,EAAiB/L,EAAKS,iBAAmBT,EAAKz8B,aACpD3O,KAAKs2C,0BACLhlD,EAAO6Y,UAAYkiC,GAAyBrsC,KAAK+0C,6BAA8B/0C,KAAKqnC,UAAW8P,GAC3FvoC,IACAtd,EAAO6Y,UAAYyE,EAAkBuoC,EAAgB7lD,EAAO6Y,YAEhE,MAAM,EAAEV,EAAC,EAAEC,GAAM1J,KAAKsnC,gBACtBh2C,EAAOud,gBAAkB,GAAHnd,OAAiB,IAAX+X,EAAE0H,OAAY,MAAAzf,OAAgB,IAAXgY,EAAEyH,OAAY,OACzDi6B,EAAKS,gBAKLv6C,EAAOoC,QACH03C,IAASprC,KACiG,QAAnG4lB,EAAuC,QAAjC3U,EAAKkmC,EAAezjD,eAA4B,IAAPud,EAAgBA,EAAKjR,KAAK2O,aAAajb,eAA4B,IAAPkyB,EAAgBA,EAAK,EACjI5lB,KAAK2rC,gBACD3rC,KAAK2O,aAAajb,QAClByjD,EAAerB,YAO7BxkD,EAAOoC,QACH03C,IAASprC,UACwB7G,IAA3Bg+C,EAAezjD,QACXyjD,EAAezjD,QACf,QAC2ByF,IAA/Bg+C,EAAerB,YACXqB,EAAerB,YACf,EAKlB,IAAK,MAAMz5C,KAAO4M,EAAiB,CAC/B,QAA4B9P,IAAxBg+C,EAAe96C,GACf,SACJ,MAAM,QAAE8qC,EAAO,QAAEqC,GAAYvgC,EAAgB5M,GAOvC+6C,EAAiC,SAArB9lD,EAAO6Y,UACnBgtC,EAAe96C,GACf8qC,EAAQgQ,EAAe96C,GAAM+uC,GACnC,GAAI5B,EAAS,CACT,MAAM6N,EAAM7N,EAAQtwC,OACpB,IAAK,IAAImB,EAAI,EAAGA,EAAIg9C,EAAKh9C,IACrB/I,EAAOk4C,EAAQnvC,IAAM+8C,CAE7B,MAEI9lD,EAAO+K,GAAO+6C,CAEtB,CAYA,OANIp3C,KAAK9B,QAAQgI,WACb5U,EAAO2lD,cACH7L,IAASprC,KACHkV,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUwjC,gBAAkB,GACrG,QAEP3lD,CACX,CACA2gD,aAAAA,GACIjyC,KAAK0rC,WAAa1rC,KAAK4rC,cAAWzyC,CACtC,CAEAm+C,SAAAA,GACIt3C,KAAKxO,KAAKs9C,MAAMvxC,SAAS4b,IAAW,IAAIlI,EAAI,OAAwC,QAAhCA,EAAKkI,EAAK6vB,wBAAqC,IAAP/3B,OAAgB,EAASA,EAAGgc,MAAM,IAC9HjtB,KAAKxO,KAAKs9C,MAAMvxC,QAAQq0C,IACxB5xC,KAAKxO,KAAKg+C,YAAY9uC,OAC1B,EAER,CACA,SAAS0lC,GAAajtB,GAClBA,EAAKitB,cACT,CACA,SAAS2L,GAAmB54B,GACxB,IAAIlI,EACJ,MAAM26B,GAAuC,QAA1B36B,EAAKkI,EAAKuyB,kBAA+B,IAAPz6B,OAAgB,EAASA,EAAG26B,WAAazyB,EAAKyyB,SACnG,GAAIzyB,EAAK8vB,UACL9vB,EAAKtU,QACL+mC,GACAzyB,EAAK02B,aAAa,aAAc,CAChC,MAAQtM,UAAW1+B,EAAQsuC,YAAaoE,GAAmBp+B,EAAKtU,QAC1D,cAAE2xC,GAAkBr9B,EAAKjb,QACzB+1C,EAAWrI,EAAS/7B,SAAWsJ,EAAKtU,OAAOgL,OAG3B,SAAlB2mC,EACAnW,IAAUxB,IACN,MAAM2Y,EAAevD,EACfrI,EAASuH,YAAYtU,GACrB+M,EAASrI,UAAU1E,GACnB3lC,EAAS0lC,GAAW4Y,GAC1BA,EAAah9C,IAAMqK,EAAOg6B,GAAMrkC,IAChCg9C,EAAa98C,IAAM88C,EAAah9C,IAAMtB,CAAM,IAG3Cq9C,GAA0BC,EAAe5K,EAASrI,UAAW1+B,IAClEw7B,IAAUxB,IACN,MAAM2Y,EAAevD,EACfrI,EAASuH,YAAYtU,GACrB+M,EAASrI,UAAU1E,GACnB3lC,EAAS0lC,GAAW/5B,EAAOg6B,IACjC2Y,EAAa98C,IAAM88C,EAAah9C,IAAMtB,EAIlCigB,EAAKq3B,iBAAmBr3B,EAAK6vB,mBAC7B7vB,EAAK20B,mBAAoB,EACzB30B,EAAKq3B,eAAe3R,GAAMnkC,IACtBye,EAAKq3B,eAAe3R,GAAMrkC,IAAMtB,EACxC,IAGR,MAAMu+C,EAActX,KACpBhB,GAAasY,EAAa5yC,EAAQ+mC,EAASrI,WAC3C,MAAMmU,EAAcvX,KAChB8T,EACA9U,GAAauY,EAAav+B,EAAKm6B,eAAeiE,GAAgB,GAAO3L,EAASuH,aAG9EhU,GAAauY,EAAa7yC,EAAQ+mC,EAASrI,WAE/C,MAAMoD,GAAoBmE,GAAY2M,GACtC,IAAIpH,GAA2B,EAC/B,IAAKl3B,EAAKuyB,WAAY,CAClB,MAAMmI,EAAiB16B,EAAKg7B,6BAK5B,GAAIN,IAAmBA,EAAenI,WAAY,CAC9C,MAAQE,SAAU+L,EAAgB9yC,OAAQ+yC,GAAiB/D,EAC3D,GAAI8D,GAAkBC,EAAc,CAChC,MAAMC,EAAmBzX,KACzBb,GAAqBsY,EAAkBjM,EAASrI,UAAWoU,EAAepU,WAC1E,MAAM6R,EAAiBhV,KACvBb,GAAqB6V,EAAgBvwC,EAAQ+yC,EAAarU,WACrDwH,GAAiB8M,EAAkBzC,KACpC/E,GAA2B,GAE3BwD,EAAe31C,QAAQ8yC,aACvB73B,EAAKq3B,eAAiB4E,EACtBj8B,EAAKi7B,qBAAuByD,EAC5B1+B,EAAK06B,eAAiBA,EAE9B,CACJ,CACJ,CACA16B,EAAKu2B,gBAAgB,YAAa,CAC9B7qC,SACA+mC,WACA3qC,MAAOy2C,EACPD,cACA9Q,mBACA0J,4BAER,MACK,GAAIl3B,EAAK8vB,SAAU,CACpB,MAAM,eAAE3M,GAAmBnjB,EAAKjb,QAChCo+B,GAAkBA,GACtB,CAMAnjB,EAAKjb,QAAQ7J,gBAAa8E,CAC9B,CACA,SAAS41C,GAAoB51B,GAIzB+zB,GAAoBC,aACfh0B,EAAK7S,SAQL6S,EAAKm7B,iBACNn7B,EAAK20B,kBAAoB30B,EAAK7S,OAAOwnC,mBAOzC30B,EAAK40B,0BAA4B50B,EAAK40B,wBAA0B/xC,QAAQmd,EAAK20B,mBACzE30B,EAAK7S,OAAOwnC,mBACZ30B,EAAK7S,OAAOynC,0BAChB50B,EAAK60B,mBAAqB70B,EAAK60B,iBAAmB70B,EAAK7S,OAAO0nC,kBAClE,CACA,SAASkB,GAAgB/1B,GACrBA,EAAK20B,kBACD30B,EAAK40B,wBACD50B,EAAK60B,kBACD,CAChB,CACA,SAASiE,GAAc94B,GACnBA,EAAK84B,eACT,CACA,SAASL,GAAkBz4B,GACvBA,EAAKy4B,mBACT,CACA,SAASC,GAAmB14B,GACxBA,EAAK4yB,eAAgB,CACzB,CACA,SAAS+F,GAAoB34B,GACzB,MAAM,cAAE9S,GAAkB8S,EAAKjb,QAC3BmI,GAAiBA,EAAcqT,WAAWo+B,uBAC1CzxC,EAAc+uB,OAAO,uBAEzBjc,EAAKw0B,gBACT,CACA,SAASwC,GAAgBh3B,GACrBA,EAAKg3B,kBACLh3B,EAAKw6B,YAAcx6B,EAAKq3B,eAAiBr3B,EAAKvJ,YAASzW,EACvDggB,EAAK20B,mBAAoB,CAC7B,CACA,SAASkB,GAAmB71B,GACxBA,EAAK61B,oBACT,CACA,SAASC,GAAe91B,GACpBA,EAAK81B,gBACT,CACA,SAASsC,GAAcp4B,GACnBA,EAAKo4B,eACT,CACA,SAASW,GAAoBtJ,GACzBA,EAAMwD,oBACV,CACA,SAASuJ,GAAaz5C,EAAQ+E,EAAOrC,GACjC1C,EAAOgjC,UAAYnqB,GAAI9T,EAAMi+B,UAAW,EAAGtgC,GAC3C1C,EAAOsO,MAAQuK,GAAI9T,EAAMuJ,MAAO,EAAG5L,GACnC1C,EAAOiV,OAASlQ,EAAMkQ,OACtBjV,EAAO+iC,YAAch+B,EAAMg+B,WAC/B,CACA,SAAS2W,GAAQ15C,EAAQ/B,EAAMupB,EAAI9kB,GAC/B1C,EAAO1B,IAAMua,GAAI5a,EAAKK,IAAKkpB,EAAGlpB,IAAKoE,GACnC1C,EAAOxB,IAAMqa,GAAI5a,EAAKO,IAAKgpB,EAAGhpB,IAAKkE,EACvC,CAKA,SAAS42C,GAAoBr8B,GACzB,OAAQA,EAAK0yB,sBAAwD1yC,IAArCggB,EAAK0yB,gBAAgBiK,WACzD,CACA,MAAMpF,GAA0B,CAC5Bl8C,SAAU,IACVirB,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBs4B,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,UAAUv4C,cAAcoJ,SAASivC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEx9C,KAAKmQ,MACL4L,GACN,SAAS48B,GAAUrU,GAEfA,EAAKrkC,IAAM29C,GAAWtZ,EAAKrkC,KAC3BqkC,EAAKnkC,IAAMy9C,GAAWtZ,EAAKnkC,IAC/B,CAKA,SAAS67C,GAA0BC,EAAe5K,EAAU/mC,GACxD,MAA0B,aAAlB2xC,GACe,oBAAlBA,IACI1X,GAAOkM,GAAYY,GAAWZ,GAAYnmC,GAAS,GAChE,CKr9CA,MAAMuzC,GAAyB9K,GAAqB,CAChDC,qBAAsBA,CAACr3C,EAAKk/B,IAAWle,GAAYhhB,EAAK,SAAUk/B,GAClEqY,cAAeA,KAAA,CACXhkC,EAAGvK,SAASm5C,gBAAgBC,YAAcp5C,SAASq5C,KAAKD,WACxD5uC,EAAGxK,SAASm5C,gBAAgBG,WAAat5C,SAASq5C,KAAKC,YAE3D9K,kBAAmBA,KAAM,ICNvB1I,GAAqB,CACvBn+B,aAAS1N,GAEPs/C,GAAqBnL,GAAqB,CAC5CG,cAAgB3lC,IAAQ,CACpB2B,EAAG3B,EAASwwC,WACZ5uC,EAAG5B,EAAS0wC,YAEhBhL,cAAeA,KACX,IAAKxI,GAAmBn+B,QAAS,CAC7B,MAAM6xC,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa3wC,MAAMb,QACnBwxC,EAAapQ,WAAW,CAAEmK,cAAc,IACxCzN,GAAmBn+B,QAAU6xC,CACjC,CACA,OAAO1T,GAAmBn+B,OAAO,EAErC8mC,eAAgBA,CAAC7lC,EAAUhO,KACvBgO,EAASxL,MAAM6N,eAAsBhR,IAAVW,EAAsBA,EAAQ,MAAM,EAEnE4zC,kBAAoB5lC,GAAa9L,QAAuD,UAA/CkL,OAAOyxC,iBAAiB7wC,GAAU8wC,YClBzEn0C,GAAO,CACTE,IAAK,CACDuU,QrBKR,cAAyBA,GACrBnZ,WAAAA,GACIub,SAASriB,WACT+G,KAAK64C,0BAA4BviC,EACrC,CACAwiC,aAAAA,CAAcC,GACV/4C,KAAKg5C,QAAU,IAAIrc,GAAWoc,EAAkB/4C,KAAKi5C,oBAAqB,CACtEt6C,mBAAoBqB,KAAKmZ,KAAK4qB,wBAC9BlH,cAAeoF,GAAiBjiC,KAAKmZ,OAE7C,CACA8/B,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAar5C,KAAKmZ,KAAKO,WACrE,MAAO,CACHykB,eAAgByI,GAAasS,GAC7Bzb,QAASmJ,GAAauS,GACtBzb,OAAQ0b,EACRtb,MAAOA,CAACjkC,EAAO4f,YACJzZ,KAAKg5C,QACRK,GACA7iC,GAAMxP,QAAO,IAAMqyC,EAASx/C,EAAO4f,IACvC,EAGZ,CACA1R,KAAAA,GACI/H,KAAK64C,0BAA4B7gC,GAAgBhY,KAAKmZ,KAAKtS,QAAS,eAAgBhN,GAAUmG,KAAK84C,cAAcj/C,IACrH,CACAmN,MAAAA,GACIhH,KAAKg5C,SAAWh5C,KAAKg5C,QAAQ3a,eAAer+B,KAAKi5C,oBACrD,CACAjxC,OAAAA,GACIhI,KAAK64C,4BACL74C,KAAKg5C,SAAWh5C,KAAKg5C,QAAQ/+C,KACjC,IqBrCAwK,KAAM,CACFyU,QCNR,cAA0BA,GACtBnZ,WAAAA,CAAYoZ,GACRmC,MAAMnC,GACNnZ,KAAKs5C,oBAAsBhjC,GAC3BtW,KAAKo+B,gBAAkB9nB,GACvBtW,KAAKmwB,SAAW,IAAIkS,GAA0BlpB,EAClD,CACApR,KAAAA,GAGI,MAAM,aAAEwxC,GAAiBv5C,KAAKmZ,KAAKO,WAC/B6/B,IACAv5C,KAAKs5C,oBAAsBC,EAAapd,UAAUn8B,KAAKmwB,WAE3DnwB,KAAKo+B,gBAAkBp+B,KAAKmwB,SAASkW,gBAAkB/vB,EAC3D,CACAtO,OAAAA,GACIhI,KAAKs5C,sBACLt5C,KAAKo+B,iBACT,GDZIob,eAAgBf,GAChBzyC,cAAaA,KECfyzC,GAAwB,uDAQ9B,MAAMC,GAAW,EACjB,SAASC,GAAiB9yC,EAAS2M,GAAoB,IAAXo5B,EAAK3zC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAChD0lB,GAAUiuB,GAAS8M,GAAU,yDAAFhoD,OAA2DmV,EAAO,yDAC7F,MAAOkD,EAAO6vC,GAVlB,SAA0B/yC,GACtB,MAAM6b,EAAQ+2B,GAAsBI,KAAKhzC,GACzC,IAAK6b,EACD,MAAO,CAAC,GACZ,MAAO,CAAE3Y,EAAO6vC,GAAYl3B,EAC5B,MAAO,CAAC3Y,EAAO6vC,EACnB,CAI8BE,CAAiBjzC,GAE3C,IAAKkD,EACD,OAEJ,MAAMoM,EAAWjP,OAAOyxC,iBAAiBnlC,GAASumC,iBAAiBhwC,GACnE,GAAIoM,EAAU,CACV,MAAM6jC,EAAU7jC,EAAS3G,OACzB,OAAOulB,GAAkBilB,GAAWzvC,WAAWyvC,GAAWA,CAC9D,CACK,OAAI/vC,EAAmB2vC,GAEjBD,GAAiBC,EAAUpmC,EAASo5B,EAAQ,GAG5CgN,CAEf,CCjCA,MAAMK,GAAiB,IAAI95C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEE+5C,GAAmB79C,GAAQ49C,GAAe35C,IAAIjE,GAI9C89C,GAAiBj3C,GAAMA,IAAMmH,GAAUnH,IAAMmI,GAC7C+uC,GAAmBA,CAACC,EAAQC,IAAQ/vC,WAAW8vC,EAAOnvC,MAAM,MAAMovC,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKloD,KAAoB,IAAlB,UAAE2X,GAAW3X,EAChE,GAAkB,SAAd2X,IAAyBA,EACzB,OAAO,EACX,MAAMwwC,EAAWxwC,EAAUuY,MAAM,sBACjC,GAAIi4B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASlwC,EAAUuY,MAAM,oBAC/B,OAAI23B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIz6C,IAAI,CAAC,IAAK,IAAK,MACnC06C,GAAgC3xC,EAAmBnN,QAAQM,IAASu+C,GAAct6C,IAAIjE,KAe5F,MAAMy+C,GAAmB,CAErBzuC,MAAOA,CAAApY,EAAAgB,KAAA,IAAC,EAAEwU,GAAGxV,GAAE,YAAE8Y,EAAc,IAAG,aAAEF,EAAe,KAAK5X,EAAA,OAAKwU,EAAE/O,IAAM+O,EAAEjP,IAAM+P,WAAWwC,GAAexC,WAAWsC,EAAa,EAC/HtZ,OAAQA,CAAAwC,EAAAglD,KAAA,IAAC,EAAErxC,GAAG3T,GAAE,WAAE6W,EAAa,IAAG,cAAEE,EAAgB,KAAKiuC,EAAA,OAAKrxC,EAAEhP,IAAMgP,EAAElP,IAAM+P,WAAWqC,GAAcrC,WAAWuC,EAAc,EAChIN,IAAKA,CAACkuC,EAAKM,KAAA,IAAE,IAAExuC,GAAKwuC,EAAA,OAAKzwC,WAAWiC,EAAI,EACxCG,KAAMA,CAAC+tC,EAAKO,KAAA,IAAE,KAAEtuC,GAAMsuC,EAAA,OAAK1wC,WAAWoC,EAAK,EAC3CD,OAAQA,CAAAwuC,EAAAC,KAAA,IAAC,EAAEzxC,GAAGwxC,GAAE,IAAE1uC,GAAK2uC,EAAA,OAAK5wC,WAAWiC,IAAQ9C,EAAEhP,IAAMgP,EAAElP,IAAI,EAC7DiS,MAAOA,CAAA2uC,EAAAC,KAAA,IAAC,EAAE5xC,GAAG2xC,GAAE,KAAEzuC,GAAM0uC,EAAA,OAAK9wC,WAAWoC,IAASlD,EAAE/O,IAAM+O,EAAEjP,IAAI,EAE9DiP,EAAG8wC,GAAuB,EAAG,IAC7B7wC,EAAG6wC,GAAuB,EAAG,KAGjCO,GAAiB/sC,WAAa+sC,GAAiBrxC,EAC/CqxC,GAAiB9sC,WAAa8sC,GAAiBpxC,EAC/C,MA6BM4xC,GAAmC,SAACj1C,EAAeuJ,GAA4C,IAApCuB,EAAMlY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGmd,EAAand,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3F2W,EAAS,IAAKA,GACdwG,EAAgB,IAAKA,GACrB,MAAMmlC,EAAuBt+C,OAAOC,KAAK0S,GAAQ7T,OAAOm+C,IAGxD,IAAIsB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBh+C,SAASlB,IAC1B,MAAMvC,EAAQuM,EAAczI,SAASvB,GACrC,IAAKgK,EAAcwxB,SAASx7B,GACxB,OACJ,IAAIlC,EAAOgX,EAAO9U,GACds/C,EAAWjkB,GAAuBv9B,GACtC,MAAMupB,EAAK9T,EAAOvT,GAClB,IAAIu/C,EAKJ,GAAI/mC,GAAkB6O,GAAK,CACvB,MAAMm4B,EAAen4B,EAAGxqB,OAClB4iD,EAAsB,OAAVp4B,EAAG,GAAc,EAAI,EACvCvpB,EAAOupB,EAAGo4B,GACVH,EAAWjkB,GAAuBv9B,GAClC,IAAK,IAAIE,EAAIyhD,EAAWzhD,EAAIwhD,GAKV,OAAVn4B,EAAGrpB,GAL+BA,IAOjCuhD,EAMDj9B,GAAU+Y,GAAuBhU,EAAGrpB,MAAQuhD,EAAQ,2CALpDA,EAASlkB,GAAuBhU,EAAGrpB,IACnCskB,GAAUi9B,IAAWD,GAChBxB,GAAcwB,IAAaxB,GAAcyB,GAAU,gEAMpE,MAEIA,EAASlkB,GAAuBhU,GAEpC,GAAIi4B,IAAaC,EAGb,GAAIzB,GAAcwB,IAAaxB,GAAcyB,GAAS,CAClD,MAAM/0C,EAAU/M,EAAM4O,MACC,kBAAZ7B,GACP/M,EAAM8O,IAAI2B,WAAW1D,IAEP,kBAAP6c,EACP9T,EAAOvT,GAAOkO,WAAWmZ,GAEpBxpB,MAAMiJ,QAAQugB,IAAOk4B,IAAWvwC,KACrCuE,EAAOvT,GAAOqnB,EAAG3oB,IAAIwP,YAE7B,MACuB,OAAboxC,QAAkC,IAAbA,OAAsB,EAASA,EAASxxC,aACvD,OAAXyxC,QAA8B,IAAXA,OAAoB,EAASA,EAAOzxC,aAC9C,IAAThQ,GAAqB,IAAPupB,GAGF,IAATvpB,EACAL,EAAM8O,IAAIgzC,EAAOzxC,UAAUhQ,IAG3ByV,EAAOvT,GAAOs/C,EAASxxC,UAAUuZ,IAMhC+3B,IACDD,EAvIpB,SAAyCn1C,GACrC,MAAM01C,EAAoB,GAW1B,OAVAlB,GAA8Bt9C,SAASlB,IACnC,MAAMvC,EAAQuM,EAAczI,SAASvB,QACvBlD,IAAVW,IACAiiD,EAAkB3/C,KAAK,CAACC,EAAKvC,EAAM4O,QACnC5O,EAAM8O,IAAIvM,EAAIgN,WAAW,SAAW,EAAI,GAC5C,IAGA0yC,EAAkB7iD,QAClBmN,EAAcgB,SACX00C,CACX,CA2HwBC,CAAgC31C,GACpCo1C,GAAsC,GAE1CC,EAAqBt/C,KAAKC,GAC1B+Z,EAAc/Z,QACalD,IAAvBid,EAAc/Z,GACR+Z,EAAc/Z,GACduT,EAAOvT,GACjBvC,EAAMg9B,KAAKpT,GAEnB,IAEAg4B,EAAqBxiD,OAAQ,CAC7B,MAAM+iD,EAAUP,EAAqBzgD,QAAQ,WAAa,EACpDiM,OAAOg1C,YACP,KACAC,EA3HmBC,EAACxsC,EAAQvJ,EAAeg2C,KACrD,MAAMC,EAAaj2C,EAAcw7B,qBAC3BruB,EAAUnN,EAAcQ,QACxB01C,EAAuB5D,iBAAiBnlC,IACxC,QAAEzb,GAAYwkD,EACdprC,EAAS,CAAC,EAGA,SAAZpZ,GACAsO,EAAc2wC,eAAe,UAAWpnC,EAAO7X,SAAW,SAK9DskD,EAAY9+C,SAASlB,IACjB8U,EAAO9U,GAAOy+C,GAAiBz+C,GAAKigD,EAAYC,EAAqB,IAGzEl2C,EAAcgB,SACd,MAAMm1C,EAAan2C,EAAcw7B,qBAQjC,OAPAwa,EAAY9+C,SAASlB,IAGjB,MAAMvC,EAAQuM,EAAczI,SAASvB,GACrCvC,GAASA,EAAMg9B,KAAK3lB,EAAO9U,IAC3BuT,EAAOvT,GAAOy+C,GAAiBz+C,GAAKmgD,EAAYD,EAAqB,IAElE3sC,CAAM,EAgGewsC,CAAyBxsC,EAAQvJ,EAAeq1C,GAaxE,OAXIF,EAAuBtiD,QACvBsiD,EAAuBj+C,SAAQk/C,IAAkB,IAAhBpgD,EAAKvC,GAAM2iD,EACxCp2C,EAAczI,SAASvB,GAAKuM,IAAI9O,EAAM,IAI9CuM,EAAcgB,SAEVpI,GAAyB,OAAZg9C,GACb/0C,OAAOw1C,SAAS,CAAElwC,IAAKyvC,IAEpB,CAAErsC,OAAQusC,EAAiB/lC,gBACtC,CAEI,MAAO,CAAExG,SAAQwG,gBAEzB,EAQA,SAASumC,GAAet2C,EAAeuJ,EAAQuB,EAAQiF,GACnD,MA3MsBxG,IACf3S,OAAOC,KAAK0S,GAAQnM,KAAKy2C,IA0MzB0C,CAAiBhtC,GAClB0rC,GAAiCj1C,EAAeuJ,EAAQuB,EAAQiF,GAChE,CAAExG,SAAQwG,gBACpB,CC5NA,MAAMymC,GAAkBA,CAACx2C,EAAeuJ,EAAQuB,EAAQiF,KACpD,MAAMD,EFuCV,SAA6B9P,EAAa7T,EAAiB4jB,GAAe,OAAzBxG,GAAQpd,EACrD,MAAMghB,EAAUnN,EAAcQ,QAC9B,KAAM2M,aAAmBod,SACrB,MAAO,CAAEhhB,SAAQwG,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzB/P,EAAc3J,OAAOa,SAASzD,IAC1B,MAAM+M,EAAU/M,EAAM4O,MACtB,IAAKuB,EAAmBpD,GACpB,OACJ,MAAMsP,EAAWwjC,GAAiB9yC,EAAS2M,GACvC2C,GACArc,EAAM8O,IAAIuN,EAAS,IAI3B,IAAK,MAAM9Z,KAAOuT,EAAQ,CACtB,MAAM/I,EAAU+I,EAAOvT,GACvB,IAAK4N,EAAmBpD,GACpB,SACJ,MAAMsP,EAAWwjC,GAAiB9yC,EAAS2M,GACtC2C,IAGLvG,EAAOvT,GAAO8Z,EACTC,IACDA,EAAgB,CAAC,QAIMjd,IAAvBid,EAAc/Z,KACd+Z,EAAc/Z,GAAOwK,GAE7B,CACA,MAAO,CAAE+I,SAAQwG,gBACrB,CE9EqB0mC,CAAoBz2C,EAAeuJ,EAAQwG,GAG5D,OAAOumC,GAAet2C,EAFtBuJ,EAASuG,EAASvG,OAE2BuB,EAD7CiF,EAAgBD,EAASC,cAC0C,ECVjE2mC,GAAuB,CAAEl2C,QAAS,MAClCm2C,GAA2B,CAAEn2C,SAAS,GCF5C,MAAMo2C,GAAqB,IAAI9iC,QCoBzB+iC,GAAejgD,OAAOC,KAAK4H,GAC3Bq4C,GAAcD,GAAahkD,OAC3BkkD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB/5C,EAAapK,OAKrC,MAAMokD,GACFv9C,WAAAA,CAAWvN,GAAsF,IAArF,OAAE8T,EAAM,MAAEjV,EAAK,gBAAEmV,EAAe,oBAAEC,EAAmB,YAAEL,GAAc5T,EAAE0L,EAAOjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAK1F+G,KAAK6G,QAAU,KAIf7G,KAAKvI,SAAW,IAAI0I,IAIpBH,KAAK0D,eAAgB,EACrB1D,KAAKuD,uBAAwB,EAQ7BvD,KAAKg5B,mBAAqB,KAM1Bh5B,KAAKtD,OAAS,IAAI+L,IAIlBzI,KAAK2F,SAAW,CAAC,EAKjB3F,KAAKu9C,mBAAqB,IAAI90C,IAM9BzI,KAAKw9C,iBAAmB,CAAC,EAIzBx9C,KAAK41B,OAAS,CAAC,EAMf51B,KAAKy9C,uBAAyB,CAAC,EAC/Bz9C,KAAK09C,aAAe,IAAM19C,KAAKo1B,OAAO,SAAUp1B,KAAK2O,cACrD3O,KAAKqH,OAAS,KACLrH,KAAK6G,UAEV7G,KAAK29C,eACL39C,KAAK49C,eAAe59C,KAAK6G,QAAS7G,KAAK+T,YAAa/T,KAAK3O,MAAMiL,MAAO0D,KAAK0T,YAAW,EAE1F1T,KAAKkrC,eAAiB,IAAM10B,GAAMnP,OAAOrH,KAAKqH,QAAQ,GAAO,GAC7D,MAAM,aAAEsH,EAAY,YAAEoF,GAAgB3N,EACtCpG,KAAK2O,aAAeA,EACpB3O,KAAK69C,WAAa,IAAKlvC,GACvB3O,KAAK89C,cAAgBzsD,EAAMwS,QAAU,IAAK8K,GAAiB,CAAC,EAC5D3O,KAAK+T,YAAcA,EACnB/T,KAAKsG,OAASA,EACdtG,KAAK3O,MAAQA,EACb2O,KAAKwG,gBAAkBA,EACvBxG,KAAK4sC,MAAQtmC,EAASA,EAAOsmC,MAAQ,EAAI,EACzC5sC,KAAKyG,oBAAsBA,EAC3BzG,KAAK9B,QAAUA,EACf8B,KAAKuD,sBAAwBA,EAAsBlS,GACnD2O,KAAK0D,cAAgBA,EAAcrS,GAC/B2O,KAAK0D,gBACL1D,KAAKo5B,gBAAkB,IAAIj5B,KAE/BH,KAAKi7B,uBAAyBj/B,QAAQsK,GAAUA,EAAOO,SAWvD,MAAM,WAAE4xB,KAAeslB,GAAwB/9C,KAAKkU,4BAA4B7iB,EAAO,CAAC,GACxF,IAAK,MAAMgL,KAAO0hD,EAAqB,CACnC,MAAMjkD,EAAQikD,EAAoB1hD,QACRlD,IAAtBwV,EAAatS,IAAsBiN,EAAcxP,KACjDA,EAAM8O,IAAI+F,EAAatS,IAAM,GACzBy4B,GAAwB2D,IACxBA,EAAWr4B,IAAI/D,GAG3B,CACJ,CAQA6X,2BAAAA,CAA4B8pC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACAl2C,KAAAA,CAAMD,GACF9H,KAAK6G,QAAUiB,EACfm1C,GAAmBr0C,IAAId,EAAU9H,MAC7BA,KAAK0T,aAAe1T,KAAK0T,WAAW5L,UACpC9H,KAAK0T,WAAW3L,MAAMD,GAEtB9H,KAAKsG,QAAUtG,KAAK0D,gBAAkB1D,KAAKuD,wBAC3CvD,KAAKk+C,sBAAwBl+C,KAAKsG,OAAO63C,gBAAgBn+C,OAE7DA,KAAKtD,OAAOa,SAAQ,CAACzD,EAAOuC,IAAQ2D,KAAKo+C,kBAAkB/hD,EAAKvC,KAC3DkjD,GAAyBn2C,SC1JtC,WAEI,GADAm2C,GAAyBn2C,SAAU,EAC9B5H,EAEL,GAAIiI,OAAOm3C,WAAY,CACnB,MAAMC,EAAmBp3C,OAAOm3C,WAAW,4BACrCE,EAA8BA,IAAOxB,GAAqBl2C,QAAUy3C,EAAiBpgC,QAC3FogC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBl2C,SAAU,CAEvC,CD8IY43C,GAEJz+C,KAAKg5B,mBAC4B,UAA7Bh5B,KAAKyG,sBAE8B,WAA7BzG,KAAKyG,qBAEDs2C,GAAqBl2C,SAI/B7G,KAAKsG,QACLtG,KAAKsG,OAAO7O,SAAS2I,IAAIJ,MAC7BA,KAAKgH,OAAOhH,KAAK3O,MAAO2O,KAAKwG,gBACjC,CACAwB,OAAAA,GACIi1C,GAAmBx8C,OAAOT,KAAK6G,SAC/B7G,KAAK0T,YAAc1T,KAAK0T,WAAW1L,UACnCyO,GAAYzW,KAAK09C,cACjBjnC,GAAYzW,KAAKqH,QACjBrH,KAAKu9C,mBAAmBhgD,SAASgD,GAAWA,MAC5CP,KAAKk+C,uBAAyBl+C,KAAKk+C,wBACnCl+C,KAAKsG,QAAUtG,KAAKsG,OAAO7O,SAASgJ,OAAOT,MAC3C,IAAK,MAAM3D,KAAO2D,KAAK41B,OACnB51B,KAAK41B,OAAOv5B,GAAKqE,QAErB,IAAK,MAAMrE,KAAO2D,KAAK2F,SACnB3F,KAAK2F,SAAStJ,GAAK2L,UAEvBhI,KAAK6G,QAAU,IACnB,CACAu3C,iBAAAA,CAAkB/hD,EAAKvC,GACnB,MAAM4kD,EAAmBv1C,EAAe7I,IAAIjE,GACtCsiD,EAAiB7kD,EAAMy8B,GAAG,UAAWqoB,IACvC5+C,KAAK2O,aAAatS,GAAOuiD,EACzB5+C,KAAK3O,MAAMi9B,UACP9X,GAAMxP,OAAOhH,KAAK09C,cAAc,GAAO,GACvCgB,GAAoB1+C,KAAK0T,aACzB1T,KAAK0T,WAAWs6B,kBAAmB,EACvC,IAEE6Q,EAAwB/kD,EAAMy8B,GAAG,gBAAiBv2B,KAAKkrC,gBAC7DlrC,KAAKu9C,mBAAmB30C,IAAIvM,GAAK,KAC7BsiD,IACAE,GAAuB,GAE/B,CACAllB,gBAAAA,CAAiBnjC,GAIb,OAAKwJ,KAAK6G,SACL7G,KAAK8+C,0BACN9+C,KAAKhO,OAASwE,EAAMxE,KAGjBgO,KAAK8+C,yBAAyB9+C,KAAK6G,QAASrQ,EAAMqQ,SAF9C,CAGf,CACAjB,YAAAA,CAAY3R,EAAiC0T,EAAUrC,EAAmBoC,GAA0B,IAC5Fq3C,EACA/4C,GAFK,SAAEvO,KAAaunD,GAAe/qD,EAevC,IAAK,IAAIoG,EAAI,EAAGA,EAAI8iD,GAAa9iD,IAAK,CAClC,MAAM9H,EAAO2qD,GAAa7iD,IACpB,UAAE0K,EAAWmU,QAAS+lC,EAAkB,eAAEzF,EAAgBxzC,cAAek5C,GAA4Bp6C,EAAmBvS,GAC1HinD,IACAuF,EAA4BvF,GAC5Bz0C,EAAUi6C,MACLh/C,KAAK2F,SAASpT,IAAS0sD,IACxBj/C,KAAK2F,SAASpT,GAAQ,IAAI0sD,EAAmBj/C,OAE7Ck/C,IACAl5C,EAAgBk5C,GAG5B,CACA,IAAmB,SAAdl/C,KAAKhO,MAAiC,QAAdgO,KAAKhO,QAC7BgO,KAAK0T,YACNqrC,EAA2B,CAC3B/+C,KAAK0T,WAAa,IAAIqrC,EAA0B/+C,KAAK2O,aAAc3O,KAAKsG,QAAUtG,KAAKsG,OAAOoN,YAC9F,MAAM,SAAExN,EAAQ,OAAErB,EAAM,KAAEJ,EAAI,gBAAE4/B,EAAe,aAAEoO,EAAY,WAAEzB,GAAgBgO,EAC/Eh/C,KAAK0T,WAAW40B,WAAW,CACvBpiC,WACArB,SACAutC,oBAAqBp2C,QAAQyI,IACxB4/B,GAAmBxhC,EAAYwhC,GACpCh+B,cAAerG,KACfkrC,eAAgBA,IAAMlrC,KAAKkrC,iBAQ3BsL,cAAiC,kBAAX3xC,EAAsBA,EAAS,OACrD8xC,uBAAwBjvC,EACxB+qC,eACAzB,cAER,CACA,OAAOhrC,CACX,CACAwB,cAAAA,GACI,IAAK,MAAMnL,KAAO2D,KAAK2F,SAAU,CAC7B,MAAMw5C,EAAUn/C,KAAK2F,SAAStJ,GAC1B8iD,EAAQ/lC,UACR+lC,EAAQn4C,UAGRm4C,EAAQp3C,QACRo3C,EAAQ/lC,WAAY,EAE5B,CACJ,CACAukC,YAAAA,GACI39C,KAAKo/C,MAAMp/C,KAAK+T,YAAa/T,KAAK2O,aAAc3O,KAAK9B,QAAS8B,KAAK3O,MACvE,CAMAwwC,kBAAAA,GACI,OAAO7hC,KAAK6G,QACN7G,KAAKq/C,2BAA2Br/C,KAAK6G,QAAS7G,KAAK3O,OACnD+uC,IACV,CACAkf,cAAAA,CAAejjD,GACX,OAAO2D,KAAK2O,aAAatS,EAC7B,CACA26C,cAAAA,CAAe36C,EAAKvC,GAChBkG,KAAK2O,aAAatS,GAAOvC,CAC7B,CAQAk+B,oBAAAA,CAAqBpoB,GAA0B,IAAlB2vC,IAAStmD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAClC,OAAO+G,KAAKw/C,iCAAiC5vC,EAAQ2vC,EACzD,CAKAv4C,MAAAA,CAAO3V,EAAOmV,IACNnV,EAAMud,mBAAqB5O,KAAK3O,MAAMud,oBACtC5O,KAAKkrC,iBAETlrC,KAAKmU,UAAYnU,KAAK3O,MACtB2O,KAAK3O,MAAQA,EACb2O,KAAKw8B,oBAAsBx8B,KAAKwG,gBAChCxG,KAAKwG,gBAAkBA,EAIvB,IAAK,IAAInM,EAAI,EAAGA,EAAI+iD,GAAkBlkD,OAAQmB,IAAK,CAC/C,MAAMgC,EAAM+gD,GAAkB/iD,GAC1B2F,KAAKy9C,uBAAuBphD,KAC5B2D,KAAKy9C,uBAAuBphD,YACrB2D,KAAKy9C,uBAAuBphD,IAEvC,MAAMojD,EAAWpuD,EAAM,KAAOgL,GAC1BojD,IACAz/C,KAAKy9C,uBAAuBphD,GAAO2D,KAAKu2B,GAAGl6B,EAAKojD,GAExD,CACAz/C,KAAKw9C,iBE9Ub,SAAqChqC,EAASzc,EAAMsnB,GAChD,MAAM,WAAEoa,GAAe1hC,EACvB,IAAK,MAAMsF,KAAOtF,EAAM,CACpB,MAAM2oD,EAAY3oD,EAAKsF,GACjBsjD,EAAYthC,EAAKhiB,GACvB,GAAIiN,EAAco2C,GAKdlsC,EAAQskB,SAASz7B,EAAKqjD,GAClB5qB,GAAwB2D,IACxBA,EAAWr4B,IAAI/D,QAUlB,GAAIiN,EAAcq2C,GAKnBnsC,EAAQskB,SAASz7B,EAAKk7B,GAAYmoB,EAAW,CAAEluB,MAAOhe,KAClDshB,GAAwB2D,IACxBA,EAAWl4B,OAAOlE,QAGrB,GAAIsjD,IAAcD,EAMnB,GAAIlsC,EAAQqkB,SAASx7B,GAAM,CACvB,MAAMujD,EAAgBpsC,EAAQ5V,SAASvB,IAEtCujD,EAAczpB,aAAeypB,EAAch3C,IAAI82C,EACpD,KACK,CACD,MAAMd,EAAcprC,EAAQ8rC,eAAejjD,GAC3CmX,EAAQskB,SAASz7B,EAAKk7B,QAA4Bp+B,IAAhBylD,EAA4BA,EAAcc,EAAW,CAAEluB,MAAOhe,IACpG,CAER,CAEA,IAAK,MAAMnX,KAAOgiB,OACIllB,IAAdpC,EAAKsF,IACLmX,EAAQqsC,YAAYxjD,GAE5B,OAAOtF,CACX,CFuRgC+oD,CAA4B9/C,KAAMA,KAAKkU,4BAA4B7iB,EAAO2O,KAAKmU,WAAYnU,KAAKw9C,kBACpHx9C,KAAK+/C,wBACL//C,KAAK+/C,wBAEb,CACArmC,QAAAA,GACI,OAAO1Z,KAAK3O,KAChB,CAIA2uD,UAAAA,CAAWztD,GACP,OAAOyN,KAAK3O,MAAMsS,SAAW3D,KAAK3O,MAAMsS,SAASpR,QAAQ4G,CAC7D,CAIAg5B,oBAAAA,GACI,OAAOnyB,KAAK3O,MAAMgD,UACtB,CACA0vC,qBAAAA,GACI,OAAO/jC,KAAK3O,MAAMsN,kBACtB,CACAshD,qBAAAA,GACI,OAAOjgD,KAAK0D,cACN1D,KACAA,KAAKsG,OACDtG,KAAKsG,OAAO25C,6BACZ9mD,CACd,CACAshC,iBAAAA,GACI,GAD2BxhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEvB,OAAO+G,KAAKsG,OAAStG,KAAKsG,OAAOm0B,yBAAsBthC,EAE3D,IAAK6G,KAAKuD,sBAAuB,CAC7B,MAAMO,EAAU9D,KAAKsG,QACftG,KAAKsG,OAAOm0B,qBACZ,CAAC,EAIP,YAH2BthC,IAAvB6G,KAAK3O,MAAMwS,UACXC,EAAQD,QAAU7D,KAAK3O,MAAMwS,SAE1BC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIzJ,EAAI,EAAGA,EAAIgjD,GAAiBhjD,IAAK,CACtC,MAAM9H,EAAO+Q,EAAajJ,GACpB+J,EAAOpE,KAAK3O,MAAMkB,IACpB0Q,EAAemB,KAAkB,IAATA,KACxBN,EAAQvR,GAAQ6R,EAExB,CACA,OAAON,CACX,CAIAq6C,eAAAA,CAAgBhiD,GACZ,MAAM+jD,EAAqBlgD,KAAKigD,wBAChC,GAAIC,EAGA,OAFAA,EAAmB9mB,iBACf8mB,EAAmB9mB,gBAAgBh5B,IAAIjE,GACpC,IAAM+jD,EAAmB9mB,gBAAgB34B,OAAOtE,EAE/D,CAIA27B,QAAAA,CAASz7B,EAAKvC,GAENA,IAAUkG,KAAKtD,OAAOgM,IAAIrM,KAC1B2D,KAAK6/C,YAAYxjD,GACjB2D,KAAKo+C,kBAAkB/hD,EAAKvC,IAEhCkG,KAAKtD,OAAOkM,IAAIvM,EAAKvC,GACrBkG,KAAK2O,aAAatS,GAAOvC,EAAM4O,KACnC,CAIAm3C,WAAAA,CAAYxjD,GACR2D,KAAKtD,OAAO+D,OAAOpE,GACnB,MAAMm6B,EAAcx2B,KAAKu9C,mBAAmB70C,IAAIrM,GAC5Cm6B,IACAA,IACAx2B,KAAKu9C,mBAAmB98C,OAAOpE,WAE5B2D,KAAK2O,aAAatS,GACzB2D,KAAKmgD,2BAA2B9jD,EAAK2D,KAAK+T,YAC9C,CAIA8jB,QAAAA,CAASx7B,GACL,OAAO2D,KAAKtD,OAAO4D,IAAIjE,EAC3B,CACAuB,QAAAA,CAASvB,EAAKo2B,GACV,GAAIzyB,KAAK3O,MAAMqL,QAAUsD,KAAK3O,MAAMqL,OAAOL,GACvC,OAAO2D,KAAK3O,MAAMqL,OAAOL,GAE7B,IAAIvC,EAAQkG,KAAKtD,OAAOgM,IAAIrM,GAK5B,YAJclD,IAAVW,QAAwCX,IAAjBs5B,IACvB34B,EAAQy9B,GAAY9E,EAAc,CAAEjB,MAAOxxB,OAC3CA,KAAK83B,SAASz7B,EAAKvC,IAEhBA,CACX,CAMAsmD,SAAAA,CAAU/jD,GACN,IAAI4U,EACJ,YAAkC9X,IAA3B6G,KAAK2O,aAAatS,IAAuB2D,KAAK6G,QAES,QAAvDoK,EAAKjR,KAAKqgD,uBAAuBrgD,KAAK3O,MAAOgL,UAAyB,IAAP4U,EAAgBA,EAAKjR,KAAKsgD,sBAAsBtgD,KAAK6G,QAASxK,EAAK2D,KAAK9B,SADxI8B,KAAK2O,aAAatS,EAE5B,CAKAkkD,aAAAA,CAAclkD,EAAKvC,GACfkG,KAAK69C,WAAWxhD,GAAOvC,CAC3B,CAKAgiC,aAAAA,CAAcz/B,GACV,IAAI4U,EACJ,MAAM,QAAEpN,GAAY7D,KAAK3O,MACnBmvD,EAAsC,kBAAZ38C,GAA2C,kBAAZA,EACD,QAAvDoN,EAAKwD,GAAwBzU,KAAK3O,MAAOwS,UAA6B,IAAPoN,OAAgB,EAASA,EAAG5U,QAC5FlD,EAIN,GAAI0K,QAAgC1K,IAArBqnD,EACX,OAAOA,EAMX,MAAM5wC,EAAS5P,KAAKqgD,uBAAuBrgD,KAAK3O,MAAOgL,GACvD,YAAelD,IAAXyW,GAAyBtG,EAAcsG,QAMRzW,IAA5B6G,KAAK89C,cAAczhD,SACDlD,IAArBqnD,OACErnD,EACA6G,KAAK69C,WAAWxhD,GARXuT,CASf,CACA2mB,EAAAA,CAAGpf,EAAWtV,GAIV,OAHK7B,KAAK41B,OAAOze,KACbnX,KAAK41B,OAAOze,GAAa,IAAI+d,IAE1Bl1B,KAAK41B,OAAOze,GAAW/W,IAAIyB,EACtC,CACAuzB,MAAAA,CAAOje,GACH,GAAInX,KAAK41B,OAAOze,GAAY,SAAAkB,EAAApf,UAAAC,OADX02C,EAAI,IAAA11C,MAAAme,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJq3B,EAAIr3B,EAAA,GAAAtf,UAAAsf,GAEjBvY,KAAK41B,OAAOze,GAAWie,UAAUwa,EACrC,CACJ,EGrfJ,MAAM6Q,WAAyBnD,GAC3BwB,wBAAAA,CAAyB5mC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEwoC,wBAAwBvoC,GAAS,GAAK,CACnD,CACAkoC,sBAAAA,CAAuBhvD,EAAOgL,GAC1B,OAAOhL,EAAMiL,MAAQjL,EAAMiL,MAAMD,QAAOlD,CAC5C,CACAgnD,0BAAAA,CAA2B9jD,EAAG7J,GAAmB,IAAjB,KAAEW,EAAI,MAAEmJ,GAAO9J,SACpCW,EAAKkJ,UACLC,EAAMD,EACjB,CACAmjD,gCAAAA,CAAgCvrD,EAA2CmlB,GAAW,IAArD,WAAE/kB,EAAU,cAAE+hB,KAAkBxG,GAAQ3b,EACrE,MAAMkd,EnDqFd,SAAmBvB,EAAQvb,EAAYgS,GACnC,MAAM8K,EAAS,CAAC,EAChB,IAAK,MAAM9U,KAAOuT,EAAQ,CACtB,MAAM+wC,EAAmB1oB,GAAwB57B,EAAKhI,GACtD,QAAyB8E,IAArBwnD,EACAxvC,EAAO9U,GAAOskD,MAEb,CACD,MAAM7mD,EAAQuM,EAAczI,SAASvB,GACjCvC,IACAqX,EAAO9U,GAAOvC,EAAM4O,MAE5B,CACJ,CACA,OAAOyI,CACX,CmDpGuByvC,CAAUhxC,EAAQvb,GAAc,CAAC,EAAG2L,MACnD,GAAIoZ,EAAW,EnD+BvB,SAAiC/S,EAAeuJ,EAAQuB,GACpD,IAAIF,EAAI2U,EACR,MAAMi7B,EAAe5jD,OAAOC,KAAK0S,GAAQ7T,QAAQM,IAASgK,EAAcwxB,SAASx7B,KAC3EykD,EAAeD,EAAa3nD,OD5CfgK,MC6CnB,GAAK49C,EAEL,IAAK,IAAIzmD,EAAI,EAAGA,EAAIymD,EAAczmD,IAAK,CACnC,MAAMgC,EAAMwkD,EAAaxmD,GACnB0mD,EAAcnxC,EAAOvT,GAC3B,IAAIvC,EAAQ,KAKRI,MAAMiJ,QAAQ49C,KACdjnD,EAAQinD,EAAY,IAOV,OAAVjnD,IACAA,EAAoG,QAA3F8rB,EAA4B,QAAtB3U,EAAKE,EAAO9U,UAAyB,IAAP4U,EAAgBA,EAAK5K,EAAc+5C,UAAU/jD,UAAyB,IAAPupB,EAAgBA,EAAKhW,EAAOvT,SAM9HlD,IAAVW,GAAiC,OAAVA,IAEN,kBAAVA,IACNi7B,GAAkBj7B,IAAUw5B,GAAkBx5B,IAE/CA,EAAQyQ,WAAWzQ,ID3ERoJ,EC6ESpJ,GD7EH69B,GAAWxT,KAAKqT,GAAct0B,KC6EjByiB,GAAQ3c,KAAK+3C,KAC3CjnD,EAAQgsB,GAAkBzpB,EAAK0kD,KAEnC16C,EAAcyxB,SAASz7B,EAAKk7B,GAAYz9B,EAAO,CAAE03B,MAAOnrB,UACpClN,IAAhBgY,EAAO9U,KACP8U,EAAO9U,GAAOvC,GAEJ,OAAVA,GACAuM,EAAck6C,cAAclkD,EAAKvC,GACzC,CACJ,CmD5EYknD,CAAwBhhD,KAAM4P,EAAQuB,GACtC,MAAM4U,EAAS82B,GAAgB78C,KAAM4P,EAAQuB,EAAQiF,GACrDA,EAAgB2P,EAAO3P,cACvBxG,EAASmW,EAAOnW,MACpB,CACA,MAAO,CACHvb,aACA+hB,mBACGxG,EAEX,ECpBJ,MAAMqxC,WAA0BR,GAC5B1gD,WAAAA,GACIub,SAASriB,WACT+G,KAAKhO,KAAO,MAChB,CACAsuD,qBAAAA,CAAsBx4C,EAAUzL,GAC5B,GAAI8M,EAAe7I,IAAIjE,GAAM,CACzB,MAAM6kD,EAAc9tB,GAAoB/2B,GACxC,OAAO6kD,GAAcA,EAAYzwD,SAAe,CACpD,CACK,CACD,MAAM0wD,GAdQ3tC,EAcyB1L,EAbxCZ,OAAOyxC,iBAAiBnlC,IAcjB1Z,GAASkQ,EAAkB3N,GAC3B8kD,EAAcpH,iBAAiB19C,GAC/B8kD,EAAc9kD,KAAS,EAC7B,MAAwB,kBAAVvC,EAAqBA,EAAM0V,OAAS1V,CACtD,CAnBR,IAA0B0Z,CAoBtB,CACA6rC,0BAAAA,CAA2Bv3C,EAAQtV,GAA0B,IAAxB,mBAAEmM,GAAoBnM,EACvD,OAAOqvC,GAAmB/5B,EAAUnJ,EACxC,CACAygD,KAAAA,CAAMrrC,EAAapF,EAAczQ,EAAS7M,GACtCqd,GAAgBqF,EAAapF,EAAczQ,EAAS7M,EAAMud,kBAC9D,CACAsF,2BAAAA,CAA4B7iB,EAAO8iB,GAC/B,OAAOD,GAA4B7iB,EAAO8iB,EAC9C,CACA4rC,sBAAAA,GACQ//C,KAAKohD,oBACLphD,KAAKohD,2BACEphD,KAAKohD,mBAEhB,MAAM,SAAE3pD,GAAauI,KAAK3O,MACtBiY,EAAc7R,KACduI,KAAKohD,kBAAoB3pD,EAAS8+B,GAAG,UAAWvkB,IACxChS,KAAK6G,UACL7G,KAAK6G,QAAQw6C,YAAc,GAAH3vD,OAAMsgB,GAAQ,IAGtD,CACA4rC,cAAAA,CAAe91C,EAAUiM,EAAaN,EAAWC,GAC7CH,GAAWzL,EAAUiM,EAAaN,EAAWC,EACjD,EC5CJ,MAAM4tC,WAAyBb,GAC3B1gD,WAAAA,GACIub,SAASriB,WACT+G,KAAKhO,KAAO,MACZgO,KAAKyR,UAAW,CACpB,CACA4uC,sBAAAA,CAAuBhvD,EAAOgL,GAC1B,OAAOhL,EAAMgL,EACjB,CACAikD,qBAAAA,CAAsBx4C,EAAUzL,GAC5B,GAAI8M,EAAe7I,IAAIjE,GAAM,CACzB,MAAM6kD,EAAc9tB,GAAoB/2B,GACxC,OAAO6kD,GAAcA,EAAYzwD,SAAe,CACpD,CAEA,OADA4L,EAAOwX,GAAoBvT,IAAIjE,GAA0BA,EAAnBmD,EAAYnD,GAC3CyL,EAASy5C,aAAallD,EACjC,CACAgjD,0BAAAA,GACI,OAAOjf,IACX,CACAlsB,2BAAAA,CAA4B7iB,EAAO8iB,GAC/B,OAAOD,GAA4B7iB,EAAO8iB,EAC9C,CACAirC,KAAAA,CAAMrrC,EAAapF,EAAczQ,EAAS7M,GACtCmgB,GAAcuC,EAAapF,EAAczQ,EAAS8B,KAAKyR,SAAUpgB,EAAMud,kBAC3E,CACAgvC,cAAAA,CAAe91C,EAAUiM,EAAaN,EAAWC,GAC7CI,GAAUhM,EAAUiM,EAAaN,EAAWC,EAChD,CACA3L,KAAAA,CAAMD,GACF9H,KAAKyR,SAAWA,GAAS3J,EAASkP,SAClCsE,MAAMvT,MAAMD,EAChB,ECvCJ,MAAM05C,GAAyBA,CAAC97C,EAAWxH,IAChC4K,EAAepD,GAChB,IAAI47C,GAAiBpjD,EAAS,CAAEkR,4BAA4B,IAC5D,IAAI6xC,GAAkB/iD,EAAS,CAAEkR,4BAA4B,ICEjE9J,GAAoB,IACnBozB,MACArd,MACA5W,MCTQ,CACXI,OAAQ,CACJ20C,eAAgBf,GAChBzyC,cAAaA,MDefy7C,GAAuBr5C,GAAkB,CAAC1C,EAAW2P,IEhB3D,SAA+B3P,EAASlT,EAAkC8S,EAAmBC,GAAqB,IAAxE,mBAAEyN,GAAqB,GAAOxgB,EAIpE,MAAO,IAHYsW,EAAepD,GAC5BiR,GACAM,GAGF3R,oBACAE,UAAWuN,GAAgBC,GAC3BzN,sBACAG,YAER,CFKsEg8C,CAAsBh8C,EAAW2P,EAAQ/P,GAAmBk8C,K","sources":["../node_modules/@mui/icons-material/DeleteForever.js","../node_modules/@mui/material/Pagination/paginationClasses.js","../node_modules/@mui/material/usePagination/usePagination.js","../node_modules/@mui/material/PaginationItem/paginationItemClasses.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/NavigateBefore.js","../node_modules/@mui/material/internal/svg-icons/NavigateNext.js","../node_modules/@mui/material/PaginationItem/PaginationItem.js","../node_modules/@mui/material/Pagination/Pagination.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getPaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiPagination', slot);\n}\nconst paginationClasses = generateUtilityClasses('MuiPagination', ['root', 'ul', 'outlined', 'text']);\nexport default paginationClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"boundaryCount\", \"componentName\", \"count\", \"defaultPage\", \"disabled\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"showFirstButton\", \"showLastButton\", \"siblingCount\"];\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nexport default function usePagination(props = {}) {\n  // keep default values in sync with @default tags in Pagination.propTypes\n  const {\n      boundaryCount = 1,\n      componentName = 'usePagination',\n      count = 1,\n      defaultPage = 1,\n      disabled = false,\n      hideNextButton = false,\n      hidePrevButton = false,\n      onChange: handleChange,\n      page: pageProp,\n      showFirstButton = false,\n      showLastButton = false,\n      siblingCount = 1\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [page, setPageState] = useControlled({\n    controlled: pageProp,\n    default: defaultPage,\n    name: componentName,\n    state: 'page'\n  });\n  const handleClick = (event, value) => {\n    if (!pageProp) {\n      setPageState(value);\n    }\n    if (handleChange) {\n      handleChange(event, value);\n    }\n  };\n\n  // https://dev.to/namirsab/comment/2050\n  const range = (start, end) => {\n    const length = end - start + 1;\n    return Array.from({\n      length\n    }, (_, i) => start + i);\n  };\n  const startPages = range(1, Math.min(boundaryCount, count));\n  const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n  const siblingsStart = Math.max(Math.min(\n  // Natural start\n  page - siblingCount,\n  // Lower boundary when page is high\n  count - boundaryCount - siblingCount * 2 - 1),\n  // Greater than startPages\n  boundaryCount + 2);\n  const siblingsEnd = Math.min(Math.max(\n  // Natural end\n  page + siblingCount,\n  // Upper boundary when page is low\n  boundaryCount + siblingCount * 2 + 2),\n  // Less than endPages\n  endPages.length > 0 ? endPages[0] - 2 : count - 1);\n\n  // Basic list of items to render\n  // e.g. itemList = ['first', 'previous', 1, 'ellipsis', 4, 5, 6, 'ellipsis', 10, 'next', 'last']\n  const itemList = [...(showFirstButton ? ['first'] : []), ...(hidePrevButton ? [] : ['previous']), ...startPages,\n  // Start ellipsis\n  // eslint-disable-next-line no-nested-ternary\n  ...(siblingsStart > boundaryCount + 2 ? ['start-ellipsis'] : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1] : []),\n  // Sibling pages\n  ...range(siblingsStart, siblingsEnd),\n  // End ellipsis\n  // eslint-disable-next-line no-nested-ternary\n  ...(siblingsEnd < count - boundaryCount - 1 ? ['end-ellipsis'] : count - boundaryCount > boundaryCount ? [count - boundaryCount] : []), ...endPages, ...(hideNextButton ? [] : ['next']), ...(showLastButton ? ['last'] : [])];\n\n  // Map the button type to its page number\n  const buttonPage = type => {\n    switch (type) {\n      case 'first':\n        return 1;\n      case 'previous':\n        return page - 1;\n      case 'next':\n        return page + 1;\n      case 'last':\n        return count;\n      default:\n        return null;\n    }\n  };\n\n  // Convert the basic item list to PaginationItem props objects\n  const items = itemList.map(item => {\n    return typeof item === 'number' ? {\n      onClick: event => {\n        handleClick(event, item);\n      },\n      type: 'page',\n      page: item,\n      selected: item === page,\n      disabled,\n      'aria-current': item === page ? 'true' : undefined\n    } : {\n      onClick: event => {\n        handleClick(event, buttonPage(item));\n      },\n      type: item,\n      page: buttonPage(item),\n      selected: false,\n      disabled: disabled || item.indexOf('ellipsis') === -1 && (item === 'next' || item === 'last' ? page >= count : page <= 1)\n    };\n  });\n  return _extends({\n    items\n  }, other);\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getPaginationItemUtilityClass(slot) {\n  return generateUtilityClass('MuiPaginationItem', slot);\n}\nconst paginationItemClasses = generateUtilityClasses('MuiPaginationItem', ['root', 'page', 'sizeSmall', 'sizeLarge', 'text', 'textPrimary', 'textSecondary', 'outlined', 'outlinedPrimary', 'outlinedSecondary', 'rounded', 'ellipsis', 'firstLast', 'previousNext', 'focusVisible', 'disabled', 'selected', 'icon']);\nexport default paginationItemClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'NavigateBefore');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"components\", \"disabled\", \"page\", \"selected\", \"shape\", \"size\", \"slots\", \"type\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport useThemeProps from '../styles/useThemeProps';\nimport paginationItemClasses, { getPaginationItemUtilityClass } from './paginationItemClasses';\nimport useTheme from '../styles/useTheme';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport NavigateBeforeIcon from '../internal/svg-icons/NavigateBefore';\nimport NavigateNextIcon from '../internal/svg-icons/NavigateNext';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.variant === 'text' && styles[`text${capitalize(ownerState.color)}`], ownerState.variant === 'outlined' && styles[`outlined${capitalize(ownerState.color)}`], ownerState.shape === 'rounded' && styles.rounded, ownerState.type === 'page' && styles.page, (ownerState.type === 'start-ellipsis' || ownerState.type === 'end-ellipsis') && styles.ellipsis, (ownerState.type === 'previous' || ownerState.type === 'next') && styles.previousNext, (ownerState.type === 'first' || ownerState.type === 'last') && styles.firstLast];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disabled,\n    selected,\n    size,\n    shape,\n    type,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', `size${capitalize(size)}`, variant, shape, color !== 'standard' && `${variant}${capitalize(color)}`, disabled && 'disabled', selected && 'selected', {\n      page: 'page',\n      first: 'firstLast',\n      last: 'firstLast',\n      'start-ellipsis': 'ellipsis',\n      'end-ellipsis': 'ellipsis',\n      previous: 'previousNext',\n      next: 'previousNext'\n    }[type]],\n    icon: ['icon']\n  };\n  return composeClasses(slots, getPaginationItemUtilityClass, classes);\n};\nconst PaginationItemEllipsis = styled('div', {\n  name: 'MuiPaginationItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  borderRadius: 32 / 2,\n  textAlign: 'center',\n  boxSizing: 'border-box',\n  minWidth: 32,\n  padding: '0 6px',\n  margin: '0 3px',\n  color: (theme.vars || theme).palette.text.primary,\n  height: 'auto',\n  [`&.${paginationItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.size === 'small' && {\n  minWidth: 26,\n  borderRadius: 26 / 2,\n  margin: '0 1px',\n  padding: '0 4px'\n}, ownerState.size === 'large' && {\n  minWidth: 40,\n  borderRadius: 40 / 2,\n  padding: '0 10px',\n  fontSize: theme.typography.pxToRem(15)\n}));\nconst PaginationItemPage = styled(ButtonBase, {\n  name: 'MuiPaginationItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  borderRadius: 32 / 2,\n  textAlign: 'center',\n  boxSizing: 'border-box',\n  minWidth: 32,\n  height: 32,\n  padding: '0 6px',\n  margin: '0 3px',\n  color: (theme.vars || theme).palette.text.primary,\n  [`&.${paginationItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${paginationItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  transition: theme.transitions.create(['color', 'background-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${paginationItemClasses.selected}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette.action.selected\n      }\n    },\n    [`&.${paginationItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    },\n    [`&.${paginationItemClasses.disabled}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.action.disabled,\n      backgroundColor: (theme.vars || theme).palette.action.selected\n    }\n  }\n}, ownerState.size === 'small' && {\n  minWidth: 26,\n  height: 26,\n  borderRadius: 26 / 2,\n  margin: '0 1px',\n  padding: '0 4px'\n}, ownerState.size === 'large' && {\n  minWidth: 40,\n  height: 40,\n  borderRadius: 40 / 2,\n  padding: '0 10px',\n  fontSize: theme.typography.pxToRem(15)\n}, ownerState.shape === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'text' && {\n  [`&.${paginationItemClasses.selected}`]: _extends({}, ownerState.color !== 'standard' && {\n    color: (theme.vars || theme).palette[ownerState.color].contrastText,\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n      }\n    },\n    [`&.${paginationItemClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n    }\n  }, {\n    [`&.${paginationItemClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  })\n}, ownerState.variant === 'outlined' && {\n  border: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n  [`&.${paginationItemClasses.selected}`]: _extends({}, ownerState.color !== 'standard' && {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)}`,\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.activatedOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / calc(${theme.vars.palette.action.activatedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${paginationItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / calc(${theme.vars.palette.action.activatedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette[ownerState.color].main, theme.palette.action.activatedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, {\n    [`&.${paginationItemClasses.disabled}`]: {\n      borderColor: (theme.vars || theme).palette.action.disabledBackground,\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  })\n}));\nconst PaginationItemPageIcon = styled('div', {\n  name: 'MuiPaginationItem',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: theme.typography.pxToRem(20),\n  margin: '0 -8px'\n}, ownerState.size === 'small' && {\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  fontSize: theme.typography.pxToRem(22)\n}));\nconst PaginationItem = /*#__PURE__*/React.forwardRef(function PaginationItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaginationItem'\n  });\n  const {\n      className,\n      color = 'standard',\n      component,\n      components = {},\n      disabled = false,\n      page,\n      selected = false,\n      shape = 'circular',\n      size = 'medium',\n      slots = {},\n      type = 'page',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    selected,\n    shape,\n    size,\n    type,\n    variant\n  });\n  const theme = useTheme();\n  const classes = useUtilityClasses(ownerState);\n  const normalizedIcons = theme.direction === 'rtl' ? {\n    previous: slots.next || components.next || NavigateNextIcon,\n    next: slots.previous || components.previous || NavigateBeforeIcon,\n    last: slots.first || components.first || FirstPageIcon,\n    first: slots.last || components.last || LastPageIcon\n  } : {\n    previous: slots.previous || components.previous || NavigateBeforeIcon,\n    next: slots.next || components.next || NavigateNextIcon,\n    first: slots.first || components.first || FirstPageIcon,\n    last: slots.last || components.last || LastPageIcon\n  };\n  const Icon = normalizedIcons[type];\n  return type === 'start-ellipsis' || type === 'end-ellipsis' ? /*#__PURE__*/_jsx(PaginationItemEllipsis, {\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    children: \"\\u2026\"\n  }) : /*#__PURE__*/_jsxs(PaginationItemPage, _extends({\n    ref: ref,\n    ownerState: ownerState,\n    component: component,\n    disabled: disabled,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: [type === 'page' && page, Icon ? /*#__PURE__*/_jsx(PaginationItemPageIcon, {\n      as: Icon,\n      ownerState: ownerState,\n      className: classes.icon\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? PaginationItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The active color.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'standard']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    first: PropTypes.elementType,\n    last: PropTypes.elementType,\n    next: PropTypes.elementType,\n    previous: PropTypes.elementType\n  }),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The current page number.\n   */\n  page: PropTypes.node,\n  /**\n   * If `true` the pagination item is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The shape of the pagination item.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    first: PropTypes.elementType,\n    last: PropTypes.elementType,\n    next: PropTypes.elementType,\n    previous: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of pagination item.\n   * @default 'page'\n   */\n  type: PropTypes.oneOf(['end-ellipsis', 'first', 'last', 'next', 'page', 'previous', 'start-ellipsis']),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default PaginationItem;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"boundaryCount\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { integerPropType } from '@mui/utils';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getPaginationUtilityClass } from './paginationClasses';\nimport usePagination from '../usePagination';\nimport PaginationItem from '../PaginationItem';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant],\n    ul: ['ul']\n  };\n  return composeClasses(slots, getPaginationUtilityClass, classes);\n};\nconst PaginationRoot = styled('nav', {\n  name: 'MuiPagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant]];\n  }\n})({});\nconst PaginationUl = styled('ul', {\n  name: 'MuiPagination',\n  slot: 'Ul',\n  overridesResolver: (props, styles) => styles.ul\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return `${selected ? '' : 'Go to '}page ${page}`;\n  }\n  return `Go to ${type} page`;\n}\nconst Pagination = /*#__PURE__*/React.forwardRef(function Pagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPagination'\n  });\n  const {\n      boundaryCount = 1,\n      className,\n      color = 'standard',\n      count = 1,\n      defaultPage = 1,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      hideNextButton = false,\n      hidePrevButton = false,\n      renderItem = item => /*#__PURE__*/_jsx(PaginationItem, _extends({}, item)),\n      shape = 'circular',\n      showFirstButton = false,\n      showLastButton = false,\n      siblingCount = 1,\n      size = 'medium',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    items\n  } = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  }));\n  const ownerState = _extends({}, props, {\n    boundaryCount,\n    color,\n    count,\n    defaultPage,\n    disabled,\n    getItemAriaLabel,\n    hideNextButton,\n    hidePrevButton,\n    renderItem,\n    shape,\n    showFirstButton,\n    showLastButton,\n    siblingCount,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(PaginationRoot, _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: /*#__PURE__*/_jsx(PaginationUl, {\n      className: classes.ul,\n      ownerState: ownerState,\n      children: items.map((item, index) => /*#__PURE__*/_jsx(\"li\", {\n        children: renderItem(_extends({}, item, {\n          color,\n          'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n          shape,\n          size,\n          variant\n        }))\n      }, index))\n    })\n  }));\n});\n\n// @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: integerPropType,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The active color.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'standard']), PropTypes.string]),\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: integerPropType,\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: integerPropType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.ChangeEvent<unknown>} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The current page.\n   */\n  page: integerPropType,\n  /**\n   * Render the item.\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   * @default (item) => <PaginationItem {...item} />\n   */\n  renderItem: PropTypes.func,\n  /**\n   * The shape of the pagination items.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: integerPropType,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Pagination;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","getPaginationUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","getPaginationItemUtilityClass","createSvgIcon","_jsx","overridesResolver","props","styles","ownerState","root","variant","concat","capitalize","size","color","shape","rounded","type","page","ellipsis","previousNext","firstLast","PaginationItemEllipsis","styled","name","_ref","theme","_extends","typography","body2","borderRadius","textAlign","boxSizing","minWidth","padding","margin","vars","palette","text","primary","height","paginationItemClasses","disabled","opacity","action","disabledOpacity","fontSize","pxToRem","PaginationItemPage","ButtonBase","_ref2","focusVisible","backgroundColor","focus","transition","transitions","create","duration","short","hover","selected","selectedChannel","selectedOpacity","hoverOpacity","alpha","focusOpacity","_ref3","contrastText","main","dark","border","common","onBackgroundChannel","mode","mainChannel","activatedOpacity","borderColor","disabledBackground","PaginationItemPageIcon","icon","_ref4","React","inProps","ref","useThemeProps","className","component","components","slots","other","_objectWithoutPropertiesLoose","useTheme","classes","first","last","previous","next","composeClasses","useUtilityClasses","Icon","direction","NavigateNextIcon","NavigateBeforeIcon","FirstPageIcon","LastPageIcon","clsx","children","_jsxs","as","PaginationRoot","PaginationUl","ul","display","flexWrap","alignItems","listStyle","defaultGetAriaLabel","boundaryCount","count","defaultPage","getItemAriaLabel","hideNextButton","hidePrevButton","renderItem","item","PaginationItem","showFirstButton","showLastButton","siblingCount","items","arguments","length","undefined","componentName","onChange","handleChange","pageProp","setPageState","useControlled","controlled","state","handleClick","event","value","range","start","end","Array","from","_","i","startPages","Math","min","endPages","max","siblingsStart","siblingsEnd","itemList","buttonPage","map","onClick","indexOf","usePagination","index","createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","toArray","filter","Boolean","reduce","output","child","push","key","style","flexDirection","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","createStyledComponent","StackRoot","themeProps","extendSxProp","divider","createStack","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","remove","splice","delete","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","number","parse","parseFloat","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","maxHeight","top","right","bottom","left","paddingTop","paddingRight","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","outlineColor","stroke","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}